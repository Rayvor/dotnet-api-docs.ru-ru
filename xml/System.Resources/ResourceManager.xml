<Type Name="ResourceManager" FullName="System.Resources.ResourceManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f40ddf3e36c2a3ed405b38e461b19dcaf278554b" /><Meta Name="ms.sourcegitcommit" Value="bc24a3ba616ee1df8b858f9400cae4f058ea3a7e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="06/19/2019" /><Meta Name="ms.locfileid" Value="67248693" /></Metadata><TypeSignature Language="C#" Value="public class ResourceManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit ResourceManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Resources.ResourceManager" />
  <TypeSignature Language="VB.NET" Value="Public Class ResourceManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class ResourceManager" />
  <TypeSignature Language="F#" Value="type ResourceManager = class" />
  <AssemblyInfo>
    <AssemblyName>System.Resources.ResourceManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netstandard-1.0;netstandard-1.1;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6">
      <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Представляет диспетчер ресурсов, обеспечивающий удобный доступ к ресурсам, связанным с языком и региональными параметрами, во время выполнения.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE [untrusted-data-class-note](~/includes/untrusted-data-class-note.md)]

 <xref:System.Resources.ResourceManager> Класс извлекает ресурсы из двоичный RESOURCES-файл, который внедряется в сборку или отдельном Resources-файле. Если локализованные приложения и развертывания локализованных ресурсов в [вспомогательные сборки](~/docs/framework/resources/creating-satellite-assemblies-for-desktop-apps.md), он ищет ресурсов для конкретного языка и региональных параметров, обеспечивает возврат ресурсов, если локализованный ресурс не существует и поддерживает ресурсов сериализация.  
  
 Дополнительные сведения о создании и управлении ресурсами в классических приложениях и [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] приложений, см. в следующих разделах:  
  
-   [Классические приложения](#desktop)  
  
    -   [Создание ресурсов](#creating_resources)  
  
    -   [Создание экземпляров объекта ResourceManager](#instantiating)  
  
    -   [Диспетчер ресурсов и ресурсов для конкретного языка и региональных параметров](#CultureSpecific)  
  
    -   [Извлечение ресурсов](#retrieving)  
  
    -   [Обработка исключений MissingManifestResourceException и MissingSatelliteAssemblyException исключений](#exception)  
  
    -   [Управление версиями ресурсов](#versioning)  
  
    -   [\<satelliteassemblies > узел файла конфигурации](#config)  
  
-   [Приложения Windows Store](#ws)  
  
<a name="desktop"></a>   
## <a name="desktop-apps"></a>Классические приложения  
 Для классических приложений <xref:System.Resources.ResourceManager> класс извлекает ресурсы из файлов в двоичный файл ресурсов (RESOURCES). Как правило, компилятор языка или [компоновщик сборок (AL.exe)](~/docs/framework/tools/al-exe-assembly-linker.md) внедряет эти файлы ресурсов в сборку. Можно также использовать <xref:System.Resources.ResourceManager> объекта для извлечения ресурсов непосредственно из RESOURCES-файл, который не внедрен в сборку, путем вызова <xref:System.Resources.ResourceManager.CreateFileBasedResourceManager%2A> метод.  
  
> [!CAUTION]
>  С помощью автономные файлы resources в приложении ASP.NET нарушит развертывание XCOPY, так как ресурс остается заблокированным, пока не будет явно выпускаются по <xref:System.Resources.ResourceManager.ReleaseAllResources%2A> метод. Если вы хотите развернуть ресурсы в приложениях ASP.NET, следует компилировать в RESOURCES-файлов во вспомогательные сборки.  
  
 В приложении на основе ресурсов один файл ресурсов содержит ресурсы по умолчанию языка и региональных параметров, ресурсы которого используются в том случае, если нет ресурсов для конкретного языка и региональных параметров можно найти. Например если язык и региональные параметры приложения по умолчанию является английский (en), ресурсы на английском языке используются всякий раз, когда не удается найти локализованные ресурсы для конкретного языка и региональных параметров, например английский (США) (en US) или французский (Франция) (fr-FR). Как правило ресурсы для культуры по умолчанию внедряются в основную сборку приложения и ресурсы для других языков и региональных параметров внедряются во вспомогательных сборках. Вспомогательные сборки содержат только ресурсы. Они имеют то же корневое имя файла, как основную сборку и расширением. resources.dll. Для приложений, сборок которых не зарегистрированы в глобальном кэше сборок вспомогательные сборки хранятся в подкаталоге приложения, имя которого соответствует язык и региональные параметры сборки.  
  
<a name="creating_resources"></a>   
### <a name="creating-resources"></a>Создание ресурсов  
 При разработке приложений на основе ресурсов, вы храните сведения о ресурсах в текстовые файлы (файлы с расширением txt или restext) или XML-файлы (файлы с расширением .resx). После этого нужно скомпилировать текста или XML-файлы с [генератор файлов ресурсов (Resgen.exe)](~/docs/framework/tools/resgen-exe-resource-file-generator.md) для создания двоичных RESOURCES-файл. Затем, можно внедрить в исполняемый файл или библиотека полученный RESOURCES-файл с помощью параметра компилятора, например `/resources` для компиляторов C# и Visual Basic, или можно внедрить во вспомогательную сборку с помощью. Если включить RESX-файла в проект Visual Studio, Visual Studio обрабатывает компиляции и внедрения по умолчанию и локализованные ресурсы автоматически как часть процесса построения.  
  
 В идеале следует создавать ресурсы для всех языков, ваше приложение поддерживает, или по крайней мере для определенного подмножества каждого языка. Имена файлов в двоичные RESOURCES соглашению об именовании *basename*. *cultureName*.resources, где *basename* — это имя приложения или имя класса, в зависимости от уровня детализации информации. <xref:System.Globalization.CultureInfo.Name%2A?displayProperty=nameWithType> Свойство используется для определения *cultureName*. Ресурс для языка и региональных параметров приложения по умолчанию должен быть назван *basename*.resources.  
  
 Например предположим, что сборка содержит несколько ресурсов в файле ресурсов, который содержит имя MyResources. Эти файлы ресурсов должны иметь имена, такие как MyResources.ja JP.resources, для языка и региональных параметров (Япония), MyResources.de.resources для немецкого языка и региональных параметров, MyResources.zh-CHS.resources для упрощенного китайского языка и региональных параметров, и MyResources.fr BE.resources французский (Бельгия) языком и региональными параметрами. Файл ресурсов по умолчанию должна называться MyResources.resources. Ресурс для конкретного языка и региональных параметров обычно упаковываются во вспомогательные сборки для каждого языка и региональных параметров. Файл ресурсов по умолчанию необходимо внедрить в основную сборку приложения.  
  
 Обратите внимание, что [компоновщик сборок](~/docs/framework/tools/al-exe-assembly-linker.md) позволяет ресурсы быть помечены как частные, но следует всегда пометить их как открытый, может осуществляться при помощи других сборок. (Так как вспомогательная сборка не содержит кода, ресурсы, которые помечены как частные, недоступны для приложения с помощью любого механизма.)  
  
 Дополнительные сведения о создании упаковки и развертывания ресурсов, см. в статьях [Создание файлов ресурсов](~/docs/framework/resources/creating-resource-files-for-desktop-apps.md), [Создание вспомогательных сборок](~/docs/framework/resources/creating-satellite-assemblies-for-desktop-apps.md), и [упаковка и развертывание Ресурсы](~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md).  
  
<a name="instantiating"></a>   
### <a name="instantiating-a-resourcemanager-object"></a>Создание экземпляров объекта ResourceManager  
 Вы создаете экземпляры <xref:System.Resources.ResourceManager> объект, который извлекает ресурсы из внедренный RESOURCES-файл, вызвав один из его перегрузок конструктора класса. Это жестко связывает <xref:System.Resources.ResourceManager> объектов с определенной RESOURCES-файл и все связанные локализованные файлы .resources во вспомогательных сборках.  
  
 Ниже приведены две наиболее часто вызываемые конструкторы.  
  
-   <xref:System.Resources.ResourceManager.%23ctor%28System.String%2CSystem.Reflection.Assembly%29> ищет ресурсы на два фрагмента информации, указываемое в основе: базовое имя RESOURCES-файл и сборку, в которой находится RESOURCES-файл по умолчанию. Базовое имя включает имя пространства имен и корневой RESOURCES-файла, без его языка и региональных параметров или расширения. Обратите внимание на то, что RESOURCES-файлы, которые компилируются из командной строки, обычно не содержат имя пространства имен, тогда как сделать RESOURCES-файлы, созданные в среде Visual Studio. Например, если файл ресурсов с именем MyCompany.StringResources.resources и <xref:System.Resources.ResourceManager> конструктор вызывается статический метод с именем `Example.Main`, следующий код создает экземпляр <xref:System.Resources.ResourceManager> объект, который может извлекать ресурсы из. файл ресурсов:  
  
     [!code-csharp[Conceptual.Resources.Retrieving#1](~/samples/snippets/csharp/VS_Snippets_CLR/conceptual.resources.retrieving/cs/ctor1.cs#1)]
     [!code-vb[Conceptual.Resources.Retrieving#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.resources.retrieving/vb/ctor1.vb#1)]  
  
-   <xref:System.Resources.ResourceManager.%23ctor%28System.Type%29> ищет ресурсы в сопутствующих сборках, на основе информации из объекта типа. Полное имя типа соответствует базовое имя RESOURCES-файл без расширения имени файла. В классических приложениях, которые создаются с помощью конструктора ресурсов Visual Studio Visual Studio создает класс-оболочку, — это полное имя которого совпадает с корневым именем RESOURCES-файла. Например, если файл ресурсов называется MyCompany.StringResources.resources и имеется класс-оболочку с именем `MyCompany.StringResources`, следующий код создает экземпляр <xref:System.Resources.ResourceManager> объект, который может извлекать ресурсы из RESOURCES-файл:  
  
     [!code-csharp[Conceptual.Resources.Retrieving#2](~/samples/snippets/csharp/VS_Snippets_CLR/conceptual.resources.retrieving/cs/ctor1.cs#2)]
     [!code-vb[Conceptual.Resources.Retrieving#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.resources.retrieving/vb/ctor1.vb#2)]  
  
 Если не удается найти соответствующие ресурсы, вызов конструктора создается действительный <xref:System.Resources.ResourceManager> объекта. Тем не менее, при попытке извлечь ресурс создается <xref:System.Resources.MissingManifestResourceException> исключение. Сведения об обработке исключений см. в разделе [обработка исключений MissingManifestResourceException и исключения MissingSatelliteAssembly](#exception) разделе этой статьи.  
  
 В следующем примере показано, как создать экземпляр <xref:System.Resources.ResourceManager> объекта. Он содержит исходный код для исполняемого файла с именем ShowTime.exe. Он также включает следующий текстовый файл с именем Strings.txt, который содержит один строковой ресурс, `TimeHeader`:  
  
```  
TimeHeader=The current time is  
```  
  
 Пакетный файл можно использовать для создания файла ресурсов и внедрить в исполняемый файл. Вот пакетный файл, чтобы создать исполняемый файл с помощью компилятора C#:  
  
```  
  
resgen strings.txt  
csc ShowTime.cs /resource:strings.resources  
  
```  
  
 Для компилятора Visual Basic можно использовать следующий пакетный файл:  
  
```  
  
resgen strings.txt  
vbc ShowTime.vb /resource:strings.resources  
  
```  
  
 [!code-csharp[System.Resources.ResourceManager.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcemanager.class/cs/showtime.cs#1)]
 [!code-vb[System.Resources.ResourceManager.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcemanager.class/vb/showtime.vb#1)]  
  
<a name="CultureSpecific"></a>   
### <a name="resourcemanager-and-culture-specific-resources"></a>Диспетчер ресурсов и ресурсов для конкретного языка и региональных параметров  
 Локализованного приложения требуется ресурсов для развертывания, как описано в статье [упаковка и развертывание ресурсов](~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md). Если сборок настроены правильно, диспетчер ресурсов определяет, какие именно ресурсы нужно извлечь на основании текущего потока <xref:System.Threading.Thread.CurrentUICulture%2A?displayProperty=nameWithType> свойство. (Это свойство также возвращает язык и региональные параметры текущего потока пользовательского интерфейса). Например, если приложение компилируется с по умолчанию ресурсы на английском языке в основную сборку и с ресурсами французский "и" русский язык в двух вспомогательных сборок и <xref:System.Threading.Thread.CurrentUICulture%2A?displayProperty=nameWithType> задано значение fr-FR, диспетчер ресурсов извлекает французский ресурсы.  
  
 Можно задать <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> свойство явно или неявно. Определяет метод, он задается как <xref:System.Resources.ResourceManager> извлекает ресурсов с учетом языка и региональных параметров:  
  
-   Если явно задать <xref:System.Threading.Thread.CurrentUICulture%2A?displayProperty=nameWithType> свойство для конкретной культуры, всегда диспетчер ресурсов извлекает ресурсы для этого языка и региональных параметров, независимо от языка браузера или операционной системы пользователя. Рассмотрим приложение, которое компилируется с ресурсами на английском языке по умолчанию и три вспомогательных сборок, которые содержат ресурсы для английского (США), французский (Франция) и русского (Россия). Если <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> задано значение fr-FR, <xref:System.Resources.ResourceManager> всегда извлекать ресурсы французского (Франция), даже если пользователь операционной системе установлен не французский язык. Убедитесь, что это требуемое поведение, прежде чем явно задать свойство.  
  
     В приложениях ASP.NET, необходимо задать <xref:System.Threading.Thread.CurrentUICulture%2A?displayProperty=nameWithType> свойство явно, так как маловероятно, что параметр на сервере будет соответствовать входящих клиентских запросов. Приложения ASP.NET можно задать <xref:System.Threading.Thread.CurrentUICulture%2A?displayProperty=nameWithType> свойство явным образом, чтобы браузер пользователя допустимый язык.  
  
     Явная установка <xref:System.Threading.Thread.CurrentUICulture%2A?displayProperty=nameWithType> свойство определяет текущий язык и региональные параметры пользовательского интерфейса для этого потока. Он не влияет на текущий язык и региональные параметры пользовательского интерфейса из других потоков в приложении.  
  
-   Можно задать язык и региональные параметры пользовательского интерфейса всех потоков в домене приложения, назначив <xref:System.Globalization.CultureInfo> объект, представляющий этот язык для статического <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A?displayProperty=nameWithType> свойство.  
  
-   Если явно не задано текущего языка и региональных параметров пользовательского интерфейса, а не определить язык и региональные параметры по умолчанию для текущего домена приложения, <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> свойство задается неявно Windows `GetUserDefaultUILanguage` функции. Эта функция предоставляется по многоязыкового интерфейса пользователя (MUI), который позволяет пользователю задать язык по умолчанию. Если пользователь не задал язык пользовательского интерфейса, по умолчанию используется язык установленной системы, который является языком ресурсов операционной системы.  
  
 В следующем примере простых «Hello world» явно задает текущий язык и региональные параметры пользовательского интерфейса. Он содержит ресурсы для трех языков и региональных параметров: Английский (США) или en US, французский (Франция) или fr-FR и русский (Россия) или ru-RU. В текстовом файле с именем Greetings.txt содержатся ресурсы en US:  
  
```  
HelloString=Hello world!  
```  
  
 Ресурсы fr-FR, входящие в текстовый файл с именем Greetings.fr-FR.txt:  
  
```  
HelloString=Salut tout le monde!  
```  
  
 Ru-RU ресурсы, входящие в текстовый файл с именем Greetings.ru-RU.txt:  
  
```  
HelloString=Всем привет!  
```  
  
 Ниже приведен исходный код для примера (Example.vb для версии Visual Basic) или Example.cs для версии C#:  
  
 [!code-csharp[Conceptual.Resources.CurrentCulture#1](~/samples/snippets/csharp/VS_Snippets_CLR/conceptual.resources.currentculture/cs/example.cs#1)]
 [!code-vb[Conceptual.Resources.CurrentCulture#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.resources.currentculture/vb/example.vb#1)]  
  
 Чтобы скомпилировать этот пример, создайте пакетный (BAT) файл, содержащий следующие команды и запустите его из командной строки. Если вы используете C#, укажите `csc` вместо `vbc` и `Example.cs` вместо `Example.vb`.  
  
```  
resgen Greetings.txt   
vbc Example.vb /resource:Greetings.resources  
  
resgen Greetings.fr-FR.txt  
Md fr-FR  
al /embed:Greetings.fr-FR.resources /culture:fr-FR /out:fr-FR\Example.resources.dll  
  
resgen Greetings.ru-RU.txt  
Md ru-RU  
al /embed:Greetings.ru-RU.resources /culture:ru-RU /out:ru-RU\Example.resources.dll  
```  
  
<a name="retrieving"></a>   
### <a name="retrieving-resources"></a>Извлечение ресурсов  
 Вы вызываете <xref:System.Resources.ResourceManager.GetObject%28System.String%29> и <xref:System.Resources.ResourceManager.GetString%28System.String%29> методы доступа к определенному ресурсу. Можно также вызвать <xref:System.Resources.ResourceManager.GetStream%28System.String%29> метод для извлечения нестроковых ресурсов в виде массива байтов. По умолчанию в приложении, которое локализованные ресурсы, эти методы возвращают ресурс для языка и региональных параметров, определяется текущий язык и региональные параметры пользовательского интерфейса потока, в которой был сделан вызов. См. в предыдущем разделе [диспетчера ресурсов и ресурсов для конкретного языка и региональных параметров](#CultureSpecific), Дополнительные сведения об определении текущего языка и региональных параметров пользовательского интерфейса потока. Если диспетчер ресурсов не удается найти ресурс для языка и региональных параметров текущего потока пользовательского интерфейса, он используется процесс перехода к получить указанный ресурс. Если диспетчер ресурсов не удается найти все локализованные ресурсы, он использует ресурсы языка и региональных параметров по умолчанию. Дополнительные сведения о правила резервных ресурсов см. в разделе «Процесс использования резервных ресурсов» статьи [упаковка и развертывание ресурсов](~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md).  
  
> [!NOTE]
>  Если RESOURCES-файл указан в <xref:System.Resources.ResourceManager> конструктор класса не найден, то попытка извлечения ресурса выдает <xref:System.Resources.MissingManifestResourceException> или <xref:System.Resources.MissingSatelliteAssemblyException> исключение. Сведения об обработке исключений см. в разделе [обработка исключений MissingManifestResourceException и MissingSatelliteAssemblyException исключения](#exception) подразделе данного раздела.  
  
 В следующем примере используется <xref:System.Resources.ResourceManager.GetString%2A> метод для извлечения ресурсов для конкретного языка и региональных параметров. Он состоит из ресурсов, скомпилированной на основе TXT-файлы для английского языка (en), французский (Франция) (fr-FR) и русского (Россия) (ru-RU) языков и региональных параметров. В примере изменяется текущий язык и региональные параметры текущего пользовательского интерфейса на английский (США), французский (Франция), русский (Россия) и шведский (Швеция). Затем он вызывает <xref:System.Resources.ResourceManager.GetString%2A> метод для извлечения локализованной строки, которая отображается вместе с текущего дня и месяца. Обратите внимание на то, что в выходных данных отображаются соответствующие локализованную строку, если текущий язык и региональные параметры пользовательского интерфейса не является шведский (Швеция). Так как шведский язык ресурсы недоступны, приложение вместо этого использует ресурсы языка и региональных параметров по умолчанию, на английском языке.  
  
 В примере требуется файлы ресурсов на основе текста, перечисленные в следующей таблице. Каждый имеет один строковой ресурс с именем `DateStart`.  
  
|culture|Имя файла|Имя ресурса|Значение ресурса|  
|-------------|---------------|-------------------|--------------------|  
|en-US|DateStrings.txt|`DateStart`|Сегодня|  
|fr-FR|DateStrings.fr-FR.txt|`DateStart`|Aujourd'hui c'est le|  
|ru-RU|DateStrings.ru-RU.txt|`DateStart`|Сегодня|  
  
 Ниже приведен исходный код для примера (ShowDate.vb для версии Visual Basic) или ShowDate.cs для версии кода C#.  
  
 [!code-csharp[System.Resources.ResourceManager.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcemanager.class/cs/showdate.cs#2)]
 [!code-vb[System.Resources.ResourceManager.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcemanager.class/vb/showdate.vb#2)]  
  
 Чтобы скомпилировать этот пример, создайте пакетный файл, который содержит следующие команды и запустите его из командной строки. Если вы используете C#, укажите `csc` вместо `vbc` и `showdate.cs` вместо `showdate.vb`.  
  
```  
  
resgen DateStrings.txt  
vbc showdate.vb /resource:DateStrings.resources  
  
md fr-FR  
resgen DateStrings.fr-FR.txt  
al /out:fr-FR\Showdate.resources.dll /culture:fr-FR /embed:DateStrings.fr-FR.resources   
  
md ru-RU  
resgen DateStrings.ru-RU.txt  
al /out:ru-RU\Showdate.resources.dll /culture:ru-RU /embed:DateStrings.ru-RU.resources  
  
```  
  
 Существует два способа для извлечения ресурсов для конкретного языка и региональных параметров, отличных от текущего языка и региональных параметров пользовательского интерфейса:  
  
-   Можно вызвать <xref:System.Resources.ResourceManager.GetString%28System.String%2CSystem.Globalization.CultureInfo%29>, <xref:System.Resources.ResourceManager.GetObject%28System.String%2CSystem.Globalization.CultureInfo%29>, или <xref:System.Resources.ResourceManager.GetStream%28System.String%2CSystem.Globalization.CultureInfo%29> метод для извлечения ресурсов для конкретной культуры. Если не удается найти локализованных ресурсов, диспетчер ресурсов использует процесс резервных ресурсов для поиска подходящего ресурса.  
  
-   Можно вызвать <xref:System.Resources.ResourceManager.GetResourceSet%2A> метод, чтобы получить <xref:System.Resources.ResourceSet> , представляющий ресурсы для конкретного языка и региональных параметров. В вызове метода можно определить ли диспетчер ресурсов проверяет наличие родительского языков и региональных параметров, если это не удается найти локализованные ресурсы или ли она просто возвращается к ресурсы языка и региональных параметров по умолчанию. Затем можно использовать <xref:System.Resources.ResourceSet> методы, доступ к ресурсам (локализован для этого языка и региональных параметров) по имени или перечисление ресурсов в наборе.  
  
<a name="exception"></a>   
### <a name="handling-missingmanifestresourceexception-and-missingsatelliteassemblyexception-exceptions"></a>Обработка исключений MissingManifestResourceException и MissingSatelliteAssemblyException исключений  
 Если при попытке извлечь конкретный ресурс, но не удается найти диспетчер ресурсов был определен ресурс и либо не по умолчанию языка и региональных параметров или ресурсы языка и региональных параметров по умолчанию не удается найти, диспетчер ресурсов создает <xref:System.Resources.MissingManifestResourceException> исключение при его ожидает найти ресурсы в основную сборку или <xref:System.Resources.MissingSatelliteAssemblyException> Если ожидается, что для поиска ресурсов во вспомогательную сборку. Обратите внимание на то, что исключение возникает при вызове метода извлечения ресурса, например <xref:System.Resources.ResourceManager.GetString%2A> или <xref:System.Resources.ResourceManager.GetObject%2A>, а не при создании экземпляра <xref:System.Resources.ResourceManager> объекта.  
  
 Исключение обычно вызывается при следующих условиях:  
  
-   Файла или вспомогательной сборки соответствующий ресурс не существует. Если диспетчер ресурсов ожидает, что ресурсы приложения по умолчанию, внедренных в основную сборку приложения, они отсутствуют. Если <xref:System.Resources.NeutralResourcesLanguageAttribute> атрибут указывает, что ресурсы приложения по умолчанию находятся во вспомогательной сборке, что сборка не найдена. При компиляции приложения, убедитесь, что ресурсы внедряются в основную сборку, или что необходимые вспомогательной сборки создается и соответствующее имя. Его имя должно задаваться в виде *appName*. resources.dll и он должен находиться в каталоге с именем, язык и региональные параметры, содержащиеся в ней ресурсы.  
  
-   Приложение не имеет значение по умолчанию или определенных нейтрального языка и региональных параметров. Добавление <xref:System.Resources.NeutralResourcesLanguageAttribute> атрибута в файл исходного кода или файл проекта сведения файл (AssemblyInfo.vb для приложения Visual Basic) или AssemblyInfo.cs для приложения C#.  
  
-   `baseName` Параметр в <xref:System.Resources.ResourceManager.%23ctor%28System.String%2CSystem.Reflection.Assembly%29> конструктор не задает имя RESOURCES-файл. Имя должно содержать полное имя пространства имен файла ресурсов, но не его расширение имени файла. Как правило файлы ресурсов, созданных в Visual Studio включают имена пространств имен, но файлы ресурсов, которые создаются и компилируются в командной строке — нет. Можно скомпилировать и выполнить следующую программу, можно определить имена внедренные RESOURCES-файлы. Это консольное приложение, которое принимает имя основной сборки или вспомогательную сборку в качестве параметра командной строки. Он отображает строки, которые должны быть предоставлены как `baseName` параметр, чтобы диспетчер ресурсов мог корректно идентифицировать ресурс.  
  
     [!code-csharp[System.Resources.ResourceManager.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcemanager.class/cs/resourcenames.cs#4)]
     [!code-vb[System.Resources.ResourceManager.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcemanager.class/vb/resourcenames.vb#4)]  
  
 Явным образом при изменении текущего языка и региональных параметров приложения, следует также помнить, что диспетчер ресурсов получает набор ресурсов, в зависимости от значения <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> свойства, а не <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> свойство. Как правило если вы измените одно значение, необходимо также изменить другой.  
  
<a name="versioning"></a>   
### <a name="resource-versioning"></a>Управление версиями ресурсов  
 Так как основная сборка, которая содержит ресурсы приложения по умолчанию отличается от вспомогательных сборок приложения, можно освободить новой версии основной сборки без повторного развертывания вспомогательных сборок. Использовании <xref:System.Resources.SatelliteContractVersionAttribute> атрибут для использования существующего вспомогательные сборки и диспетчеру ресурсов не для того, чтобы повторно развернуть их до новой версии основной сборки,  
  
 Дополнительные сведения о поддержке управления версиями для вспомогательных сборок см. в статье [извлечение ресурсов](~/docs/framework/resources/retrieving-resources-in-desktop-apps.md).  
  
<a name="config"></a>   
### <a name="satelliteassemblies-configuration-file-node"></a>\<satelliteassemblies > узел файла конфигурации  
 Для исполняемых файлов, развернутые и работающие с веб-сайта (файлы .exe HREF) <xref:System.Resources.ResourceManager> объект может зондировать наличие вспомогательных сборок в Интернете, которые могут снижать производительность приложения. Чтобы устранить проблемы с производительностью, можно ограничить это исследование вспомогательные сборки, которые развернуты с вашим приложением. Чтобы сделать это, создайте `<satelliteassemblies>` узел в файле конфигурации приложения, чтобы указать, что вы развернули определенный набор языков и региональных параметров для приложения и что <xref:System.Resources.ResourceManager> объекта не следует пытаться выборки данных для любого языка и региональных параметров, которого нет в этом узле.  
  
> [!NOTE]
>  Предпочтительная альтернатива типу создание `<satelliteassemblies>` узла заключается в использовании [манифест развертывания ClickOnce](https://msdn.microsoft.com/library/8457e615-e3b6-4990-8dcf-11bc590e4e9b) функции.  
  
 В файле конфигурации приложения создайте раздел следующего вида:  
  
```  
<?xml version ="1.0"?>  
<configuration>  
    <satelliteassemblies>  
        <assembly name="MainAssemblyName, Version=versionNumber, Culture=neutral, PublicKeyToken=null|yourPublicKeyToken">  
            <culture>cultureName1</culture>  
            <culture>cultureName2</culture>  
            <culture>cultureName3</culture>  
        </assembly>  
    </satelliteassemblies>  
</configuration>  
```  
  
 Изменение сведений о конфигурации следующим образом:  
  
-   Укажите одно или несколько `<assembly>` узлов для каждой основной сборки, развертывании, где каждый узел определяет полное имя сборки. Укажите имя основной сборки вместо *MainAssemblyName*и укажите `Version`, `PublicKeyToken`, и `Culture` значения атрибутов, соответствуют к главной сборке.  
  
     Для `Version` атрибут, укажите номер версии сборки. Например первая версия сборки может быть номер версии 1.0.0.0.  
  
     Для `PublicKeyToken` атрибут, укажите ключевое слово `null` Если вы не выполнили сборку со строгим именем, или укажите маркер открытого ключа, если сборка подписана.  
  
     Для `Culture` атрибут, укажите ключевое слово `neutral` обозначить основную сборку и привести к <xref:System.Resources.ResourceManager> класс для выборки данных только для языков и региональных параметров, перечисленных в `<culture>` узлов.  
  
     Дополнительные сведения о полные имена сборок см. в статье [имена сборок](~/docs/framework/app-domains/assembly-names.md). Дополнительные сведения о сборках со строгими именами см. в статье [Создание и использование сборок со строгими именами](~/docs/framework/app-domains/create-and-use-strong-named-assemblies.md).  
  
-   Укажите одно или несколько `<culture>` узлов с имя определенного языка и региональных параметров, например «fr-FR», или имя нейтрального языка и региональных параметров, например «fr».  
  
 Если ресурсы необходимы для любой сборки, не указан в списке `<satelliteassemblies>` узел, <xref:System.Resources.ResourceManager> класса проб для языков и региональных параметров с помощью стандартных правил проверки.  
  
<a name="ws"></a>   
## <a name="includewin8appnamelongincludeswin8-appname-long-mdmd-apps"></a>Приложения [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]  
  
> [!IMPORTANT]
>  Несмотря на то что <xref:System.Resources.ResourceManager> класс поддерживается в [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] приложений, мы не рекомендуем ее использовать. Этот класс используется только в том случае, при разработке [!INCLUDE[net_portable](~/includes/net-portable-md.md)] проекты, которые могут использоваться с [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] приложений. Для извлечения ресурсов из [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] приложения, используют [Windows.ApplicationModel.Resources.ResourceLoader](https://go.microsoft.com/fwlink/p/?LinkId=238182) вместо этого класса.  
  
 Для [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] приложений, <xref:System.Resources.ResourceManager> класс извлекает ресурсы из пакета ресурсов (PRI) индекс файлов. Один PRI-файл (файл пакета приложения PRI) содержит ресурсы для культуры по умолчанию и всех локализованных языков и региональных параметров. Использование программы MakePRI для создания файла PRI, из одного или нескольких файлов ресурсов, которые находятся в формате XML-ресурсов (.resw). Для ресурсов, которые включены в проект Visual Studio Visual Studio обрабатывает процесс создания и упаковки в PRI-файл автоматически. Затем можно использовать .NET Framework <xref:System.Resources.ResourceManager> класс для доступа к ресурсам приложения или библиотеки.  
  
 Можно создать экземпляр <xref:System.Resources.ResourceManager> для объекта [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] приложения так же, как и для классического приложения.  
  
 Можно затем получить ресурсы для конкретного языка и региональных параметров, передав имя ресурса, который требуется получить для <xref:System.Resources.ResourceManager.GetString%28System.String%29> метод. По умолчанию этот метод возвращает ресурс для языка и региональных параметров, определяется текущий язык и региональные параметры пользовательского интерфейса потока, в которой был сделан вызов. Ресурсы для конкретного языка и региональных параметров также можно получить, передав имя ресурса и <xref:System.Globalization.CultureInfo> , представляющий язык и региональные параметры, ресурсом которого требуется получить для <xref:System.Resources.ResourceManager.GetString%28System.String%2CSystem.Globalization.CultureInfo%29> метод. Если не удается найти ресурс для текущего языка и региональных параметров пользовательского интерфейса или указанного языка и региональных параметров, диспетчер ресурсов использует список возврата языка пользовательского интерфейса для поиска подходящего ресурса.  
  
   
  
## Examples  
 Следующий пример демонстрирует использование культуру явные и неявные текущих региональных параметров пользовательского интерфейса для получения строковых ресурсов в основную сборку и вспомогательную сборку. Дополнительные сведения см. в разделе «Каталог расположения для вспомогательной сборки не установлены в в глобальном кэше сборок» [Создание вспомогательных сборок](~/docs/framework/resources/creating-satellite-assemblies-for-desktop-apps.md) раздела.  
  
 Для выполнения этого примера:  
  
1.  В каталоге приложения создайте файл с именем rmc.txt, содержащий следующие строки ресурсов:  
  
    ```  
  
    day=Friday  
    year=2006  
    holiday="Cinco de Mayo"  
  
    ```  
  
2.  Используйте [генератор файлов ресурсов](~/docs/framework/tools/resgen-exe-resource-file-generator.md) для создания файла ресурсов rmc.resources из входного файла rmc.txt следующим образом:  
  
    ```  
    resgen rmc.txt  
    ```  
  
3.  Создайте подкаталог в каталоге приложения и назовите его «es-MX». Это имя язык и региональные параметры вспомогательной сборки, созданной в следующие три шага.  
  
4.  Создайте файл с именем rmc.es MX.txt в каталоге es-MX, которая содержит следующие строки ресурсов:  
  
    ```  
  
    day=Viernes  
    year=2006  
    holiday="Cinco de Mayo"  
  
    ```  
  
5.  Используйте [генератор файлов ресурсов](~/docs/framework/tools/resgen-exe-resource-file-generator.md) для создания файла ресурсов rmc.es MX.resources из входного файла rmc.es MX.txt следующим образом:  
  
    ```  
    resgen rmc.es-MX.txt  
    ```  
  
6.  Предположим, что имя файла для этого примера является rmc.vb или rmc.cs. Скопируйте следующий исходный код в файл. Затем скомпилируйте и внедрить файл ресурсов главной сборки, rmc.resources, в исполняемая сборка. Если вы используете компилятор Visual Basic, используется следующий синтаксис:  
  
    ```  
    vbc rmc.vb /resource:rmc.resources  
    ```  
  
     Ниже приведен соответствующий синтаксис для компилятора C#.  
  
    ```  
    csc /resource:rmc.resources rmc.cs  
    ```  
  
7.  Используйте [компоновщик сборок](~/docs/framework/tools/al-exe-assembly-linker.md) для создания вспомогательной сборки. Если rmc базовое имя приложения, имя вспомогательной сборки должны быть rmc.resources.dll. Вспомогательная сборка должен будет создан в каталоге, es-MX. Если es-MX является текущий каталог, используйте следующую команду:  
  
    ```  
    al /embed:rmc.es-MX.resources /c:es-MX /out:rmc.resources.dll   
    ```  
  
8.  Запустите rmc.exe для получения и отображения строк внедренного ресурса.  
  
 [!code-csharp[ResourceManager_Class#1](~/samples/snippets/csharp/VS_Snippets_CLR/ResourceManager_Class/cs/rmc.cs#1)]
 [!code-vb[ResourceManager_Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ResourceManager_Class/vb/rmc.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>Данный тип потокобезопасен.</threadsafe>
    <altmember cref="T:System.Globalization.CultureInfo" />
    <altmember cref="P:System.Globalization.CultureInfo.CurrentUICulture" />
    <altmember cref="T:System.Resources.SatelliteContractVersionAttribute" />
    <related type="Article" href="https://msdn.microsoft.com/library/8ad495d4-2941-40cf-bf64-e82e85825890">Ресурсы приложений</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Resources.ResourceManager" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ResourceManager ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ResourceManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Resources.ResourceManager" /> со значениями по умолчанию.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот конструктор используется только в том случае, если написать свой собственный класс, производный от <xref:System.Resources.ResourceManager> класса.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResourceManager (Type resourceSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type resourceSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceManager.#ctor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (resourceSource As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResourceManager(Type ^ resourceSource);" />
      <MemberSignature Language="F#" Value="new System.Resources.ResourceManager : Type -&gt; System.Resources.ResourceManager" Usage="new System.Resources.ResourceManager resourceSource" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="resourceSource" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="resourceSource">Тип, из которого диспетчер ресурсов получает все сведения, необходимые для поиска RESOURCES-файлов.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Resources.ResourceManager" />, который ищет ресурсы в сопутствующих сборках, используя сведения из указанного объекта типа.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="desktop-apps"></a>Классические приложения  
 В классических приложениях, диспетчер ресурсов использует `resourceSource` параметр, чтобы загрузить файл ресурсов следующим образом:  
  
-   Если <xref:System.Resources.NeutralResourcesLanguageAttribute> атрибут не используется, чтобы указать, что ресурсы языка и региональных параметров по умолчанию находятся во вспомогательной сборке, диспетчер ресурсов предполагает, что файл ресурсов для культуры по умолчанию присутствует в ту же сборку типа, заданного параметром `resourceSource` параметра.  
  
-   Диспетчер ресурсов предполагает, что файл ресурсов по умолчанию имеет такое же базовое имя типа, заданного параметром `resourceSource` параметр.  
  
-   Диспетчер ресурсов использует значение по умолчанию <xref:System.Resources.ResourceSet> класс для обработки файла ресурсов.  
  
 Например диспетчер ресурсов заданного типа с именем MyCompany.MyProduct.MyType, ищет в RESOURCES-файл с именем MyCompany.MyProduct.MyType.resources в сборке, определяющей MyType.  
  
 В Visual Studio автоматически создает код, который определяет конструктор ресурсов `internal` (в C#) или `Friend` (в Visual Basic) класса, имя которого совпадает со значением базовое имя RESOURCES-файл для культуры по умолчанию. Это позволяет создать экземпляр <xref:System.Resources.ResourceManager> объекта и свяжите его с определенным набором ресурсов, получая объект типа, имя которого соответствует имени ресурса, так как при условии, что класс не видимы для компилятора, ресурсы должны быть как Аналогичным образом. Например, если в RESOURCES-файл имеет имя Resource1, следующая инструкция создает экземпляр <xref:System.Resources.ResourceManager> объекту управлять RESOURCES-файл с именем Resource1:  
  
 [!code-csharp[System.Resources.ResourceManager.ctor#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcemanager.ctor/cs/ctor1.cs#2)]  
  
 Если вы не используете Visual Studio, можно создать класс без членов, пространство имен и имя которого совпадают, RESOURCES-файла по умолчанию. Иллюстрация приведена в примере.  
  
## <a name="includewin8appnamelongincludeswin8-appname-long-mdmd-apps"></a>Приложения [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]  
  
> [!IMPORTANT]
>  Несмотря на то что <xref:System.Resources.ResourceManager> класс поддерживается в [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] приложений, мы не рекомендуем ее использовать. Этот класс используется только в том случае, при разработке [!INCLUDE[net_portable](~/includes/net-portable-md.md)] проекты, которые могут использоваться с [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] приложений. Для извлечения ресурсов из [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] приложения, используют [Windows.ApplicationModel.Resources.ResourceLoader](https://go.microsoft.com/fwlink/p/?LinkId=238182) вместо этого класса.  
  
 В [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] приложений, <xref:System.Resources.ResourceManager> использует `resourceSource` параметра для определения сборки, базовое имя и пространство имен, где элементы ресурса можно найти в файл индекса (PRI) ресурсов пакета приложения. Например, если тип с именем MyCompany.MyProduct.MyType, который определен в `MyAssembly`, диспетчер ресурсов будет искать идентификатор с именем MyAssembly набор ресурсов и ищет MyCompany.MyProduct.MyType область в пределах этого набора ресурсов. Диспетчер ресурсов выполняет поиск элементов ресурса в контексте по умолчанию (текущий язык и региональные параметры, текущее значение параметра высокой контрастности и т. д.) в этой области.  
  
   
  
## Examples  
 В следующем примере используется <xref:System.Resources.ResourceManager.%23ctor%28System.Type%29> конструктора для создания <xref:System.Resources.ResourceManager> объекта. Он состоит из ресурсов, скомпилированной на основе TXT-файлы для английского языка (en), французский (Франция) (fr-FR) и русского (Россия) (ru-RU) языков и региональных параметров. В примере изменяется текущий язык и региональные параметры текущего пользовательского интерфейса на английский (США), французский (Франция), русский (Россия) и шведский (Швеция). Затем он вызывает <xref:System.Resources.ResourceManager.GetString%28System.String%29> метод для извлечения локализованной строки, которая отображает приветствие, которое зависит от времени суток.  
  
 В примере требуется три файла ресурсов на основе текста, как указано в следующей таблице. Каждый файл содержит строковых ресурсов с именем `Morning`, `Afternoon`, и `Evening`.  
  
|culture|Имя файла|Имя ресурса|Значение ресурса|  
|-------------|---------------|-------------------|--------------------|  
|en-US|GreetingResources.txt|`Morning`|Доброе утро|  
|en-US|GreetingResources.txt|`Afternoon`|Добрый день|  
|en-US|GreetingResources.txt|`Evening`|Добрый вечер|  
|fr-FR|GreetingResources.fr-FR.txt|`Morning`|Bonjour|  
|fr-FR|GreetingResources.fr-FR.txt|`Afternoon`|Bonjour|  
|fr-FR|GreetingResources.fr-FR.txt|`Evening`|Bonsoir|  
|ru-RU|GreetingResources.ru-RU.txt|`Morning`|Доброе утро|  
|ru-RU|GreetingResources.ru-RU.txt|`Afternoon`|Добрый день|  
|ru-RU|GreetingResources.ru-RU.txt|`Evening`|Добрый вечер|  
  
 Чтобы скомпилировать пример Visual Basic и создать исполняемый файл с именем Greet.exe можно использовать следующий пакетный файл. Чтобы скомпилировать C#, измените имя компилятора с `vbc` для `csc` и расширение файла с `.vb` для `.cs`.  
  
```  
  
resgen GreetingResources.txt  
vbc Greet.vb /resource: GreetingResources.resources  
  
md fr-FR  
resgen GreetingResources.fr-FR.txt  
al /out:fr-FR\Greet.resources.dll /culture:fr-FR /embed: GreetingResources.fr-FR.resources   
  
md ru-RU  
resgen GreetingResources.ru-RU.txt  
al /out:ru-RU\Greet.resources.dll /culture:ru-RU /embed: GreetingResources.ru-RU.resources  
  
```  
  
 Ниже приведен исходный код для примера (ShowDate.vb для версии Visual Basic) или ShowDate.cs для версии кода C#.  
  
 [!code-csharp[System.Resources.ResourceManager.Ctor#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcemanager.ctor/cs/greet.cs#3)]
 [!code-vb[System.Resources.ResourceManager.Ctor#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcemanager.ctor/vb/greet.vb#3)]  
  
 Кроме определения класс app с именем `Example`, исходный код определяет внутренний класс, имя которого `GreetingResources`, совпадает со значением базовое имя файлов ресурсов. Это позволяет успешно создать экземпляр <xref:System.Resources.ResourceManager> путем вызова метода <xref:System.Resources.ResourceManager.%23ctor%28System.Type%29> конструктор.  
  
 Обратите внимание, что, соответствующие локализованные выходных данных отображается строка, кроме случаев, когда текущий язык и региональные параметры пользовательского интерфейса шведский (Швеция), в противном случае он использует ресурсы на английском языке. Так как шведский язык ресурсы недоступны, приложение использует ресурсы для культуры по умолчанию, согласно <xref:System.Resources.NeutralResourcesLanguageAttribute> вместо этого атрибута.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="resourceSource" /> имеет значение <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResourceManager (string baseName, System.Reflection.Assembly assembly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string baseName, class System.Reflection.Assembly assembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceManager.#ctor(System.String,System.Reflection.Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResourceManager(System::String ^ baseName, System::Reflection::Assembly ^ assembly);" />
      <MemberSignature Language="F#" Value="new System.Resources.ResourceManager : string * System.Reflection.Assembly -&gt; System.Resources.ResourceManager" Usage="new System.Resources.ResourceManager (baseName, assembly)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="baseName" Type="System.String" />
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="baseName">Корневое имя файла ресурсов без расширения, но с любым полным именем пространства имен. К примеру, имя корневой папки для файла ресурсов MyApplication.MyResource.en-US.resources будет MyApplication.MyResource.</param>
        <param name="assembly">Главная сборка для ресурсов.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Resources.ResourceManager" />, который ищет ресурсы, содержащиеся в файлах с указанным корневым именем, в данной сборке.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="desktop-apps"></a>Классические приложения  
 В классических приложениях отдельные региональных файлы ресурсов, которые должны быть включены во вспомогательных сборках и файла ресурсов культуры по умолчанию должны быть включены в основной сборке. Вспомогательная сборка предполагается, что содержит ресурсы для одной культуры, указанной в манифесте сборки и загружается при необходимости.  
  
> [!NOTE]
>  Для извлечения ресурсов из RESOURCES-файлов напрямую, а не получения их из сборок, необходимо вызвать <xref:System.Resources.ResourceManager.CreateFileBasedResourceManager%2A> метод вместо этого для создания экземпляра <xref:System.Resources.ResourceManager> объекта.  
  
 Если файл ресурсов, указанный параметром `baseName` не найден в `assembly`, метод создает экземпляр <xref:System.Resources.ResourceManager> объект, но попытка извлечь конкретный ресурс вызывает исключение, обычно <xref:System.Resources.MissingManifestResourceException>. Сведения о поиске причины исключения, см. в разделе «Обработка исключений MissingManifestResourceException Exception» <xref:System.Resources.ResourceManager> разделе, посвященном классу.  
  
## <a name="includewin8appnamelongincludeswin8-appname-long-mdmd-apps"></a>Приложения [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]  
  
> [!IMPORTANT]
>  Несмотря на то что <xref:System.Resources.ResourceManager> класс поддерживается в [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] приложений, мы не рекомендуем ее использовать. Этот класс используется только в том случае, при разработке [!INCLUDE[net_portable](~/includes/net-portable-md.md)] проекты, которые могут использоваться с [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] приложений. Для извлечения ресурсов из [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] приложения, используют [Windows.ApplicationModel.Resources.ResourceLoader](https://go.microsoft.com/fwlink/p/?LinkId=238182) вместо этого класса.  
  
 В [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] приложений, диспетчер ресурсов использует простое имя `assembly` набор параметров для поиска соответствующий ресурс в файл индекса (PRI) ресурсов пакета приложения. `baseName` Параметр используется для поиска элемента ресурса в наборе ресурсов. Например имя корневой папки для PortableLibrary1.Resource1.de DE.resources — PortableLibrary1.Resource1.  
  
   
  
## Examples  
 В следующем примере используется простое приложение «Hello, World!» не локализованная для иллюстрации <xref:System.Resources.ResourceManager.%23ctor%28System.String%2CSystem.Reflection.Assembly%29> конструктор. Ниже показано содержимое текстового файла с именем ExampleResources.txt. При компиляции приложения, ресурс внедряется в основную сборку приложения.  
  
```  
Greeting=Hello  
```  
  
 Текстовый файл можно преобразовать в двоичный файл ресурсов с помощью [генератор файлов ресурсов (ResGen.exe)](~/docs/framework/tools/resgen-exe-resource-file-generator.md) в командной строке следующим образом:  
  
```  
resgen ExampleResources.txt  
```  
  
 В следующем примере приводится исполняемый код, который создает экземпляр <xref:System.Resources.ResourceManager> , пользователю будет предложено ввести имя и появится приветствие.  
  
 [!code-csharp[System.Resources.ResourceManager.ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcemanager.ctor/cs/example.cs#1)]
 [!code-vb[System.Resources.ResourceManager.ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcemanager.ctor/vb/example.vb#1)]  
  
 Его можно скомпилировать с помощью следующей команды в Visual Basic:  
  
```  
vbc Example.vb /resource:ExampleResources.resources  
```  
  
 или с помощью следующих команд в C#:  
  
```  
csc Example.cs /resource:ExampleResources.resources  
```  
  
 Обратите внимание, что в примере извлекается ссылка на сборку, содержащую файл ресурсов, передав тип, определенный в сборке `typeof` функция (в C#) или `GetType` функции (в Visual Basic) и получение значения его <xref:System.Type.Assembly%2A?displayProperty=nameWithType>свойство.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="baseName" /> или параметра <paramref name="assembly" /> — <see langword="null" />.</exception>
        <block subset="none" type="overrides"><para>Этот конструктор использует предоставляемый системой <see cref="T:System.Resources.ResourceSet" /> реализации. Чтобы использовать формат файла настраиваемого ресурса, должен быть производным от <see cref="T:System.Resources.ResourceSet" /> класса, переопределить <see cref="M:System.Resources.ResourceSet.GetDefaultReader" /> и <see cref="M:System.Resources.ResourceSet.GetDefaultWriter" /> методы и pass, введите для <see cref="M:System.Resources.ResourceManager.#ctor(System.String,System.Reflection.Assembly,System.Type)" /> конструктор. С помощью пользовательского <see cref="T:System.Resources.ResourceSet" /> могут быть полезными для управления политикой кэширования ресурсов или поддержка собственного формата файла ресурсов, но обычно это не обязательно.</para></block>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResourceManager (string baseName, System.Reflection.Assembly assembly, Type usingResourceSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string baseName, class System.Reflection.Assembly assembly, class System.Type usingResourceSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceManager.#ctor(System.String,System.Reflection.Assembly,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResourceManager(System::String ^ baseName, System::Reflection::Assembly ^ assembly, Type ^ usingResourceSet);" />
      <MemberSignature Language="F#" Value="new System.Resources.ResourceManager : string * System.Reflection.Assembly * Type -&gt; System.Resources.ResourceManager" Usage="new System.Resources.ResourceManager (baseName, assembly, usingResourceSet)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="baseName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="assembly" Type="System.Reflection.Assembly" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="usingResourceSet" Type="System.Type" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="baseName">Корневое имя файла ресурсов без расширения, но включающее какое-либо полное имя пространства имен. К примеру, имя корневой папки для файла ресурсов MyApplication.MyResource.en-US.resources будет MyApplication.MyResource.</param>
        <param name="assembly">Главная сборка для ресурсов.</param>
        <param name="usingResourceSet">Тип используемого пользовательского объекта <see cref="T:System.Resources.ResourceSet" />. При значении <see langword="null" /> используется объект времени выполнения по умолчанию <see cref="T:System.Resources.ResourceSet" />.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Resources.ResourceManager" />, который использует указанный класс <see cref="T:System.Resources.ResourceSet" /> для поиска ресурсов, содержащихся в файлах с указанным корневым именем, в данной сборке.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Файлы отдельных ресурсов, связанные с языком и региональными параметрами, которые должны быть включены во вспомогательных сборках и файла ресурсов культуры по умолчанию должны быть включены в основной сборке. Вспомогательная сборка предполагается, что содержит ресурсы для одной культуры, указанной в манифесте сборки и загружается при необходимости.  
  
> [!NOTE]
>  Для извлечения ресурсов из RESOURCES-файлов напрямую, а не получения их из сборок, необходимо вызвать <xref:System.Resources.ResourceManager.CreateFileBasedResourceManager%2A> метод вместо этого для создания экземпляра <xref:System.Resources.ResourceManager> объекта.  
  
 Если файл ресурсов, указанный параметром `baseName` не найден в `assembly`, метод создает экземпляр <xref:System.Resources.ResourceManager> объект, но попытка извлечь конкретный ресурс вызывает исключение, обычно <xref:System.Resources.MissingManifestResourceException>. Сведения о поиске причины исключения, см. в разделе «Обработка исключений MissingManifestResourceException Exception» <xref:System.Resources.ResourceManager> разделе, посвященном классу.  
  
> [!NOTE]
>  `usingResourceSet` Параметр используется для поддержки собственного формата ресурсов и обычно `null`. Это отличается от конструктора, принимающего <xref:System.Type> только.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Объект <paramref name="usingResourceset" /> не является производным от класса <see cref="T:System.Resources.ResourceSet" />.</exception>
        <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="baseName" /> или параметра <paramref name="assembly" /> — <see langword="null" />.</exception>
        <block subset="none" type="usage"><para>Этот конструктор позволяет указать <see cref="T:System.Resources.ResourceSet" /> реализации. Если вы не хотите конкретного <see cref="T:System.Resources.ResourceSet" /> реализации, но нужно будет использовать формат файла настраиваемого ресурса, должен быть производным от <see cref="T:System.Resources.ResourceSet" /> класса, переопределить <see cref="M:System.Resources.ResourceSet.GetDefaultReader" /> и <see cref="M:System.Resources.ResourceSet.GetDefaultWriter" /> методы и pass, введите для этого конструктора.</para></block>
      </Docs>
    </Member>
    <Member MemberName="BaseName">
      <MemberSignature Language="C#" Value="public virtual string BaseName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BaseName" />
      <MemberSignature Language="DocId" Value="P:System.Resources.ResourceManager.BaseName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property BaseName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ BaseName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseName : string" Usage="System.Resources.ResourceManager.BaseName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает имя корневой папки файлов ресурсов, в которой класс <see cref="T:System.Resources.ResourceManager" /> ищет ресурсы.</summary>
        <value>Имя корневой папки файлов ресурсов, в которой класс <see cref="T:System.Resources.ResourceManager" /> ищет ресурсы.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Resources.ResourceManager.BaseName%2A> Свойство отражает имя полного пространства имен и имени ресурса корневого файла ресурсов без его языка и региональных параметров или расширение имени файла. Например, если файл ресурсов приложения по умолчанию называется `SampleApps.StringResources.resources`, значение <xref:System.Resources.ResourceManager.BaseName%2A> свойство является «SampleApps.StringResources». Если файл ресурсов приложения по умолчанию называется `SampleApps.StringResources.en-US.resources` и внедрен во вспомогательную сборку, значение <xref:System.Resources.ResourceManager.BaseName%2A> свойство по-прежнему является «SampleApps.StringResources».  
  
> [!IMPORTANT]
>  <xref:System.Resources.ResourceManager.BaseName%2A> Значение свойства файла ресурсов, который компилируется и внедрить из командной строки не включает имя пространства имен, если явно не включить один при компиляции файла. С другой стороны <xref:System.Resources.ResourceManager.BaseName%2A> значение свойства файла ресурсов, который компилируется и внедрен в среде Visual Studio обычно включает имя пространства имен по умолчанию.  
  
 <xref:System.Resources.ResourceManager.BaseName%2A> Свойство значение такое же, как строка, передаваемая <xref:System.Resources.ResourceManager.%23ctor%28System.String%2CSystem.Reflection.Assembly%29> или <xref:System.Resources.ResourceManager.%23ctor%28System.String%2CSystem.Reflection.Assembly%2CSystem.Type%29> конструктор при создании экземпляра <xref:System.Resources.ResourceManager> экземпляра.  
  
   
  
## Examples  
 Можно скомпилировать и выполнить следующую программу, можно определить имена внедренные RESOURCES-файлы. Это консольное приложение, которое принимает имя основной сборки или вспомогательную сборку в качестве параметра командной строки. Он отображает строки, которые должны быть предоставлены как `baseName` параметр <xref:System.Resources.ResourceManager.%23ctor%28System.String%2CSystem.Reflection.Assembly%29> или <xref:System.Resources.ResourceManager.%23ctor%28System.String%2CSystem.Reflection.Assembly%2CSystem.Type%29> конструктор, чтобы диспетчер ресурсов мог корректно идентифицировать ресурс.  
  
 [!code-csharp[System.Resources.ResourceManager.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcemanager.class/cs/resourcenames.cs#4)]
 [!code-vb[System.Resources.ResourceManager.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcemanager.class/vb/resourcenames.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseNameField">
      <MemberSignature Language="C#" Value="protected string BaseNameField;" />
      <MemberSignature Language="ILAsm" Value=".field family string BaseNameField" />
      <MemberSignature Language="DocId" Value="F:System.Resources.ResourceManager.BaseNameField" />
      <MemberSignature Language="VB.NET" Value="Protected BaseNameField As String " />
      <MemberSignature Language="C++ CLI" Value="protected: System::String ^ BaseNameField;" />
      <MemberSignature Language="F#" Value="val mutable BaseNameField : string" Usage="System.Resources.ResourceManager.BaseNameField" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Указывает имя корневой папки файлов ресурсов, в которой класс <see cref="T:System.Resources.ResourceManager" /> ищет ресурсы.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Resources.ResourceManager.BaseNameField> Поле используется только в том случае, если написать свой собственный класс, производный от <xref:System.Resources.ResourceManager> класса.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFileBasedResourceManager">
      <MemberSignature Language="C#" Value="public static System.Resources.ResourceManager CreateFileBasedResourceManager (string baseName, string resourceDir, Type usingResourceSet);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Resources.ResourceManager CreateFileBasedResourceManager(string baseName, string resourceDir, class System.Type usingResourceSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceManager.CreateFileBasedResourceManager(System.String,System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFileBasedResourceManager (baseName As String, resourceDir As String, usingResourceSet As Type) As ResourceManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Resources::ResourceManager ^ CreateFileBasedResourceManager(System::String ^ baseName, System::String ^ resourceDir, Type ^ usingResourceSet);" />
      <MemberSignature Language="F#" Value="static member CreateFileBasedResourceManager : string * string * Type -&gt; System.Resources.ResourceManager" Usage="System.Resources.ResourceManager.CreateFileBasedResourceManager (baseName, resourceDir, usingResourceSet)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Resources.ResourceManager</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="resourceDir" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="usingResourceSet" Type="System.Type" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="baseName">Имя корневой папки ресурсов. Например, имя корневой папки для файла ресурсов "MyResource.en-US.resources" будет "MyResource".</param>
        <param name="resourceDir">Имя папки, в которой производится поиск ресурсов. <paramref name="resourceDir" /> может быть абсолютным или относительным путем из каталога приложения.</param>
        <param name="usingResourceSet">Тип пользовательского объекта <see cref="T:System.Resources.ResourceSet" /> для использования. При значении <see langword="null" /> используется объект времени выполнения по умолчанию <see cref="T:System.Resources.ResourceSet" />.</param>
        <summary>Возвращает объект <see cref="T:System.Resources.ResourceManager" />, который имеет ресурсы в конкретном каталоге, вместо просмотра манифеста сборки.</summary>
        <returns>Новый экземпляр диспетчера ресурсов, который выполняет поиск ресурсов в указанном каталоге вместо манифеста сборки.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод возвращает диспетчер ресурсов, который извлекает ресурсы из RESOURCES-файл, который не внедрен в сборку. Это можно использовать <xref:System.Resources.ResourceManager> объект для загрузки ресурсов для страницы ASP.NET или для тестирования <xref:System.Resources.ResourceSet> реализации.  Пример, который извлекает ресурсы из автономного RESOURCES-файл, см. в разделе [извлечение ресурсов](~/docs/framework/resources/retrieving-resources-in-desktop-apps.md) статьи.  
  
 Этот метод позволяет указать <xref:System.Resources.ResourceSet> реализации. Если вы не хотите конкретного <xref:System.Resources.ResourceSet> реализации, но хотите использовать формат файла настраиваемого ресурса, должен быть производным от <xref:System.Resources.ResourceSet> класса, переопределить <xref:System.Resources.ResourceSet.GetDefaultReader%2A> и <xref:System.Resources.ResourceSet.GetDefaultWriter%2A> методы и pass, введите для этого конструктора.  
  
> [!CAUTION]
>  С помощью автономные файлы resources в приложении ASP.NET нарушит развертывание XCOPY, так как ресурс остается заблокированным, пока не будет явно выпускаются по <xref:System.Resources.ResourceManager.ReleaseAllResources%2A> метод. Если вы хотите развернуть ресурсы в приложениях ASP.NET, скомпилируйте файлы .resources во вспомогательные сборки.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="baseName" /> или параметра <paramref name="resourceDir" /> — <see langword="null" />.</exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">При вызове с поздним связыванием через механизмы например <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />. Связанное перечисление: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="FallbackLocation">
      <MemberSignature Language="C#" Value="protected System.Resources.UltimateResourceFallbackLocation FallbackLocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Resources.UltimateResourceFallbackLocation FallbackLocation" />
      <MemberSignature Language="DocId" Value="P:System.Resources.ResourceManager.FallbackLocation" />
      <MemberSignature Language="VB.NET" Value="Protected Property FallbackLocation As UltimateResourceFallbackLocation" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Resources::UltimateResourceFallbackLocation FallbackLocation { System::Resources::UltimateResourceFallbackLocation get(); void set(System::Resources::UltimateResourceFallbackLocation value); };" />
      <MemberSignature Language="F#" Value="member this.FallbackLocation : System.Resources.UltimateResourceFallbackLocation with get, set" Usage="System.Resources.ResourceManager.FallbackLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Resources.UltimateResourceFallbackLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает местоположение, из которого извлекаются резервные ресурсы по умолчанию.</summary>
        <value>Одно из значений перечисления, которое указывает, где диспетчер ресурсов может выполнять поиск резервных ресурсов.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Resources.ResourceManager.FallbackLocation%2A> Свойство полезно, только в том случае, если написать свой собственный класс, производный от <xref:System.Resources.ResourceManager> класса.  
  
 Можно использовать <xref:System.Resources.NeutralResourcesLanguageAttribute> атрибут диспетчера ресурсов о том, где можно найти язык и региональные параметры по умолчанию для приложения: в основную сборку (по умолчанию) или во вспомогательную сборку.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Resources.UltimateResourceFallbackLocation" />
        <altmember cref="T:System.Resources.NeutralResourcesLanguageAttribute" />
        <related type="Article" href="~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md">Упаковка и развертывание ресурсов</related>
      </Docs>
    </Member>
    <Member MemberName="GetNeutralResourcesLanguage">
      <MemberSignature Language="C#" Value="protected static System.Globalization.CultureInfo GetNeutralResourcesLanguage (System.Reflection.Assembly a);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.Globalization.CultureInfo GetNeutralResourcesLanguage(class System.Reflection.Assembly a) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceManager.GetNeutralResourcesLanguage(System.Reflection.Assembly)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function GetNeutralResourcesLanguage (a As Assembly) As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::Globalization::CultureInfo ^ GetNeutralResourcesLanguage(System::Reflection::Assembly ^ a);" />
      <MemberSignature Language="F#" Value="static member GetNeutralResourcesLanguage : System.Reflection.Assembly -&gt; System.Globalization.CultureInfo" Usage="System.Resources.ResourceManager.GetNeutralResourcesLanguage a" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Reflection.Assembly" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="a">Сборка, для которой требуется возвратить информацию, относящуюся к конкретному языку и региональным параметрам.</param>
        <summary>Возвращает сведения, относящиеся к конкретному языку и региональным параметрам, для ресурсов основной сборки по умолчанию путем получения значения атрибута <see cref="T:System.Resources.NeutralResourcesLanguageAttribute" /> в указанной сборке.</summary>
        <returns>Язык и региональные параметры из атрибута <see cref="T:System.Resources.NeutralResourcesLanguageAttribute" />, если они найдены; в противном случае — инвариантный язык и региональные параметры.</returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">При вызове с поздним связыванием через механизмы например <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />. Связанное перечисление: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetObject">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Возвращает значение указанного нестрокового ресурса для текущего языка и региональных параметров.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetObject">
      <MemberSignature Language="C#" Value="public virtual object GetObject (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetObject(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceManager.GetObject(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetObject (name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetObject(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetObject : string -&gt; obj&#xA;override this.GetObject : string -&gt; obj" Usage="resourceManager.GetObject name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="name">Имя получаемого ресурса.</param>
        <summary>Возвращает значение указанного нестрокового ресурса.</summary>
        <returns>Значение ресурса, локализованного для текущих настроек языка и региональных параметров вызывающего объекта. Если соответствующий набор ресурсов существует, но параметр <paramref name="name" /> не найден, то метод возвращает значение <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Resources.ResourceManager.GetObject%2A> Метод используется для извлечения нестроковых ресурсов. К ним относятся значения, принадлежащие типы-примитивы, такие как <xref:System.Int32> или <xref:System.Double>, точечные рисунки (такие как <xref:System.Drawing.Bitmap?displayProperty=nameWithType> объект), или пользовательский сериализованных объектов. Обычно возвращаемый объект должен приведите (в C#) или преобразован (в Visual Basic) в объект нужного типа.  
  
 Возвращаемый ресурс локализован для языка и региональных параметров пользовательского интерфейса текущего потока, который определяется с <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> свойство. Если ресурс не локализован для этого языка и региональных параметров, диспетчер ресурсов использует резервные правила для загрузки соответствующего ресурса. При обнаружении не подходящий набор локализованных ресурсов <xref:System.Resources.ResourceManager> возвращается ресурсов культуры по умолчанию. Если набор ресурсов для культуры по умолчанию не найден, метод вызывает <xref:System.Resources.MissingManifestResourceException> исключение или, если ожидается набор ресурсов, находятся во вспомогательной сборке, <xref:System.Resources.MissingSatelliteAssemblyException> исключение. Если диспетчер ресурсов можно загрузить подходящий ресурс задать, но не удается найти ресурс с именем `name`, метод возвращает `null`.  
  
 <xref:System.Resources.ResourceManager.IgnoreCase%2A> Свойство определяет, является ли сравнение `name` с именами ресурсов — без учета регистра или с учетом регистра (по умолчанию).  
  
> [!CAUTION]
>  Этот метод может создавать дополнительные исключения, чем указано в списке. Является одной из причин, по это может произойти, если метод, который вызывает этот метод создает исключение.  Например <xref:System.IO.FileLoadException> может быть исключение, если ошибка была сделана развертывание или Установка вспомогательной сборки, или объект <xref:System.Runtime.Serialization.SerializationException> исключение может быть вызвано, если определяемый пользователем тип создает исключение определяемых пользователем при десериализации типа.  
  
## <a name="performance-considerations"></a>Особенности производительности  
 При вызове метода <xref:System.Resources.ResourceManager.GetObject%2A> метод несколько раз с тем же `name` параметр, не зависят от метода, возвращающего ссылку на один и тот же объект при каждом вызове. Это обусловлено <xref:System.Resources.ResourceManager.GetObject%2A> метод может возвращать ссылку на существующий объект ресурса в кэше, или может перезагрузить ресурса и вернуть ссылку на объект ресурса.  
  
   
  
## Examples  
 В следующем примере для десериализации настраиваемого объекта используется метод <xref:System.Resources.ResourceManager.GetObject%28System.String%29> . Пример включает файл исходного кода, с именем UIElements.cs (UIElements.vb, если вы используете Visual Basic), определяющий следующую структуру с именем `PersonTable`. Эта структура предназначена для использования подпрограммой общего отображения таблиц, которая отображает локализованные имена для столбцов таблиц. Обратите внимание, что структура `PersonTable` помечена атрибутом <xref:System.SerializableAttribute> .  
  
 [!code-csharp[Conceptual.Resources.Retrieving#6](~/samples/snippets/csharp/VS_Snippets_CLR/conceptual.resources.retrieving/cs/example.cs#6)]
 [!code-vb[Conceptual.Resources.Retrieving#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.resources.retrieving/vb/example.vb#6)]  
  
 Следующий код из файла CreateResources.cs (CreateResources.vb для Visual Basic) создает файл ресурсов XML с именем UIResources.resx, где хранится заголовок таблицы, и объект `PersonTable` , содержащий сведения о приложении, локализуемые для английского языка.  
  
 [!code-csharp[Conceptual.Resources.Retrieving#7](~/samples/snippets/csharp/VS_Snippets_CLR/conceptual.resources.retrieving/cs/example1.cs#7)]
 [!code-vb[Conceptual.Resources.Retrieving#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.resources.retrieving/vb/example.vb#7)]  
  
 После этого приведенный ниже код из файла GetObject.cs (GetObject.vb) извлекает ресурсы и выводит их на консоль.  
  
 [!code-csharp[Conceptual.Resources.Retrieving#8](~/samples/snippets/csharp/VS_Snippets_CLR/conceptual.resources.retrieving/cs/example2.cs#8)]
 [!code-vb[Conceptual.Resources.Retrieving#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.resources.retrieving/vb/example2.vb#8)]  
  
 Создать нужный файл ресурсов, сборки и запустить приложение можно, запустив следующий пакетный файл. Необходимо использовать параметр `/r` , чтобы предоставить Resgen.exe ссылку на UIElements.dll для доступа к информации о структуре `PersonTable` . Если используется C#, замените имя компилятора `vbc` на `csc`и расширение `.vb` на `.cs`.  
  
```  
  
vbc /t:library UIElements.vb  
vbc CreateResources.vb /r:UIElements.dll  
CreateResources  
  
resgen UIResources.resx  /r:UIElements.dll  
vbc GetObject.vb /r:UIElements.dll /resource:UIResources.resources  
  
GetObject.exe  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="name" /> — <see langword="null" />.</exception>
        <exception cref="T:System.Resources.MissingManifestResourceException">Не найден подходящий набор локализованных ресурсов и отсутствуют ресурсы языка и региональных параметров по умолчанию. Сведения об обработке этого исключения см. в подразделе "Обработка исключений MissingManifestResourceException и MissingSatelliteAssemblyException" раздела, посвященного классу <see cref="T:System.Resources.ResourceManager" />.</exception>
        <exception cref="T:System.Resources.MissingSatelliteAssemblyException">Ресурсы языка и региональных параметров по умолчанию находятся во вспомогательной сборке, которую не удалось найти. Сведения об обработке этого исключения см. в подразделе "Обработка исключений MissingManifestResourceException и MissingSatelliteAssemblyException" раздела, посвященного классу <see cref="T:System.Resources.ResourceManager" />.</exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">При вызове с поздним связыванием через механизмы например <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />. Связанное перечисление: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</permission>
        <altmember cref="M:System.Resources.ResourceManager.GetStream(System.String)" />
        <related type="Article" href="~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md">Упаковка и развертывание ресурсов</related>
      </Docs>
    </Member>
    <Member MemberName="GetObject">
      <MemberSignature Language="C#" Value="public virtual object GetObject (string name, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetObject(string name, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceManager.GetObject(System.String,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetObject (name As String, culture As CultureInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetObject(System::String ^ name, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member GetObject : string * System.Globalization.CultureInfo -&gt; obj&#xA;override this.GetObject : string * System.Globalization.CultureInfo -&gt; obj" Usage="resourceManager.GetObject (name, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="name">Имя получаемого ресурса.</param>
        <param name="culture">Язык и региональные параметры, для которых локализован данный ресурс. Если ресурс для языка и региональных параметров не локализован, диспетчер ресурсов использует резервные правила для определения подходящего ресурса.  
  
Если это значение равно <see langword="null" />, получается объект <see cref="T:System.Globalization.CultureInfo" /> с использованием свойства <see cref="P:System.Globalization.CultureInfo.CurrentUICulture" />.</param>
        <summary>Получает значение указанного нестрокового ресурса, локализованного для указанного языка и региональных параметров.</summary>
        <returns>Значение ресурса, локализованного для указанного языка и региональных параметров. Если соответствующий набор ресурсов существует, но параметр <paramref name="name" /> не найден, то метод возвращает значение <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Resources.ResourceManager.GetObject%28System.String%2CSystem.Globalization.CultureInfo%29> Метод используется для извлечения нестроковых ресурсов. К ним относятся значения, принадлежащие типы-примитивы, такие как <xref:System.Int32> или <xref:System.Double>, точечные рисунки (такие как <xref:System.Drawing.Bitmap?displayProperty=nameWithType> объект), или пользовательский сериализованных объектов. Обычно возвращаемый объект должен приведите (в C#) или преобразован (в Visual Basic) в объект нужного типа.  
  
 Возвращаемый ресурс локализован для языка и региональных параметров, который задается параметром `culture`, или для языка и региональных параметров, который задается параметром <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> свойство Если `culture` является `null`. Если ресурс не локализован для этого языка и региональных параметров, диспетчер ресурсов использует резервные правила для загрузки соответствующего ресурса. Если будет найдено никаких возможных наборов локализованных ресурсов, диспетчер ресурсов возвращается ресурсов культуры по умолчанию. Если набор ресурсов для культуры по умолчанию не найден, метод вызывает <xref:System.Resources.MissingManifestResourceException> исключение или, если ожидается набор ресурсов, находятся во вспомогательной сборке, <xref:System.Resources.MissingSatelliteAssemblyException> исключение. Если диспетчер ресурсов можно загрузить подходящий ресурс задать, но не удается найти ресурс с именем `name`, метод возвращает `null`.  
  
 <xref:System.Resources.ResourceManager.IgnoreCase%2A> Определяет свойство ли сравнение `name` с имена ресурсов не учитывается регистр (по умолчанию) или с учетом регистра.  
  
> [!CAUTION]
>  Этот метод может создавать дополнительные исключения, чем указано в списке. Является одной из причин, по это может произойти, если метод, который вызывает этот метод создает исключение.  Например <xref:System.IO.FileLoadException> может быть исключение, если ошибка была сделана развертывание или Установка вспомогательной сборки, или объект <xref:System.Runtime.Serialization.SerializationException> исключение может быть вызвано, если определяемый пользователем тип создает исключение определяемых пользователем при десериализации типа.  
  
## <a name="performance-considerations"></a>Особенности производительности  
 При вызове метода <xref:System.Resources.ResourceManager.GetObject%2A> метод несколько раз с тем же `name` параметр, не зависят от метода, возвращающего ссылку на один и тот же объект при каждом вызове. Это обусловлено <xref:System.Resources.ResourceManager.GetObject%2A> метод может возвращать ссылку на существующий объект ресурса в кэше, или может перезагрузить ресурса и вернуть ссылку на объект ресурса.  
  
   
  
## Examples  
 В следующем примере для десериализации настраиваемого объекта используется метод <xref:System.Resources.ResourceManager.GetObject%28System.String%2CSystem.Globalization.CultureInfo%29> . Пример включает файл исходного кода, с именем NumberInfo.cs (NumberInfo.vb, если вы используете Visual Basic), определяющий следующую структуру с именем `Numbers`. Эта структура предназначена для использования простого образовательные приложения, которое обучает неанглийские произношения отсчет до десяти на английском языке. Обратите внимание, что `Numbers` класс, помеченный с <xref:System.SerializableAttribute> атрибута.  
  
 [!code-csharp[System.Resources.ResourceManager.GetObject#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcemanager.getobject/cs/numberinfo.cs#1)]
 [!code-vb[System.Resources.ResourceManager.GetObject#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcemanager.getobject/vb/numberinfo.vb#1)]  
  
 Следующий исходный код из файла именованный CreateResources.cs (CreateResources.vb для Visual Basic) создает XML-файлы ресурсов для английского языка по умолчанию, а также для языков, французский, португальский и русский.  
  
 [!code-csharp[System.Resources.ResourceManager.GetObject#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcemanager.getobject/cs/createresources.cs#2)]
 [!code-vb[System.Resources.ResourceManager.GetObject#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcemanager.getobject/vb/createresources.vb#2)]  
  
 Ресурсы могут использоваться следующие приложение, которое задает текущий язык и региональные параметры пользовательского интерфейса для французского (Франция), португальский (Бразилия) и русский (Россия). Он вызывает <xref:System.Resources.ResourceManager.GetObject%28System.String%29> метод для получения `Numbers` объект, который содержит локализованные числа и <xref:System.Resources.ResourceManager.GetObject%28System.String%2CSystem.Globalization.CultureInfo%29> метод для получения `Numbers` объект, содержащий числа для английского языка. Затем он отобразит нечетных чисел, используя текущий язык и региональные параметры пользовательского интерфейса и английского языка. Файл исходного кода называется ShowNumbers.cs (ShowNumbers.vb).  
  
 [!code-csharp[System.Resources.ResourceManager.GetObject#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcemanager.getobject/cs/shownumbers.cs#3)]
 [!code-vb[System.Resources.ResourceManager.GetObject#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcemanager.getobject/vb/shownumbers.vb#3)]  
  
 Следующий пакетный файл можно использовать для построения и выполнения Visual Basic версию примера. Если вы используете C#, замените `vbc` с `csc`и замените `.vb` расширение с `.cs`.  
  
```  
  
vbc /t:library NumberInfo.vb  
  
vbc CreateResources.vb /r:NumberInfo.dll  
CreateResources  
  
resgen NumberResources.resx /r:NumberInfo.dll  
  
resgen NumberResources.fr.resx /r:Numberinfo.dll  
Md fr  
al /embed:NumberResources.fr.resources /culture:fr /t:lib /out:fr\ShowNumbers.resources.dll  
  
resgen NumberResources.pt.resx  /r:Numberinfo.dll  
Md pt  
al /embed:NumberResources.pt.resources /culture:pt /t:lib /out:pt\ShowNumbers.resources.dll  
  
resgen NumberResources.ru.resx /r:Numberinfo.dll  
Md ru  
al /embed:NumberResources.ru.resources /culture:ru /t:lib /out:ru\ShowNumbers.resources.dll  
  
vbc ShowNumbers.vb /r:NumberInfo.dll /resource:NumberResources.resources  
ShowNumbers.exe  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="name" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Resources.MissingManifestResourceException">Не было найдено никаких возможных наборов ресурсов и отсутствуют ресурсы языка и региональных параметров по умолчанию. Сведения об обработке этого исключения см. в подразделе "Обработка исключений MissingManifestResourceException и MissingSatelliteAssemblyException" раздела, посвященного классу <see cref="T:System.Resources.ResourceManager" />.</exception>
        <exception cref="T:System.Resources.MissingSatelliteAssemblyException">Ресурсы языка и региональных параметров по умолчанию находятся во вспомогательной сборке, которую не удалось найти. Сведения об обработке этого исключения см. в подразделе "Обработка исключений MissingManifestResourceException и MissingSatelliteAssemblyException" раздела, посвященного классу <see cref="T:System.Resources.ResourceManager" />.</exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">При вызове с поздним связыванием через механизмы например <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />. Связанное перечисление: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</permission>
        <threadsafe><see cref="M:System.Resources.ResourceManager.GetObject(System.String,System.Globalization.CultureInfo)" /> Метод является потокобезопасным.</threadsafe>
        <altmember cref="M:System.Resources.ResourceManager.GetStream(System.String,System.Globalization.CultureInfo)" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <related type="Article" href="~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md">Упаковка и развертывание ресурсов</related>
      </Docs>
    </Member>
    <Member MemberName="GetResourceFileName">
      <MemberSignature Language="C#" Value="protected virtual string GetResourceFileName (System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetResourceFileName(class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceManager.GetResourceFileName(System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetResourceFileName (culture As CultureInfo) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetResourceFileName(System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member GetResourceFileName : System.Globalization.CultureInfo -&gt; string&#xA;override this.GetResourceFileName : System.Globalization.CultureInfo -&gt; string" Usage="resourceManager.GetResourceFileName culture" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="culture">Объект языка и региональных параметров, для которых создается имя файла ресурсов.</param>
        <summary>Создает имя файла ресурсов для заданного объекта <see cref="T:System.Globalization.CultureInfo" />.</summary>
        <returns>Имя, которое может быть использовано для файла ресурсов для заданного объекта <see cref="T:System.Globalization.CultureInfo" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Resources.ResourceManager.GetResourceFileName%2A> Метод полезен только в том случае, если написать свой собственный класс, производный от <xref:System.Resources.ResourceManager> класса.  
  
 Этот метод использует <xref:System.Globalization.CultureInfo.Name%2A?displayProperty=nameWithType> свойство как часть имени файла для всех языков, отличных от инвариантного языка и региональных параметров. Этот метод не выглядит в манифест сборки и не касается диска и используется только для создания имени файла ресурсов (подходит для передачи <xref:System.Resources.ResourceReader> конструктор) или имени ресурса манифеста BLOB-объектов.  
  
 Производный класс может переопределить этот метод для поиска другого расширения, такие как «. ResX», или совершенно другой схемы именования файлов ресурсов. Обратите внимание на то, что метод может использоваться для настройки имени файла ресурсов в вспомогательной сборки и не настраивать имя самой вспомогательной сборки.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">При вызове с поздним связыванием через механизмы например <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />. Связанное перечисление: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</permission>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <related type="Article" href="~/docs/standard/globalization-localization/index.md">Глобализация и локализация приложений .NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetResourceSet">
      <MemberSignature Language="C#" Value="public virtual System.Resources.ResourceSet GetResourceSet (System.Globalization.CultureInfo culture, bool createIfNotExists, bool tryParents);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Resources.ResourceSet GetResourceSet(class System.Globalization.CultureInfo culture, bool createIfNotExists, bool tryParents) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceManager.GetResourceSet(System.Globalization.CultureInfo,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetResourceSet (culture As CultureInfo, createIfNotExists As Boolean, tryParents As Boolean) As ResourceSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Resources::ResourceSet ^ GetResourceSet(System::Globalization::CultureInfo ^ culture, bool createIfNotExists, bool tryParents);" />
      <MemberSignature Language="F#" Value="abstract member GetResourceSet : System.Globalization.CultureInfo * bool * bool -&gt; System.Resources.ResourceSet&#xA;override this.GetResourceSet : System.Globalization.CultureInfo * bool * bool -&gt; System.Resources.ResourceSet" Usage="resourceManager.GetResourceSet (culture, createIfNotExists, tryParents)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Resources.ResourceSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="createIfNotExists" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="tryParents" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="culture">Язык и региональные параметры, ресурсы которых необходимо получить.</param>
        <param name="createIfNotExists"><see langword="true" /> для загрузки набора ресурсов, если он еще не загружен; в противном случае — значение <see langword="false" />.</param>
        <param name="tryParents"><see langword="true" /> для использования резервных ресурсов для загрузки соответствующего ресурса, если набор ресурсов не может быть найден. <see langword="false" /> для обхода процесса использования резервных ресурсов.</param>
        <summary>Извлекает набор ресурсов для определенного языка и региональных параметров.</summary>
        <returns>Набор ресурсов для указанного языка и региональных параметров.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Набор ресурсов, который возвращается представляет ресурсы, которые были локализованы для указанного языка и региональных параметров. Если ресурсы не были локализованы для этого языка и региональных параметров и `tryParents` — `true`, <xref:System.Resources.ResourceManager.GetResourceSet%2A> использует правила резервных ресурсов для загрузки соответствующего ресурса. Если `tryParents` — `false` и не найден набор ресурсов, связанные с языком и региональными параметрами, метод возвращает `null`. Дополнительные сведения о возврата ресурсов, см. в разделе «Процесс резервных ресурсов» статьи [упаковка и развертывание ресурсов](~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md) статьи.  
  
   
  
## Examples  
 В следующем примере вызывается <xref:System.Resources.ResourceManager.GetResourceSet%2A> метод для извлечения ресурсов, связанных с языком и региональными параметрами для французского (Франция) языка и региональных параметров. Затем выполняется перечисление всех ресурсов в наборе ресурсов. Он содержит исходный код для исполняемого файла с именем ShowNumbers.exe. Она также включает следующие два текстовый файл, который содержит имена чисел. Во-первых, NumberResources.txt, содержащий имена числа в диапазоне от 1 до 10 на английском языке:  
  
```  
  
one=one  
two=two  
three=three  
four=four  
five=five  
six=six  
seven=seven  
eight=eight  
nine=nine  
ten=ten  
  
```  
  
 Второй, NumberResources.fr-FR.txt, содержащий имена числа в диапазоне от одного до четырех на французском языке:  
  
```  
  
one=un  
two=deux  
three=trois  
four=quatre  
  
```  
  
 Пакетный файл позволяет создавать файлы ресурсов, внедрить файл ресурсов английского языка в исполняемый файл и создание вспомогательной сборки для ресурсов, французского языка. Ниже приведен пакетный файл, чтобы создать исполняемый файл с помощью компилятора Visual Basic.  
  
```  
  
resgen NumberResources.txt  
vbc shownumbers.vb /resource:NumberResources.resources  
  
md fr-FR  
resgen NumberResources.fr-FR.txt  
al /out:fr-FR\ShowNumbers.resources.dll /culture:fr-FR /embed:NumberResources.fr-FR.resources  
```  
  
 Для компилятора C# можно использовать следующий пакетный файл:  
  
```  
  
resgen NumberResources.txt  
csc shownumbers.cs /resource:NumberResources.resources  
  
md fr-FR  
resgen NumberResources.fr-FR.txt  
al /out:fr-FR\ShowNumbers.resources.dll /culture:fr-FR /embed:NumberResources.fr-FR.resources  
  
```  
  
 [!code-csharp[System.Resources.ResourceManager.GetResourceSet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcemanager.getresourceset/cs/shownumbers.cs#1)]
 [!code-vb[System.Resources.ResourceManager.GetResourceSet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcemanager.getresourceset/vb/shownumbers.vb#1)]  
  
 Обратите внимание, что если изменить значение `createIfNotExists` аргумент `false`, вызов метода возвращает `null`, так как в Resource Manager еще не загружено ресурсы французского языка.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="culture" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Resources.MissingManifestResourceException">Параметр <paramref name="tryParents" /> имеет значение <see langword="true" />, не найден подходящий набор ресурсов, и отсутствуют ресурсы языка и региональных параметров по умолчанию.</exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">При вызове с поздним связыванием через механизмы например <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />. Связанное перечисление: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</permission>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <related type="Article" href="~/docs/standard/globalization-localization/index.md">Глобализация и локализация приложений .NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetSatelliteContractVersion">
      <MemberSignature Language="C#" Value="protected static Version GetSatelliteContractVersion (System.Reflection.Assembly a);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.Version GetSatelliteContractVersion(class System.Reflection.Assembly a) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceManager.GetSatelliteContractVersion(System.Reflection.Assembly)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function GetSatelliteContractVersion (a As Assembly) As Version" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static Version ^ GetSatelliteContractVersion(System::Reflection::Assembly ^ a);" />
      <MemberSignature Language="F#" Value="static member GetSatelliteContractVersion : System.Reflection.Assembly -&gt; Version" Usage="System.Resources.ResourceManager.GetSatelliteContractVersion a" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Reflection.Assembly" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="a">Сборка для проверки атрибутов <see cref="T:System.Resources.SatelliteContractVersionAttribute" />.</param>
        <summary>Возвращает версию, указанную атрибутом <see cref="T:System.Resources.SatelliteContractVersionAttribute" /> в заданной сборке.</summary>
        <returns>Версия сопутствующего контракта данной сборки либо значение <see langword="null" />, если версия не была найдена.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Дополнительные сведения об управлении версиями вспомогательных сборок см. в разделе <xref:System.Resources.SatelliteContractVersionAttribute> справочника.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Объект <see cref="T:System.Version" />, найденный в сборке <paramref name="a" />, неверен.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="a" /> — <see langword="null" />.</exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">При вызове с поздним связыванием через механизмы например <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />. Связанное перечисление: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</permission>
        <altmember cref="T:System.Resources.SatelliteContractVersionAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetStream">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Возвращает неуправляемый объект потока памяти из заданного ресурса.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetStream">
      <MemberSignature Language="C#" Value="public System.IO.UnmanagedMemoryStream GetStream (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.UnmanagedMemoryStream GetStream(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceManager.GetStream(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStream (name As String) As UnmanagedMemoryStream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::UnmanagedMemoryStream ^ GetStream(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.GetStream : string -&gt; System.IO.UnmanagedMemoryStream" Usage="resourceManager.GetStream name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.UnmanagedMemoryStream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="name">Имя ресурса.</param>
        <summary>Возвращает неуправляемый объект потока памяти из заданного ресурса.</summary>
        <returns>Объект потока неуправляемой памяти, представляющий ресурс.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Resources.ResourceManager.GetStream%2A> Метод принимает имя ресурса, который хранится в виде <xref:System.IO.MemoryStream> объекта, получает значение <xref:System.Object> ресурсов и возвращает <xref:System.IO.UnmanagedMemoryStream> объекта. Требуется работать непосредственно с поток байтов, которые затем преобразование в объект. Этот метод полезен в основном для повышения производительности: Извлечение ресурса в виде байтового потока вместо явного объекта может повысить производительность.  
  
 Возвращаемый ресурс локализован для языка и региональных параметров пользовательского интерфейса текущего потока, который определяется с <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> свойство. Если ресурс не локализован для этого языка и региональных параметров, диспетчер ресурсов использует резервные правила для загрузки соответствующего ресурса. При обнаружении не подходящий набор локализованных ресурсов <xref:System.Resources.ResourceManager> возвращается ресурсов культуры по умолчанию. Если набор ресурсов для культуры по умолчанию не найден, метод вызывает <xref:System.Resources.MissingManifestResourceException> исключение или, если ожидается набор ресурсов, находятся во вспомогательной сборке, <xref:System.Resources.MissingSatelliteAssemblyException> исключение. Если диспетчер ресурсов можно загрузить подходящий ресурс задать, но не удается найти ресурс с именем `name`, метод возвращает `null`.  
  
 <xref:System.Resources.ResourceManager.IgnoreCase%2A> Определяет свойство ли сравнение `name` с имена ресурсов не учитывается регистр (по умолчанию) или с учетом регистра.  
  
   
  
## Examples  
 В следующем примере метод <xref:System.Resources.ResourceManager.GetStream%28System.String%29> используется для извлечения точечного рисунка, который используется на экране-заставке приложения. Следующий исходный код из файла с именем CreateResources.cs (для C#) или CreateResources.vb (для Visual Basic) создает RESX-файл с именем AppResources.resx, содержащий сериализованное изображение. В этом случае изображение загружается из файла SplashScreen.jpg; имя файла можно изменить, чтобы использовать собственное изображение.  
  
 [!code-csharp[Conceptual.Resources.Retrieving#4](~/samples/snippets/csharp/VS_Snippets_CLR/conceptual.resources.retrieving/cs/createresources.cs#4)]
 [!code-vb[Conceptual.Resources.Retrieving#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.resources.retrieving/vb/createresources.vb#4)]  
  
 В следующем коде из файла с именем GetStream.cs (для C#) или GetStream.vb (для Visual Basic), затем извлекает ресурс и отображает изображение в <xref:System.Windows.Forms.PictureBox?displayProperty=nameWithType> элемента управления.  
  
 [!code-csharp[Conceptual.Resources.Retrieving#5](~/samples/snippets/csharp/VS_Snippets_CLR/conceptual.resources.retrieving/cs/getstream.cs#5)]
 [!code-vb[Conceptual.Resources.Retrieving#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.resources.retrieving/vb/getstream.vb#5)]  
  
 Для сборки примера на C# можно использовать приведенный ниже пакетный файл. Для Visual Basic замените `csc` на `vbc`, а также расширение файла исходного кода `.cs` на `.vb`. 
  
```  
  
csc CreateResources.cs  
CreateResources  
  
resgen AppResources.resx  
  
csc GetStream.cs /resource:AppResources.resources  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Значение указанного ресурса не является объектом <see cref="T:System.IO.MemoryStream" />.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="name" /> — <see langword="null" />.</exception>
        <exception cref="T:System.Resources.MissingManifestResourceException">Не было найдено никаких возможных наборов ресурсов и отсутствуют ресурсы по умолчанию. Сведения об обработке этого исключения см. в подразделе "Обработка исключений MissingManifestResourceException и MissingSatelliteAssemblyException" раздела, посвященного классу <see cref="T:System.Resources.ResourceManager" />.</exception>
        <exception cref="T:System.Resources.MissingSatelliteAssemblyException">Ресурсы языка и региональных параметров по умолчанию находятся во вспомогательной сборке, которую не удалось найти. Сведения об обработке этого исключения см. в подразделе "Обработка исключений MissingManifestResourceException и MissingSatelliteAssemblyException" раздела, посвященного классу <see cref="T:System.Resources.ResourceManager" />.</exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">При вызове с поздним связыванием через механизмы например <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />. Связанное перечисление: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="GetStream">
      <MemberSignature Language="C#" Value="public System.IO.UnmanagedMemoryStream GetStream (string name, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.UnmanagedMemoryStream GetStream(string name, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceManager.GetStream(System.String,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStream (name As String, culture As CultureInfo) As UnmanagedMemoryStream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::UnmanagedMemoryStream ^ GetStream(System::String ^ name, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="member this.GetStream : string * System.Globalization.CultureInfo -&gt; System.IO.UnmanagedMemoryStream" Usage="resourceManager.GetStream (name, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.UnmanagedMemoryStream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="name">Имя ресурса.</param>
        <param name="culture">Объект, задающий язык и региональные параметры для использования при поиске ресурса. Если параметр <paramref name="culture" /> имеет значение <see langword="null" />, используются язык и региональные параметры для текущего потока.</param>
        <summary>Возвращает объект потока неуправляемой памяти из заданного ресурса, используя заданный язык и региональные параметры.</summary>
        <returns>Объект потока неуправляемой памяти, представляющий ресурс.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Resources.ResourceManager.GetStream%2A> Метод принимает имя ресурса, который хранится в виде <xref:System.IO.MemoryStream> объекта, получает значение <xref:System.Object> ресурсов и возвращает <xref:System.IO.UnmanagedMemoryStream> объекта. Требуется работать непосредственно с поток байтов, которые затем преобразование в объект. Этот метод полезен в основном для повышения производительности: Извлечение ресурса в виде байтового потока вместо явного объекта может повысить производительность.  
  
 Возвращаемый ресурс локализован для языка и региональных параметров, который задается параметром `culture`, или для языка и региональных параметров, который задается параметром <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> свойство Если `culture` является `null`. Если ресурс не локализован для этого языка и региональных параметров, диспетчер ресурсов использует резервные правила для загрузки соответствующего ресурса. При обнаружении не подходящий набор локализованных ресурсов <xref:System.Resources.ResourceManager> возвращается ресурсов культуры по умолчанию. Если набор ресурсов для культуры по умолчанию не найден, метод вызывает <xref:System.Resources.MissingManifestResourceException> исключение или, если ожидается набор ресурсов, находятся во вспомогательной сборке, <xref:System.Resources.MissingSatelliteAssemblyException> исключение. Если диспетчер ресурсов можно загрузить подходящий ресурс задать, но не удается найти ресурс с именем `name`, метод возвращает `null`.  
  
 <xref:System.Resources.ResourceManager.IgnoreCase%2A> Определяет свойство ли сравнение `name` с имена ресурсов не учитывается регистр (по умолчанию) или с учетом регистра.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Значение указанного ресурса не является объектом <see cref="T:System.IO.MemoryStream" />.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="name" /> — <see langword="null" />.</exception>
        <exception cref="T:System.Resources.MissingManifestResourceException">Не было найдено никаких возможных наборов ресурсов и отсутствуют ресурсы по умолчанию. Сведения об обработке этого исключения см. в подразделе "Обработка исключений MissingManifestResourceException и MissingSatelliteAssemblyException" раздела, посвященного классу <see cref="T:System.Resources.ResourceManager" />.</exception>
        <exception cref="T:System.Resources.MissingSatelliteAssemblyException">Ресурсы языка и региональных параметров по умолчанию находятся во вспомогательной сборке, которую не удалось найти. Сведения об обработке этого исключения см. в подразделе "Обработка исключений MissingManifestResourceException и MissingSatelliteAssemblyException" раздела, посвященного классу <see cref="T:System.Resources.ResourceManager" />.</exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">При вызове с поздним связыванием через механизмы например <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />. Связанное перечисление: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetString">
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Возвращает указанный ресурс строки для заданного языка и региональных параметров или текущего языка и региональных параметров пользовательского интерфейса.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public virtual string GetString (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetString(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceManager.GetString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetString (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetString(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetString : string -&gt; string&#xA;override this.GetString : string -&gt; string" Usage="resourceManager.GetString name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Имя извлекаемого ресурса.</param>
        <summary>Возвращает значение указанного строкового ресурса.</summary>
        <returns>Значение ресурса, локализованное для языка и региональных параметров текущего пользовательского интерфейса вызывающего объекта, или значение <see langword="null" />, если не удается найти <paramref name="name" /> в наборе ресурсов.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="desktop-apps"></a>Классические приложения  
 В классических приложениях, возвращается ресурс локализован для языка и региональных параметров пользовательского интерфейса текущего потока, согласно <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> свойство. Если ресурс не локализован для этого языка и региональных параметров, диспетчер ресурсов выполняет поиск ресурса, выполнив действия, описанные в разделе «Процесс использования резервных ресурсов» [упаковка и развертывание ресурсов](~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md) статьи. Если будет найдено никаких возможных наборов локализованных ресурсов, диспетчер ресурсов возвращается ресурсов культуры по умолчанию. Если диспетчер ресурсов не удается загрузить набор ресурсов культуры по умолчанию, метод вызывает <xref:System.Resources.MissingManifestResourceException> исключение или, если ожидается набор ресурсов, находятся во вспомогательной сборке, <xref:System.Resources.MissingSatelliteAssemblyException> исключение. Если диспетчер ресурсов можно загрузить подходящий ресурс задать, но не удается найти ресурс с именем `name`, метод возвращает `null`.  
  
 <xref:System.Resources.ResourceManager.IgnoreCase%2A> Определяет свойство ли сравнение `name` с имена ресурсов не учитывается регистр (по умолчанию) или с учетом регистра.  
  
> [!CAUTION]
>  Этот метод может создавать дополнительные исключения, чем указано в списке. Является одной из причин, по это может произойти, если метод, который вызывает этот метод создает исключение.  Например <xref:System.IO.FileLoadException> может быть исключение, если ошибка была сделана развертывание или Установка вспомогательной сборки, или объект <xref:System.Runtime.Serialization.SerializationException> исключение может быть вызвано, если определяемый пользователем тип создает исключение определяемых пользователем при десериализации типа.  
  
## <a name="includewin8appnamelongincludeswin8-appname-long-mdmd-apps"></a>Приложения [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]  
  
> [!IMPORTANT]
>  Несмотря на то что <xref:System.Resources.ResourceManager> класс поддерживается в [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] приложений, мы не рекомендуем ее использовать. Этот класс используется только в том случае, при разработке [!INCLUDE[net_portable](~/includes/net-portable-md.md)] проекты, которые могут использоваться с [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] приложений. Для извлечения ресурсов из [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] приложения, используют [Windows.ApplicationModel.Resources.ResourceLoader](https://go.microsoft.com/fwlink/p/?LinkId=238182) вместо этого класса.  
  
 В [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] приложений, <xref:System.Resources.ResourceManager.GetString%28System.String%29> метод возвращает значение `name` строка ресурса, локализованного для текущих параметров языка и региональных параметров пользовательского интерфейса вызывающего. Список языков и региональных параметров является производным от списка язык пользовательского интерфейса основной операционной системы. Если диспетчер ресурсов не может совпадать с `name`, метод возвращает `null`.  
  
   
  
## Examples  
 В следующем примере используется <xref:System.Resources.ResourceManager.GetString%2A> метод для извлечения ресурсов для конкретного языка и региональных параметров. Он состоит из ресурсов, скомпилированной на основе TXT-файлы для английского языка (en), французский (Франция) (fr-FR) и русского (Россия) (ru-RU) языков и региональных параметров. В примере изменяется текущий язык и региональные параметры текущего пользовательского интерфейса на английский (США), французский (Франция), русский (Россия) и шведский (Швеция). Затем он вызывает <xref:System.Resources.ResourceManager.GetString%2A> метод для извлечения локализованной строки, которая отображается вместе с текущего дня и месяца. Обратите внимание на то, что в выходных данных отображаются соответствующие локализованную строку, если текущий язык и региональные параметры пользовательского интерфейса не является шведский (Швеция). Так как шведский язык ресурсы недоступны, приложение вместо этого использует ресурсы языка и региональных параметров по умолчанию, на английском языке. В примере требуется файлы ресурсов на основе текста, перечисленные в следующей таблице. Каждый имеет один строковой ресурс с именем `DateStart`.  
  
|culture|Имя файла|Имя ресурса|Значение ресурса|  
|-------------|---------------|-------------------|--------------------|  
|en-US|DateStrings.txt|`DateStart`|Сегодня|  
|fr-FR|DateStrings.fr-FR.txt|`DateStart`|Aujourd'hui c'est le|  
|ru-RU|DateStrings.ru-RU.txt|`DateStart`|Сегодня|  
  
 Чтобы скомпилировать этот пример на C# можно использовать следующий пакетный файл. Для Visual Basic замените `csc` на `vbc`, а также расширение файла исходного кода `.cs` на `.vb`.  
  
```  
resgen DateStrings.txt  
csc showdate.cs /resource:DateStrings.resources  
  
md fr-FR  
resgen DateStrings.fr-FR.txt  
al /out:fr-FR\Showdate.resources.dll /culture:fr-FR /embed:DateStrings.fr-FR.resources   
  
md ru-RU  
resgen DateStrings.ru-RU.txt  
al /out:ru-RU\Showdate.resources.dll /culture:ru-RU /embed:DateStrings.ru-RU.resources  
```  
  
 Ниже приведен исходный код для примера (ShowDate.vb для версии Visual Basic) или ShowDate.cs для версии C#.  
  
 [!code-csharp[System.Resources.ResourceManager.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcemanager.class/cs/showdate.cs#2)]
 [!code-vb[System.Resources.ResourceManager.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcemanager.class/vb/showdate.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="name" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Значение указанного ресурса не является строковым.</exception>
        <exception cref="T:System.Resources.MissingManifestResourceException">Не найден подходящий набор ресурсов и отсутствуют ресурсы языка и региональных параметров по умолчанию. Сведения об обработке этого исключения см. в подразделе "Обработка исключений MissingManifestResourceException и MissingSatelliteAssemblyException" раздела, посвященного классу <see cref="T:System.Resources.ResourceManager" />.</exception>
        <exception cref="T:System.Resources.MissingSatelliteAssemblyException">Ресурсы языка и региональных параметров по умолчанию находятся во вспомогательной сборке, которую не удалось найти. Сведения об обработке этого исключения см. в подразделе "Обработка исключений MissingManifestResourceException и MissingSatelliteAssemblyException" раздела, посвященного классу <see cref="T:System.Resources.ResourceManager" />.</exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">При вызове с поздним связыванием через механизмы например <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />. Связанное перечисление: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</permission>
        <threadsafe><see cref="M:System.Resources.ResourceManager.GetString(System.String)" /> Метод является потокобезопасным.</threadsafe>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <related type="Article" href="~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md">Упаковка и развертывание ресурсов</related>
        <related type="Article" href="https://msdn.microsoft.com/library/eca16922-1c46-4f68-aefe-e7a12283641f">Извлечение ресурсов во вспомогательных сборках</related>
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public virtual string GetString (string name, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetString(string name, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceManager.GetString(System.String,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetString (name As String, culture As CultureInfo) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetString(System::String ^ name, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member GetString : string * System.Globalization.CultureInfo -&gt; string&#xA;override this.GetString : string * System.Globalization.CultureInfo -&gt; string" Usage="resourceManager.GetString (name, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="name">Имя извлекаемого ресурса.</param>
        <param name="culture">Объект, предоставляющий язык и региональные параметры, для которых локализуется ресурс.</param>
        <summary>Возвращает значение строкового ресурса, локализованного для указанного языка и региональных параметров.</summary>
        <returns>Значение ресурса, локализованное для указанного языка и региональных параметров, или значение <see langword="null" />, если не удается найти <paramref name="name" /> в наборе ресурсов.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="desktop-apps"></a>Классические приложения  
 В классических приложениях Если `culture` — `null`, <xref:System.Resources.ResourceManager.GetString%28System.String%2CSystem.Globalization.CultureInfo%29> методе используется текущий язык и региональные параметры пользовательского интерфейса, полученный из <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> свойство.  
  
 Ресурс, который возвращается локализован для языка и региональных параметров, заданные `culture` параметра. Если ресурс не локализован для `culture`, диспетчер ресурсов выполняет поиск ресурса, выполнив действия, описанные в разделе «Процесс использования резервных ресурсов» [упаковка и развертывание ресурсов](~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md) раздела. Если будет найдено никаких возможных наборов ресурсов, диспетчер ресурсов использует ресурсов культуры по умолчанию. Если диспетчер ресурсов не удается загрузить набор ресурсов культуры по умолчанию, метод вызывает <xref:System.Resources.MissingManifestResourceException> исключение или, если ожидается набор ресурсов, находятся во вспомогательной сборке, <xref:System.Resources.MissingSatelliteAssemblyException> исключение. Если диспетчер ресурсов можно загрузить подходящий ресурс задать, но не удается найти ресурс с именем `name`, метод возвращает `null`.  
  
 <xref:System.Resources.ResourceManager.IgnoreCase%2A> Определяет свойство ли сравнение `name` с имена ресурсов не учитывается регистр (по умолчанию) или с учетом регистра.  
  
> [!CAUTION]
>  Этот метод может создавать дополнительные исключения, чем указано в списке. Является одной из причин, по это может произойти, если метод, который вызывает этот метод создает исключение.  Например <xref:System.IO.FileLoadException> может быть исключение, если ошибка была сделана развертывание или Установка вспомогательной сборки, или объект <xref:System.Runtime.Serialization.SerializationException> исключение может быть вызвано, если определяемый пользователем тип создает исключение определяемых пользователем при десериализации типа.  
  
## <a name="includewin8appnamelongincludeswin8-appname-long-mdmd-apps"></a>Приложения [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]  
  
> [!IMPORTANT]
>  Несмотря на то что <xref:System.Resources.ResourceManager> класс поддерживается в [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] приложений, мы не рекомендуем ее использовать. Этот класс используется только в том случае, при разработке [!INCLUDE[net_portable](~/includes/net-portable-md.md)] проекты, которые могут использоваться с [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] приложений. Для извлечения ресурсов из [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] приложения, используют [Windows.ApplicationModel.Resources.ResourceLoader](https://go.microsoft.com/fwlink/p/?LinkId=238182) вместо этого класса.  
  
 В [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] приложений, <xref:System.Resources.ResourceManager.GetString%28System.String%2CSystem.Globalization.CultureInfo%29> метод возвращает значение `name` строка ресурса, локализованного для языка и региональных параметров, заданные `culture` параметра. Если ресурс не локализован для `culture` языка и региональных параметров, уточняющего запроса использует весь [!INCLUDE[win8](~/includes/win8-md.md)] резервный список языков и останавливается после просмотра региональных параметров по умолчанию. Если диспетчер ресурсов не может совпадать с `name`, метод возвращает `null`.  
  
   
  
## Examples  
 В следующем примере используется <xref:System.Resources.ResourceManager.GetString%28System.String%2CSystem.Globalization.CultureInfo%29> метод для извлечения ресурсов для конкретного языка и региональных параметров. Язык и региональные параметры для данного примера по умолчанию является английский (en), а также вспомогательные сборки для французского (Франция) (fr-FR) и русского (Россия) (ru-RU) языков и региональных параметров. В примере изменяется текущий язык и региональные параметры текущего пользовательского интерфейса на русский (Россия) перед вызовом <xref:System.Resources.ResourceManager.GetString%28System.String%2CSystem.Globalization.CultureInfo%29>. Затем он вызывает <xref:System.Resources.ResourceManager.GetString%2A> метод и <xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> и передает <xref:System.Globalization.CultureInfo> объекты, представляющие французского (Франция) и шведский (Швеция) языков и региональных параметров для каждого метода. В выходных данных, месяц и день месяца, а также строка, вставляемая перед их отображаться на французском языке, так как <xref:System.Resources.ResourceManager.GetString%2A> метод способен получить ресурса французского языка. Тем не менее при использовании шведский (Швеция) языка и региональных параметров отображения месяца и день месяца в шведском, несмотря на то, что строка, вставляемая перед их — на английском языке. Это так, как диспетчер ресурсов не удается найти локализованные шведская языковые ресурсы, чтобы он возвращал ресурсов для английского языка и региональных параметров по умолчанию.  
  
 В примере требуется файлы ресурсов на основе текста, перечисленные в следующей таблице. Каждый имеет один строковой ресурс с именем `DateStart`.  
  
|culture|Имя файла|Имя ресурса|Значение ресурса|  
|-------------|---------------|-------------------|--------------------|  
|en-US|DateStrings.txt|`DateStart`|Сегодня|  
|fr-FR|DateStrings.fr-FR.txt|`DateStart`|Aujourd'hui c'est le|  
|ru-RU|DateStrings.ru-RU.txt|`DateStart`|Сегодня|  
  
 Чтобы скомпилировать этот пример Visual Basic можно использовать следующий пакетный файл. Чтобы скомпилировать в C#, измените `vbc` для `csc`и измените расширение файла с исходным кодом из `.vb` для `.cs`.  
  
```  
resgen DateStrings.txt  
vbc showdate.vb /resource:DateStrings.resources  
  
md fr-FR  
resgen DateStrings.fr-FR.txt  
al /out:fr-FR\Showdate.resources.dll /culture:fr-FR /embed:DateStrings.fr-FR.resources   
  
md ru-RU  
resgen DateStrings.ru-RU.txt  
al /out:ru-RU\Showdate.resources.dll /culture:ru-RU /embed:DateStrings.ru-RU.resources  
```  
  
 Ниже приведен исходный код для примера (ShowDate.vb для версии Visual Basic) или ShowDate.cs для версии C#.  
  
 [!code-csharp[System.Resources.ResourceManager.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcemanager.class/cs/showdate2.cs#3)]
 [!code-vb[System.Resources.ResourceManager.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcemanager.class/vb/showdate2.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="name" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Значение указанного ресурса не является строковым.</exception>
        <exception cref="T:System.Resources.MissingManifestResourceException">Не найден подходящий набор ресурсов и отсутствуют ресурсы языка и региональных параметров по умолчанию. Сведения об обработке этого исключения см. в подразделе "Обработка исключений MissingManifestResourceException и MissingSatelliteAssemblyException" раздела, посвященного классу <see cref="T:System.Resources.ResourceManager" />.</exception>
        <exception cref="T:System.Resources.MissingSatelliteAssemblyException">Ресурсы языка и региональных параметров по умолчанию находятся во вспомогательной сборке, которую не удалось найти. Сведения об обработке этого исключения см. в подразделе "Обработка исключений MissingManifestResourceException и MissingSatelliteAssemblyException" раздела, посвященного классу <see cref="T:System.Resources.ResourceManager" />.</exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">При вызове с поздним связыванием через механизмы например <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />. Связанное перечисление: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</permission>
        <threadsafe><see cref="M:System.Resources.ResourceManager.GetString(System.String,System.Globalization.CultureInfo)" /> Метод является потокобезопасным.</threadsafe>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <related type="Article" href="~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md">Упаковка и развертывание ресурсов</related>
      </Docs>
    </Member>
    <Member MemberName="HeaderVersionNumber">
      <MemberSignature Language="C#" Value="public static readonly int HeaderVersionNumber;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly int32 HeaderVersionNumber" />
      <MemberSignature Language="DocId" Value="F:System.Resources.ResourceManager.HeaderVersionNumber" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly HeaderVersionNumber As Integer " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly int HeaderVersionNumber;" />
      <MemberSignature Language="F#" Value=" staticval mutable HeaderVersionNumber : int" Usage="System.Resources.ResourceManager.HeaderVersionNumber" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Указывает версию заголовков файлов ресурсов, которую текущая реализация <see cref="T:System.Resources.ResourceManager" /> может интерпретировать и создавать.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreCase">
      <MemberSignature Language="C#" Value="public virtual bool IgnoreCase { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreCase" />
      <MemberSignature Language="DocId" Value="P:System.Resources.ResourceManager.IgnoreCase" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property IgnoreCase As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IgnoreCase { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IgnoreCase : bool with get, set" Usage="System.Resources.ResourceManager.IgnoreCase" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, которое указывает, позволяет ли диспетчер ресурсов выполнять поиск ресурсов с учетом регистра методами <see cref="M:System.Resources.ResourceManager.GetString(System.String)" /> и <see cref="M:System.Resources.ResourceManager.GetObject(System.String)" />.</summary>
        <value>Значение <see langword="true" />, чтобы не учитывать регистр при поиске ресурсов, в противном случае — значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если значение <xref:System.Resources.ResourceManager.IgnoreCase%2A> свойство `false`, ресурс с именем «Ресурс» не соответствует ресурсу с именем «ресурс». Если <xref:System.Resources.ResourceManager.IgnoreCase%2A> является `true`, ресурс с именем «Ресурс» эквивалентно ресурс с именем «ресурс». Обратите внимание, что при <xref:System.Resources.ResourceManager.IgnoreCase%2A> — `true`, <xref:System.Resources.ResourceManager.GetString%2A?displayProperty=nameWithType> и <xref:System.Resources.ResourceManager.GetObject%2A?displayProperty=nameWithType> методы выполняют сравнения строк без учета регистра, с помощью инвариантного языка и региональных параметров. Преимущество заключается в том, что результаты сравнения строк без учета регистра, выполняемые этими методами одинаковы на всех компьютерах, независимо от языка и региональных параметров. Недостатком является то, что результаты не согласованы с правилами учета регистра для всех языков и региональных параметров.  
  
 Например в турецком алфавите имеет две версии знака I: один с точкой и один без точки. В турецком языке символ I (Unicode 0049) считается верхнерегистровая версия другим символом ı (Unicode 0131). Буква i (Unicode 0069) считается нижнего регистра вариант в еще один символ (Юникода 0130). В соответствии с правилами сравнения строк без учета регистра символов (Unicode 0069) i и I (Unicode 0049) приведет к ошибке для языка и региональных параметров «tr-TR» (турецкий Турция). Тем не менее так как, используя правила учета регистра инвариантного языка и региональных параметров, если проводится сравнение <xref:System.Resources.ResourceManager.IgnoreCase%2A> является `true`, это сравнение выполняется успешно.  
  
> [!NOTE]
>  Из соображений производительности рекомендуется всегда указывать правильный регистр имена ресурсов. Установка <xref:System.Resources.ResourceManager.IgnoreCase%2A> для `true` может привести к существенное увеличение количества в рабочем множестве и значительные снижением производительности.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InternalGetResourceSet">
      <MemberSignature Language="C#" Value="protected virtual System.Resources.ResourceSet InternalGetResourceSet (System.Globalization.CultureInfo culture, bool createIfNotExists, bool tryParents);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Resources.ResourceSet InternalGetResourceSet(class System.Globalization.CultureInfo culture, bool createIfNotExists, bool tryParents) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceManager.InternalGetResourceSet(System.Globalization.CultureInfo,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function InternalGetResourceSet (culture As CultureInfo, createIfNotExists As Boolean, tryParents As Boolean) As ResourceSet" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Resources::ResourceSet ^ InternalGetResourceSet(System::Globalization::CultureInfo ^ culture, bool createIfNotExists, bool tryParents);" />
      <MemberSignature Language="F#" Value="abstract member InternalGetResourceSet : System.Globalization.CultureInfo * bool * bool -&gt; System.Resources.ResourceSet&#xA;override this.InternalGetResourceSet : System.Globalization.CultureInfo * bool * bool -&gt; System.Resources.ResourceSet" Usage="resourceManager.InternalGetResourceSet (culture, createIfNotExists, tryParents)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Resources.ResourceSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="createIfNotExists" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="tryParents" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="culture">Искомый объект языка и региональных параметров.</param>
        <param name="createIfNotExists"><see langword="true" /> для загрузки набора ресурсов, если он еще не загружен; в противном случае — значение <see langword="false" />.</param>
        <param name="tryParents">Значение <see langword="true" /> для проверки родительских объектов <see cref="T:System.Globalization.CultureInfo" />, если невозможно загрузить набор ресурсов; в противном случае — значение <see langword="false" />.</param>
        <summary>Предоставляет реализацию для обнаружения набора ресурсов.</summary>
        <returns>Указанный набор ресурсов.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Resources.MissingManifestResourceException">Главная сборка не содержит RESOURCES-файл, требуемый для обнаружения ресурса.</exception>
        <exception cref="T:System.ExecutionEngineException">Произошла внутренняя ошибка среды выполнения.</exception>
        <exception cref="T:System.Resources.MissingSatelliteAssemblyException">Не удается найти местоположение вспомогательной сборки, связанной с объектом <paramref name="culture" />.</exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">При вызове с поздним связыванием через механизмы например <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />. Связанное перечисление: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</permission>
        <block subset="none" type="overrides"><para>Этот метод выполняет все действия, необходимые для поиска ресурса задайте и может быть рекурсивным и повторный вход. Другими словами, этот метод может загружать сборки и триггер <see cref="E:System.AppDomain.AssemblyLoad" /> событие, которое затем выполняет обратный вызов <see cref="T:System.Resources.ResourceManager" /> объекта, который не был инициализирован полностью. Чтобы избежать излишних блокировок, этот метод не является потокобезопасным. <see cref="M:System.Resources.ResourceManager.GetResourceSet(System.Globalization.CultureInfo,System.Boolean,System.Boolean)" />, <see cref="M:System.Resources.ResourceManager.GetString(System.String)" />, И <see cref="M:System.Resources.ResourceManager.GetObject(System.String)" /> методы выполняют всю необходимую синхронизацию.</para></block>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <related type="Article" href="~/docs/standard/globalization-localization/index.md">Глобализация и локализация приложений .NET</related>
      </Docs>
    </Member>
    <Member MemberName="MagicNumber">
      <MemberSignature Language="C#" Value="public static readonly int MagicNumber;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly int32 MagicNumber" />
      <MemberSignature Language="DocId" Value="F:System.Resources.ResourceManager.MagicNumber" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MagicNumber As Integer " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly int MagicNumber;" />
      <MemberSignature Language="F#" Value=" staticval mutable MagicNumber : int" Usage="System.Resources.ResourceManager.MagicNumber" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Содержит номер, используемый для идентификации файлов ресурсов.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение присваивается 0xBEEFCACE. Первые четыре байта формата файла системы по умолчанию содержат 32-разрядное знаковое целое число в формате с прямым порядком байтов (см. в разделе <xref:System.Text.Encoding>).  
  
 Если <xref:System.Resources.ResourceManager.MagicNumber> найдено, следующий за ним байты будет иметь номер версии <xref:System.Resources.ResourceManager> заголовок и число, указывающее, сколько байт должны быть пропущены для устранения этого заголовка. Номер следующего указывает версию <xref:System.Resources.ResourceManager> , создавший заголовок и сведения о версиях.  
  
 Номер версии для текущей реализации равен единице. Последующие байты — строка с префиксом, содержащая имя <xref:System.Resources.IResourceReader>, который может читать этот файл.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MainAssembly">
      <MemberSignature Language="C#" Value="protected System.Reflection.Assembly MainAssembly;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.Reflection.Assembly MainAssembly" />
      <MemberSignature Language="DocId" Value="F:System.Resources.ResourceManager.MainAssembly" />
      <MemberSignature Language="VB.NET" Value="Protected MainAssembly As Assembly " />
      <MemberSignature Language="C++ CLI" Value="protected: System::Reflection::Assembly ^ MainAssembly;" />
      <MemberSignature Language="F#" Value="val mutable MainAssembly : System.Reflection.Assembly" Usage="System.Resources.ResourceManager.MainAssembly" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Задает главную сборку, содержащую ресурсы.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Resources.ResourceManager.MainAssembly> Поле используется только в том случае, если написать свой собственный класс, производный от <xref:System.Resources.ResourceManager> класса.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseAllResources">
      <MemberSignature Language="C#" Value="public virtual void ReleaseAllResources ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseAllResources() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceManager.ReleaseAllResources" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ReleaseAllResources ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReleaseAllResources();" />
      <MemberSignature Language="F#" Value="abstract member ReleaseAllResources : unit -&gt; unit&#xA;override this.ReleaseAllResources : unit -&gt; unit" Usage="resourceManager.ReleaseAllResources " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Сообщает диспетчеру ресурсов, что следует вызвать метод <see cref="M:System.Resources.ResourceSet.Close" /> на всех объектах <see cref="T:System.Resources.ResourceSet" /> и освободить все ресурсы.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод будет минимизировано рабочий набор в выполняющемся приложении. Дальнейший поиск на этом <xref:System.Resources.ResourceManager> объект будет более дорогостоящим, чем первый поиск, так как диспетчер ресурсов нужно найти и снова загрузить ресурсы. Это может быть полезно в некоторых сложных многопоточных сценариях, где создания нового <xref:System.Resources.ResourceManager> объект является соответствующее поведение.  
  
> [!NOTE]
>  Начиная с .NET Framework версии 2.0, <xref:System.Resources.ResourceManager.ReleaseAllResources%2A> метод не является поточно-ориентированным по отношению к <xref:System.Resources.ResourceManager.GetObject%2A>, <xref:System.Resources.ResourceManager.GetString%2A>, и <xref:System.Resources.ResourceManager.GetStream%2A> операций. Преимуществом этого изменения является улучшение производительности для нескольких потоков, которые обращаются к ресурсам. Тем не менее при вызове метода <xref:System.Resources.ResourceManager.ReleaseAllResources%2A> метод в одном потоке одновременное Получение ресурса в другой поток для операции get может вызвать исключение <xref:System.ObjectDisposedException> исключение.  
  
 Этот метод также можно использовать в ситуациях, где должны быть освобождены без ожидания для диспетчера ресурсов, чтобы полностью выходят за пределы области действия и уничтожаются сборщиком мусора управляемых экземпляров для ресурсов, созданных диспетчером ресурсов.  
  
> [!NOTE]
>  Вызов этого метода не выгружает вспомогательные сборки. Чтобы выгрузить вспомогательных сборок, используйте <xref:System.AppDomain.Unload%2A> метод.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">При вызове с поздним связыванием через механизмы например <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />. Связанное перечисление: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="ResourceSets">
      <MemberSignature Language="C#" Value="protected System.Collections.Hashtable ResourceSets;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.Collections.Hashtable ResourceSets" />
      <MemberSignature Language="DocId" Value="F:System.Resources.ResourceManager.ResourceSets" />
      <MemberSignature Language="VB.NET" Value="Protected ResourceSets As Hashtable " />
      <MemberSignature Language="C++ CLI" Value="protected: System::Collections::Hashtable ^ ResourceSets;" />
      <MemberSignature Language="F#" Value="val mutable ResourceSets : System.Collections.Hashtable" Usage="System.Resources.ResourceManager.ResourceSets" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Obsolete("call InternalGetResourceSet instead")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Содержит объект <see cref="T:System.Collections.Hashtable" />, который возвращает сопоставление языков и региональных параметров с объектами <see cref="T:System.Resources.ResourceSet" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResourceSetType">
      <MemberSignature Language="C#" Value="public virtual Type ResourceSetType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ResourceSetType" />
      <MemberSignature Language="DocId" Value="P:System.Resources.ResourceManager.ResourceSetType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ResourceSetType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ ResourceSetType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ResourceSetType : Type" Usage="System.Resources.ResourceManager.ResourceSetType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает тип объекта набора ресурсов, используемый диспетчером ресурсов для построения объекта <see cref="T:System.Resources.ResourceSet" />.</summary>
        <value>тип объекта набора ресурсов, используемый диспетчером ресурсов для построения объекта <see cref="T:System.Resources.ResourceSet" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>