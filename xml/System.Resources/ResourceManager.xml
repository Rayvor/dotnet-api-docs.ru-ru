<Type Name="ResourceManager" FullName="System.Resources.ResourceManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ec67149f56ad7e3cb36ccd731752e1d26a7a0f7b" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75166867" /></Metadata><TypeSignature Language="C#" Value="public class ResourceManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit ResourceManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Resources.ResourceManager" />
  <TypeSignature Language="VB.NET" Value="Public Class ResourceManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class ResourceManager" />
  <TypeSignature Language="F#" Value="type ResourceManager = class" />
  <AssemblyInfo>
    <AssemblyName>System.Resources.ResourceManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netstandard-1.0;netstandard-1.1;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netcore-3.1">
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6">
      <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Представляет диспетчер ресурсов, обеспечивающий удобный доступ к ресурсам, связанным с языком и региональными параметрами, во время выполнения.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE [untrusted-data-class-note](~/includes/untrusted-data-class-note.md)]

 Класс <xref:System.Resources.ResourceManager> извлекает ресурсы из двоичного Resources-файла, внедренного в сборку или из автономного файла. Resources. Если приложение локализовано и локализованные ресурсы были развернуты во [вспомогательных сборках](~/docs/framework/resources/creating-satellite-assemblies-for-desktop-apps.md), он ищет ресурсы для конкретного языка и региональных параметров, предоставляет резервный ресурс, если локализованный ресурс не существует, и поддерживает сериализацию ресурсов.  
  
 Дополнительные сведения о создании и управлении ресурсами в классических приложениях и [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] приложениях см. в следующих разделах:  
  
-   [Классические приложения](#desktop)  
  
    -   [Создание ресурсов](#creating_resources)  
  
    -   [Создание экземпляра объекта ResourceManager](#instantiating)  
  
    -   [Ресурсы ResourceManager и языка и региональных параметров](#CultureSpecific)  
  
    -   [Извлечение ресурсов](#retrieving)  
  
    -   [Обработка исключений MissingManifestResourceException и Миссингсателлитеассемблексцептион](#exception)  
  
    -   [Управление версиями ресурсов](#versioning)  
  
    -   [Узел файла конфигурации \<сателлитеассемблиес >](#config)  
  
-   [Приложения Магазина Windows](#ws)  
  
<a name="desktop"></a>   
## <a name="desktop-apps"></a>Классические приложения  
 Для настольных приложений класс <xref:System.Resources.ResourceManager> извлекает ресурсы из двоичных файлов ресурсов (Resources). Как правило, компилятор языка или [Компоновщик сборок (Al. exe)](~/docs/framework/tools/al-exe-assembly-linker.md) внедряет эти файлы ресурсов в сборку. Можно также использовать объект <xref:System.Resources.ResourceManager> для извлечения ресурсов непосредственно из Resources-файла, который не внедрен в сборку, вызвав метод <xref:System.Resources.ResourceManager.CreateFileBasedResourceManager%2A>.  
  
> [!CAUTION]
>  Использование автономных Resources-файлов в приложении ASP.NET приведет к нарушению развертывания XCOPY, так как ресурсы остаются заблокированными до тех пор, пока они не будут явно освобождены методом <xref:System.Resources.ResourceManager.ReleaseAllResources%2A>. Если вы хотите развернуть ресурсы с помощью приложений ASP.NET, следует компилировать файлы Resources во вспомогательные сборки.  
  
 В приложении на основе ресурсов один RESOURCES-файл содержит ресурсы языка и региональных параметров по умолчанию, ресурсы которых используются, если не удается найти ресурсы для конкретного языка и региональных параметров. Например, если язык и региональные параметры по умолчанию для приложения — Английский (EN), то ресурсы на английском языке используются, когда локализованные ресурсы не могут быть найдены для определенного языка и региональных параметров, таких как английский (США) (EN-US) или французский (Франция) (fr-FR). Как правило, ресурсы для языка и региональных параметров по умолчанию внедряются в основную сборку приложения, а ресурсы для других локализованных языков и региональных параметров внедряются во вспомогательные сборки. Вспомогательные сборки содержат только ресурсы. Они имеют то же имя корневого файла, что и основная сборка, и расширение Resources. dll. Для приложений, сборки которых не зарегистрированы в глобальном кэше сборок, вспомогательные сборки хранятся в подкаталоге приложения, имя которого соответствует языку и региональным параметрам сборки.  
  
<a name="creating_resources"></a>   
### <a name="creating-resources"></a>Создание ресурсов  
 При разработке приложения на основе ресурсов сведения о ресурсах хранятся в текстовых файлах (файлах с расширением txt или restext) или в XML-файлах (файлах с расширением RESX). Затем вы компилируете текстовые или XML-файлы с помощью [генератора файлов ресурсов (Resgen. exe)](~/docs/framework/tools/resgen-exe-resource-file-generator.md) для создания файла binary. Resources. Затем можно внедрить полученный RESOURCES-файл в исполняемый объект или библиотеку с помощью параметра компилятора, например `/resources` для C# компиляторов и Visual Basic или встроить его во вспомогательную сборку с помощью. Если включить RESX-файл в проект Visual Studio, Visual Studio автоматически обрабатывает компиляцию и внедрение ресурсов по умолчанию и локализованные ресурсы как часть процесса сборки.  
  
 В идеале следует создавать ресурсы для каждого языка, поддерживаемого приложением, или по крайней мере для осмысленного подмножества каждого языка. Имена файлов binary. Resources соответствуют соглашению об именовании *basename*. *cultureName*. Resources, где *basename* — это имя приложения или имя класса в зависимости от требуемого уровня детализации. Свойство <xref:System.Globalization.CultureInfo.Name%2A?displayProperty=nameWithType> используется для определения *cultureName*. Ресурсом для языка и региональных параметров по умолчанию для приложения должно быть присвоено имя *basename*. Resources.  
  
 Например, предположим, что сборка содержит несколько ресурсов в файле ресурсов с базовым именем Миресаурцес. Эти файлы ресурсов должны иметь такие имена, как Миресаурцес. ja-JP. Resources для Японии (японский язык), Миресаурцес. de. Resources для немецкого языка, Миресаурцес. zh-CHS. Resources для китайского языка (упрощенное письмо) и MyResources.fr — это ресурсы для языка и региональных параметров "французский (Бельгия)". Файл ресурсов по умолчанию должен называться Миресаурцес. Resources. Файлы ресурсов, зависящие от языка и региональных параметров, обычно упаковываются во вспомогательные сборки для каждого языка и региональных параметров. Файл ресурсов по умолчанию должен быть внедрен в основную сборку приложения.  
  
 Обратите внимание, что [Компоновщик сборок](~/docs/framework/tools/al-exe-assembly-linker.md) позволяет пометить ресурсы как частные, но всегда следует помечать их как открытые, чтобы к ним можно было обращаться из других сборок. (Поскольку вспомогательная сборка не содержит кода, ресурсы, помеченные как частные, недоступны для вашего приложения с помощью любого механизма.)  
  
 Дополнительные сведения о создании, упаковке и развертывании ресурсов см. в статьях [Создание файлов ресурсов](~/docs/framework/resources/creating-resource-files-for-desktop-apps.md), [Создание вспомогательных сборок](~/docs/framework/resources/creating-satellite-assemblies-for-desktop-apps.md), [Упаковка и развертывание ресурсов](~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md).  
  
<a name="instantiating"></a>   
### <a name="instantiating-a-resourcemanager-object"></a>Создание экземпляра объекта ResourceManager  
 Вы создаете объект <xref:System.Resources.ResourceManager>, который извлекает ресурсы из внедренного Resources-файла путем вызова одной из перегрузок конструктора класса. Это тесно связывает объект <xref:System.Resources.ResourceManager> с конкретными Resources-файлом и со всеми связанными локализованными файлами Resources во вспомогательных сборках.  
  
 Ниже перечислены два наиболее часто встречающихся конструкторов.  
  
-   <xref:System.Resources.ResourceManager.%23ctor%28System.String%2CSystem.Reflection.Assembly%29> ищет ресурсы на основе двух предоставленных данных: базовое имя файла resides и сборку, в которой находится файл Default. resides. Базовое имя включает пространство имен и корневое имя файла Resources без его языка и региональных параметров или расширения. Обратите внимание, что Resources-файлы, компилируемые из командной строки, обычно не включают имя пространства имен, тогда как файлы Resources, созданные в среде Visual Studio, выполняют. Например, если файл ресурсов называется MyCompany. StringResources. Resources, а конструктор <xref:System.Resources.ResourceManager> вызывается из статического метода с именем `Example.Main`, следующий код создает объект <xref:System.Resources.ResourceManager>, который может извлекать ресурсы из Resources-файла:  
  
     [!code-csharp[Conceptual.Resources.Retrieving#1](~/samples/snippets/csharp/VS_Snippets_CLR/conceptual.resources.retrieving/cs/ctor1.cs#1)]
     [!code-vb[Conceptual.Resources.Retrieving#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.resources.retrieving/vb/ctor1.vb#1)]  
  
-   <xref:System.Resources.ResourceManager.%23ctor%28System.Type%29> ищет ресурсы во вспомогательных сборках на основе информации из объекта типа. Полное имя типа соответствует базовому имени Resources, без расширения имени файла. В настольных приложениях, созданных с помощью конструктора ресурсов Visual Studio, Visual Studio создает класс-оболочку, полное имя которого совпадает с корневым именем Resources-файла. Например, если файл ресурсов называется MyCompany. StringResources. Resources, а существует класс-оболочка с именем `MyCompany.StringResources`, следующий код создает объект <xref:System.Resources.ResourceManager>, который может извлекать ресурсы из Resources-файла:  
  
     [!code-csharp[Conceptual.Resources.Retrieving#2](~/samples/snippets/csharp/VS_Snippets_CLR/conceptual.resources.retrieving/cs/ctor1.cs#2)]
     [!code-vb[Conceptual.Resources.Retrieving#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.resources.retrieving/vb/ctor1.vb#2)]  
  
 Если не удается найти соответствующие ресурсы, вызов конструктора создает допустимый объект <xref:System.Resources.ResourceManager>. Однако попытка получить ресурс вызывает исключение <xref:System.Resources.MissingManifestResourceException>. Сведения о работе с исключением см. в разделе [обработка исключений MissingManifestResourceException и миссингсателлитеассембли](#exception) далее в этой статье.  
  
 В следующем примере показано, как создать экземпляр объекта <xref:System.Resources.ResourceManager>. Он содержит исходный код для исполняемого файла с именем ShowTime. exe. Он также включает следующий текстовый файл с именем Strings. txt, содержащий один строковый ресурс `TimeHeader`:  
  
```  
TimeHeader=The current time is  
```  
  
 Для создания файла ресурсов и его внедрения в исполняемый файл можно использовать пакетный файл. Ниже приведен пакетный файл для создания исполняемого файла с помощью C# компилятора.  
  
```  
  
resgen strings.txt  
csc ShowTime.cs /resource:strings.resources  
  
```  
  
 Для компилятора Visual Basic можно использовать следующий пакетный файл:  
  
```  
  
resgen strings.txt  
vbc ShowTime.vb /resource:strings.resources  
  
```  
  
 [!code-csharp[System.Resources.ResourceManager.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcemanager.class/cs/showtime.cs#1)]
 [!code-vb[System.Resources.ResourceManager.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcemanager.class/vb/showtime.vb#1)]  
  
<a name="CultureSpecific"></a>   
### <a name="resourcemanager-and-culture-specific-resources"></a>Ресурсы ResourceManager и языка и региональных параметров  
 Локализованное приложение требует развертывания ресурсов, как описано в статье [Упаковка и развертывание ресурсов](~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md). Если сборки настроены должным образом, диспетчер ресурсов определяет, какие ресурсы следует извлечь на основе свойства <xref:System.Threading.Thread.CurrentUICulture%2A?displayProperty=nameWithType> текущего потока. (Это свойство также Возвращает язык и региональные параметры пользовательского интерфейса текущего потока.) Например, если приложение компилируется с ресурсами по умолчанию на английском языке в основной сборке, а также с помощью ресурсов на французском и русском языке в двух вспомогательных сборках, а свойство <xref:System.Threading.Thread.CurrentUICulture%2A?displayProperty=nameWithType> имеет значение fr-FR, диспетчер ресурсов извлекает ресурсы для французского языка.  
  
 Свойство <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> можно задать явным или неявным образом. Он определяет, каким образом объект <xref:System.Resources.ResourceManager> извлекает ресурсы на основе языка и региональных параметров:  
  
-   Если явно задано свойство <xref:System.Threading.Thread.CurrentUICulture%2A?displayProperty=nameWithType> для определенного языка и региональных параметров, диспетчер ресурсов всегда извлекает ресурсы для этого языка и региональных параметров независимо от языка браузера или операционной системы пользователя. Рассмотрим приложение, которое компилируется с ресурсами по умолчанию на английском языке и тремя вспомогательными сборками, содержащими ресурсы для английского языка (США), французского языка (Франция) и русского (Россия). Если для свойства <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> задано значение fr-FR, объект <xref:System.Resources.ResourceManager> всегда получает французский (Франция) ресурсы, даже если язык операционной системы пользователя не является французским. Прежде чем явно задать свойство, убедитесь, что это требуемое поведение.  
  
     В приложениях ASP.NET необходимо явно задать свойство <xref:System.Threading.Thread.CurrentUICulture%2A?displayProperty=nameWithType>, так как маловероятно, что параметр на сервере будет соответствовать входящим клиентским запросам. Приложение ASP.NET может явно задать для свойства <xref:System.Threading.Thread.CurrentUICulture%2A?displayProperty=nameWithType> значение принятого пользователем браузера.  
  
     Явное задание свойства <xref:System.Threading.Thread.CurrentUICulture%2A?displayProperty=nameWithType> определяет текущий язык и региональные параметры пользовательского интерфейса для этого потока. Он не влияет на текущий язык и региональные параметры пользовательского интерфейса других потоков в приложении.  
  
-   Можно задать язык и региональные параметры пользовательского интерфейса для всех потоков в домене приложения, назначив объект <xref:System.Globalization.CultureInfo>, представляющий этот язык и региональные параметры, для статического свойства <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A?displayProperty=nameWithType>.  
  
-   Если вы не задали явно текущий язык и региональные параметры по умолчанию для текущего домена приложения, свойство <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> задается неявно функцией Windows `GetUserDefaultUILanguage`. Эта функция предоставляется многоязыковым интерфейсом пользователя (MUI), который позволяет пользователю задать язык по умолчанию. Если язык пользовательского интерфейса не задан пользователем, по умолчанию используется язык, установленный системой, который является языком ресурсов операционной системы.  
  
 Следующий простой пример "Hello World" задает явный языковой стандарт пользовательского интерфейса. Он содержит ресурсы для трех языков и региональных параметров: Английский (США) или EN-US, французский (Франция), fr-FR и русский (Россия) или ru-RU. Ресурсы en-US содержатся в текстовом файле с именем поздравления. txt:  
  
```  
HelloString=Hello world!  
```  
  
 Ресурсы fr-FR содержатся в текстовом файле с именем Greetings.fr-FR. txt:  
  
```  
HelloString=Salut tout le monde!  
```  
  
 Ресурсы ru-RU содержатся в текстовом файле с именем Greetings.ru-RU. txt:  
  
```  
HelloString=Всем привет!  
```  
  
 Ниже приведен исходный код для примера (например, VB для Visual Basic версии или Example.cs для C# версии):  
  
 [!code-csharp[Conceptual.Resources.CurrentCulture#1](~/samples/snippets/csharp/VS_Snippets_CLR/conceptual.resources.currentculture/cs/example.cs#1)]
 [!code-vb[Conceptual.Resources.CurrentCulture#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.resources.currentculture/vb/example.vb#1)]  
  
 Чтобы скомпилировать этот пример, создайте файл пакета (bat), содержащий следующие команды, и запустите его из командной строки. Если вы используете C#, укажите `csc` вместо `vbc` и `Example.cs` вместо `Example.vb`.  
  
```  
resgen Greetings.txt   
vbc Example.vb /resource:Greetings.resources  
  
resgen Greetings.fr-FR.txt  
Md fr-FR  
al /embed:Greetings.fr-FR.resources /culture:fr-FR /out:fr-FR\Example.resources.dll  
  
resgen Greetings.ru-RU.txt  
Md ru-RU  
al /embed:Greetings.ru-RU.resources /culture:ru-RU /out:ru-RU\Example.resources.dll  
```  
  
<a name="retrieving"></a>   
### <a name="retrieving-resources"></a>Извлечение ресурсов  
 Для доступа к определенному ресурсу вызываются методы <xref:System.Resources.ResourceManager.GetObject%28System.String%29> и <xref:System.Resources.ResourceManager.GetString%28System.String%29>. Можно также вызвать метод <xref:System.Resources.ResourceManager.GetStream%28System.String%29> для получения нестроковых ресурсов в виде массива байтов. По умолчанию в приложении с локализованными ресурсами эти методы возвращают ресурс для языка и региональных параметров, определяемых текущим языком и региональными параметрами пользовательского интерфейса потока, который сделал вызов. Дополнительные сведения о том, как определяется текущий язык и региональные параметры пользовательского интерфейса для [потока, см](#CultureSpecific). в предыдущем разделе. Если диспетчеру ресурсов не удается найти ресурс для языка пользовательского интерфейса текущего потока, он использует резервный процесс для получения указанного ресурса. Если диспетчер ресурсов не может найти локализованные ресурсы, он использует ресурсы языка и региональных параметров по умолчанию. Дополнительные сведения о правилах резервирования ресурсов см. в разделе "процесс резервирования ресурсов" статьи [Упаковка и развертывание ресурсов](~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md).  
  
> [!NOTE]
>  Если не удается найти RESOURCES-файл, указанный в конструкторе класса <xref:System.Resources.ResourceManager>, попытка получить ресурс вызывает исключение <xref:System.Resources.MissingManifestResourceException> или <xref:System.Resources.MissingSatelliteAssemblyException>. Дополнительные сведения о работе с исключением см. в подразделе [обработка исключений MissingManifestResourceException и миссингсателлитеассемблексцептион](#exception) далее в этом разделе.  
  
 В следующем примере используется метод <xref:System.Resources.ResourceManager.GetString%2A> для получения ресурсов, зависящих от языка и региональных параметров. Он состоит из ресурсов, скомпилированных из TXT-файлов для английского языка (EN), французского языка (Франция) (fr-FR) и русского (Россия) (ru-RU). В примере текущий язык и региональные параметры, а также текущий язык и региональные параметры пользовательского интерфейса изменяются на английский (США), французский (Франция), Русский (Россия) и шведский (Швеция). Затем он вызывает метод <xref:System.Resources.ResourceManager.GetString%2A> для получения локализованной строки, которая отображается вместе с текущим днем и месяцм. Обратите внимание, что в выходных данных отображается соответствующая локализованная строка, кроме случаев, когда текущий язык и региональные параметры пользовательского интерфейса — шведский (Швеция). Поскольку языковые ресурсы для шведского языка недоступны, приложение использует ресурсы языка и региональных параметров по умолчанию, которые являются английским языком.  
  
 Для этого примера требуются текстовые файлы ресурсов, перечисленные в следующей таблице. Каждый из них имеет один строковый ресурс с именем `DateStart`.  
  
|culture|Имя файла|Имя ресурса|Значение ресурса|  
|-------------|---------------|-------------------|--------------------|  
|en-US|Датестрингс. txt|`DateStart`|Сегодня|  
|fr-FR|DateStrings.fr-FR. txt|`DateStart`|Аужаурд'хуи, к'ест Le|  
|ru-RU|DateStrings.ru-RU. txt|`DateStart`|Сегодня|  
  
 Ниже приведен исходный код для примера (Шовдате. vb для Visual Basic версии или ShowDate.cs для C# версии кода).  
  
 [!code-csharp[System.Resources.ResourceManager.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcemanager.class/cs/showdate.cs#2)]
 [!code-vb[System.Resources.ResourceManager.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcemanager.class/vb/showdate.vb#2)]  
  
 Чтобы скомпилировать этот пример, создайте пакетный файл, содержащий следующие команды, и запустите его из командной строки. Если вы используете C#, укажите `csc` вместо `vbc` и `showdate.cs` вместо `showdate.vb`.  
  
```  
  
resgen DateStrings.txt  
vbc showdate.vb /resource:DateStrings.resources  
  
md fr-FR  
resgen DateStrings.fr-FR.txt  
al /out:fr-FR\Showdate.resources.dll /culture:fr-FR /embed:DateStrings.fr-FR.resources   
  
md ru-RU  
resgen DateStrings.ru-RU.txt  
al /out:ru-RU\Showdate.resources.dll /culture:ru-RU /embed:DateStrings.ru-RU.resources  
  
```  
  
 Существует два способа извлечения ресурсов для определенного языка и региональных параметров, отличных от текущего языка и региональных параметров пользовательского интерфейса:  
  
-   Чтобы получить ресурс для определенного языка и региональных параметров, можно вызвать метод <xref:System.Resources.ResourceManager.GetString%28System.String%2CSystem.Globalization.CultureInfo%29>, <xref:System.Resources.ResourceManager.GetObject%28System.String%2CSystem.Globalization.CultureInfo%29>или <xref:System.Resources.ResourceManager.GetStream%28System.String%2CSystem.Globalization.CultureInfo%29>. Если не удается найти локализованный ресурс, диспетчер ресурсов использует процесс резервного использования ресурсов для поиска соответствующего ресурса.  
  
-   Можно вызвать метод <xref:System.Resources.ResourceManager.GetResourceSet%2A>, чтобы получить объект <xref:System.Resources.ResourceSet>, представляющий ресурсы для определенного языка и региональных параметров. В вызове метода можно определить, проверяет ли диспетчер ресурсов наличие родительских языков и региональных параметров, если не удается найти локализованные ресурсы или же он просто возвращается к ресурсам языка и региональных параметров по умолчанию. Затем можно использовать <xref:System.Resources.ResourceSet> методы для доступа к ресурсам (локализованные для этого языка и региональных параметров) по имени или перечислить ресурсы в наборе.  
  
<a name="exception"></a>   
### <a name="handling-missingmanifestresourceexception-and-missingsatelliteassemblyexception-exceptions"></a>Обработка исключений MissingManifestResourceException и Миссингсателлитеассемблексцептион  
 Если вы попытаетесь получить определенный ресурс, но диспетчеру ресурсов не удалось найти этот ресурс, а также не был определен язык и региональные параметры по умолчанию или не удается найти ресурсы языка и региональных параметров, которые не удается найти, диспетчер ресурсов создает исключение <xref:System.Resources.MissingManifestResourceException>, если оно предполагает поиск ресурсов в основной сборке, или <xref:System.Resources.MissingSatelliteAssemblyException>, если предполагается найти ресурсы во вспомогательной сборке. Обратите внимание, что исключение возникает при вызове метода извлечения ресурса, например <xref:System.Resources.ResourceManager.GetString%2A> или <xref:System.Resources.ResourceManager.GetObject%2A>, а не при создании экземпляра объекта <xref:System.Resources.ResourceManager>.  
  
 Исключение обычно возникает при следующих условиях.  
  
-   Соответствующий файл ресурсов или вспомогательная сборка не существует. Если диспетчер ресурсов ждет, что ресурсы приложения по умолчанию будут внедрены в основную сборку приложения, они отсутствуют. Если атрибут <xref:System.Resources.NeutralResourcesLanguageAttribute> указывает, что ресурсы приложения по умолчанию находятся во вспомогательной сборке, эта сборка не может быть найдена. При компиляции приложения убедитесь, что ресурсы внедрены в основную сборку или что необходимая вспомогательная сборка создана и имеет соответствующее имя. Его имя должно иметь форму *AppName*. Resources. dll, и она должна находиться в каталоге после языка и региональных параметров, содержащихся в нем ресурсах.  
  
-   Для приложения не определена культура по умолчанию или нейтральный язык и региональные параметры. Добавьте атрибут <xref:System.Resources.NeutralResourcesLanguageAttribute> в файл исходного кода или в файл сведений о проекте (AssemblyInfo. vb для приложения Visual Basic или AssemblyInfo.cs для C# приложения).  
  
-   Параметр `baseName` в конструкторе <xref:System.Resources.ResourceManager.%23ctor%28System.String%2CSystem.Reflection.Assembly%29> не указывает имя Resources-файла. Имя должно включать полное пространство имен файла ресурсов, но не расширение имени файла. Как правило, файлы ресурсов, создаваемые в Visual Studio, включают имена пространств имен, но файлы ресурсов, создаваемые и скомпилированные в командной строке, не имеют. Имена внедренных Resources файлов можно определить, выполнив компиляцию и запуск следующей служебной программы. Это консольное приложение, принимающее имя основной или вспомогательной сборки в качестве параметра командной строки. В нем отображаются строки, которые должны быть предоставлены в качестве параметра `baseName`, чтобы диспетчер ресурсов мог правильно опознать ресурс.  
  
     [!code-csharp[System.Resources.ResourceManager.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcemanager.class/cs/resourcenames.cs#4)]
     [!code-vb[System.Resources.ResourceManager.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcemanager.class/vb/resourcenames.vb#4)]  
  
 При изменении текущего языка и региональных параметров приложения явным образом следует помнить, что диспетчер ресурсов извлекает набор ресурсов на основе значения свойства <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType>, а не свойства <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>. Как правило, при изменении одного значения необходимо также изменить другой.  
  
<a name="versioning"></a>   
### <a name="resource-versioning"></a>Управление версиями ресурсов  
 Так как Главная сборка, содержащая ресурсы приложения по умолчанию, отличается от вспомогательных сборок приложения, можно освободить новую версию основной сборки без повторного развертывания вспомогательных сборок. Используйте атрибут <xref:System.Resources.SatelliteContractVersionAttribute>, чтобы использовать существующие вспомогательные сборки и дать указание диспетчеру ресурсов не развертывать их заново с новой версией основной сборки,  
  
 Дополнительные сведения о поддержке версий вспомогательных сборок см. в статье [получение ресурсов](~/docs/framework/resources/retrieving-resources-in-desktop-apps.md).  
  
<a name="config"></a>   
### <a name="satelliteassemblies-configuration-file-node"></a>Узел файла конфигурации \<сателлитеассемблиес >  
 Для исполняемых файлов, развернутых и запускаемых из веб-сайта (файлы HREF. exe), объект <xref:System.Resources.ResourceManager> может выполнять поиск вспомогательных сборок через Интернет, что может повредить производительность приложения. Чтобы устранить проблему с производительностью, можно ограничить эту проверку вспомогательными сборками, развернутыми вместе с приложением. Чтобы сделать это, создайте узел `<satelliteassemblies>` в файле конфигурации приложения, чтобы указать, что вы развернули конкретный набор культур для приложения, и что объект <xref:System.Resources.ResourceManager> не должен пытаться проверить наличие языка и региональных параметров, не перечисленных в этом узле.  
  
> [!NOTE]
>  Предпочтительным вариантом создания `<satelliteassemblies>` узла является использование функции [манифеста развертывания ClickOnce](https://msdn.microsoft.com/library/8457e615-e3b6-4990-8dcf-11bc590e4e9b) .  
  
 В файле конфигурации приложения создайте раздел следующего вида:  
  
```  
<?xml version ="1.0"?>  
<configuration>  
    <satelliteassemblies>  
        <assembly name="MainAssemblyName, Version=versionNumber, Culture=neutral, PublicKeyToken=null|yourPublicKeyToken">  
            <culture>cultureName1</culture>  
            <culture>cultureName2</culture>  
            <culture>cultureName3</culture>  
        </assembly>  
    </satelliteassemblies>  
</configuration>  
```  
  
 Измените сведения о конфигурации следующим образом:  
  
-   Укажите один или несколько узлов `<assembly>` для каждой развертываемой главной сборки, где каждый узел указывает полное имя сборки. Укажите имя основной сборки вместо *маинассемблинаме*и укажите значения атрибутов `Version`, `PublicKeyToken`и `Culture`, соответствующие вашей основной сборке.  
  
     Для атрибута `Version` укажите номер версии сборки. Например, первым выпуском сборки может быть номер версии 1.0.0.0.  
  
     Для атрибута `PublicKeyToken` укажите ключевое слово `null`, если сборка не подписана строгим именем, или если сборка подписана с помощью маркера открытого ключа.  
  
     Для атрибута `Culture` укажите ключевое слово `neutral`, чтобы обозначить основную сборку и вызвать проверку класса <xref:System.Resources.ResourceManager> только для языков и региональных параметров, перечисленных в узлах `<culture>`.  
  
     Дополнительные сведения о полных именах сборок см. в статье [имена сборок](~/docs/standard/assembly/names.md). Дополнительные сведения о сборках со строгими именами см. в статье [Создание и использование сборок со строгими именами](~/docs/standard/assembly/create-use-strong-named.md).  
  
-   Укажите один или несколько `<culture>` узлов с конкретным именем языка и региональных параметров, например "fr-FR", или нейтральным именем языка и региональных параметров, например "fr".  
  
 Если ресурсы необходимы для любой сборки, не указанной в узле `<satelliteassemblies>`, класс <xref:System.Resources.ResourceManager> проверяет язык и региональные параметры, используя стандартные правила проверки.  
  
<a name="ws"></a>   
## <a name="includewin8_appname_longincludeswin8-appname-long-mdmd-apps"></a>Приложения [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]  
  
> [!IMPORTANT]
>  Несмотря на то, что класс <xref:System.Resources.ResourceManager> поддерживается в приложениях [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)], использовать его не рекомендуется. Используйте этот класс только при разработке [!INCLUDE[net_portable](~/includes/net-portable-md.md)] проектов, которые можно использовать с приложениями [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]. Чтобы извлечь ресурсы из [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] приложений, используйте вместо этого класс [Windows. ApplicationModel. Resources. ResourceLoader](https://go.microsoft.com/fwlink/p/?LinkId=238182) .  
  
 Для [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] приложений класс <xref:System.Resources.ResourceManager> извлекает ресурсы из файлов индекса ресурсов пакета (PRI). Один PRI-файл (файл пакета приложения PRI) содержит ресурсы для языка и региональных параметров по умолчанию, а также любых локализованных языков и региональных параметров. Используйте служебную программу передаваемые программе MakePRI для создания PRI-файла из одного или нескольких файлов ресурсов в формате XML-ресурсов (. resw). Для ресурсов, которые включены в проект Visual Studio, Visual Studio обрабатывает процесс создания и упаковки PRI-файла автоматически. Затем можно использовать класс .NET Framework <xref:System.Resources.ResourceManager> для доступа к ресурсам приложения или библиотеки.  
  
 Вы можете создать экземпляр объекта <xref:System.Resources.ResourceManager> для [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] приложения так же, как и для классического приложения.  
  
 Затем можно получить доступ к ресурсам для определенного языка и региональных параметров, передав имя ресурса для извлечения в метод <xref:System.Resources.ResourceManager.GetString%28System.String%29>. По умолчанию этот метод возвращает ресурс для языка и региональных параметров, определяемых текущим языком и региональными параметрами пользовательского интерфейса потока, который выполнил вызов. Можно также получить ресурсы для определенного языка и региональных параметров, передав имя ресурса и объект <xref:System.Globalization.CultureInfo>, представляющий язык и региональные параметры, ресурсы которых необходимо извлечь в метод <xref:System.Resources.ResourceManager.GetString%28System.String%2CSystem.Globalization.CultureInfo%29>. Если не удается найти ресурс для текущего языка и региональных параметров пользовательского интерфейса или указанный язык и региональные параметры, диспетчер ресурсов использует список резервных языков интерфейса пользователя для поиска подходящего ресурса.  
  
   
  
## Examples  
 В следующем примере показано, как использовать явный язык и региональные параметры, а также неявную текущую культуру пользовательского интерфейса для получения строковых ресурсов из основной сборки и вспомогательной сборки. Дополнительные сведения см. в подразделе "расположение каталогов для вспомогательных сборок, не установленных в глобальном кэше сборок" раздела [Создание вспомогательных сборок](~/docs/framework/resources/creating-satellite-assemblies-for-desktop-apps.md) .  
  
 Чтобы выполнить этот пример, выполните следующие действия.  
  
1.  В каталоге приложения создайте файл с именем РМК. txt, содержащий следующие строки ресурсов:  
  
    ```  
  
    day=Friday  
    year=2006  
    holiday="Cinco de Mayo"  
  
    ```  
  
2.  Используйте [генератор файлов ресурсов](~/docs/framework/tools/resgen-exe-resource-file-generator.md) для создания файла ресурсов РМК. Resources из входного файла РМК. txt следующим образом:  
  
    ```  
    resgen rmc.txt  
    ```  
  
3.  Создайте подкаталог каталога приложения и назовите его "es-MX". Это имя языка и региональных параметров вспомогательной сборки, которая будет создана в следующих трех шагах.  
  
4.  Создайте файл с именем rmc.es-МКС. txt в каталоге es-MX, который содержит следующие строки ресурсов:  
  
    ```  
  
    day=Viernes  
    year=2006  
    holiday="Cinco de Mayo"  
  
    ```  
  
5.  Используйте [генератор файлов ресурсов](~/docs/framework/tools/resgen-exe-resource-file-generator.md) для создания файла ресурсов RMC.es-MX. Resources из входного файла RMC.ES-МКС. txt следующим образом:  
  
    ```  
    resgen rmc.es-MX.txt  
    ```  
  
6.  Предположим, что имя файла для этого примера — РМК. vb или rmc.cs. Скопируйте следующий исходный код в файл. Затем скомпилируйте его и внедрите основной файл ресурсов сборки РМК. Resources в исполняемую сборку. При использовании компилятора Visual Basic используется следующий синтаксис:  
  
    ```  
    vbc rmc.vb /resource:rmc.resources  
    ```  
  
     Соответствующий синтаксис для C# компилятора:  
  
    ```  
    csc /resource:rmc.resources rmc.cs  
    ```  
  
7.  Используйте [Компоновщик сборок](~/docs/framework/tools/al-exe-assembly-linker.md) для создания вспомогательной сборки. Если базовое имя приложения — РМК, имя вспомогательной сборки должно быть РМК. Resources. dll. Вспомогательная сборка должна быть создана в каталоге es-MX. Если es-MX является текущим каталогом, используйте следующую команду:  
  
    ```  
    al /embed:rmc.es-MX.resources /c:es-MX /out:rmc.resources.dll   
    ```  
  
8.  Запустите РМК. exe, чтобы получить и отобразить строки внедренных ресурсов.  
  
 [!code-csharp[ResourceManager_Class#1](~/samples/snippets/csharp/VS_Snippets_CLR/ResourceManager_Class/cs/rmc.cs#1)]
 [!code-vb[ResourceManager_Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ResourceManager_Class/vb/rmc.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>Данный тип потокобезопасен.</threadsafe>
    <altmember cref="T:System.Globalization.CultureInfo" />
    <altmember cref="P:System.Globalization.CultureInfo.CurrentUICulture" />
    <altmember cref="T:System.Resources.SatelliteContractVersionAttribute" />
    <related type="Article" href="https://msdn.microsoft.com/library/8ad495d4-2941-40cf-bf64-e82e85825890">Ресурсы в приложениях</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Resources.ResourceManager" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ResourceManager ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ResourceManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Resources.ResourceManager" /> со значениями по умолчанию.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот конструктор полезен только при написании собственного класса, производного от класса <xref:System.Resources.ResourceManager>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResourceManager (Type resourceSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type resourceSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceManager.#ctor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (resourceSource As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResourceManager(Type ^ resourceSource);" />
      <MemberSignature Language="F#" Value="new System.Resources.ResourceManager : Type -&gt; System.Resources.ResourceManager" Usage="new System.Resources.ResourceManager resourceSource" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="resourceSource" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="resourceSource">Тип, из которого диспетчер ресурсов получает все сведения, необходимые для поиска RESOURCES-файлов.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Resources.ResourceManager" />, который ищет ресурсы в сопутствующих сборках, используя сведения из указанного объекта типа.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="desktop-apps"></a>Классические приложения  
 В классических приложениях диспетчер ресурсов использует параметр `resourceSource` для загрузки определенного файла ресурсов следующим образом:  
  
-   Если атрибут <xref:System.Resources.NeutralResourcesLanguageAttribute> не используется для указания того, что ресурсы языка и региональных параметров по умолчанию находятся во вспомогательной сборке, диспетчер ресурсов предполагает, что файл ресурсов для языка и региональных параметров по умолчанию находится в той же сборке, что и тип, заданный параметром `resourceSource`.  
  
-   Диспетчер ресурсов предполагает, что файл ресурсов по умолчанию имеет то же базовое имя, что и тип, заданный параметром `resourceSource`.  
  
-   Диспетчер ресурсов использует класс <xref:System.Resources.ResourceSet> по умолчанию для управления файлом ресурсов.  
  
 Например, при наличии типа с именем MyCompany. Мипродукт. MyType диспетчер ресурсов ищет RESOURCES-файл с именем MyCompany. Мипродукт. MyType. Resources в сборке, определяющей MyType.  
  
 В Visual Studio конструктор ресурсов автоматически создает код, определяющий класс `internal` (в C#) или `Friend` (в Visual Basic), имя которого совпадает с базовым именем Resources-файла для языка и региональных параметров по умолчанию. Это позволяет создать экземпляр объекта <xref:System.Resources.ResourceManager> и объединить его с определенным набором ресурсов, получая объект типа, имя которого соответствует имени ресурса, так как при условии, что класс видим для компилятора, ресурсы также должны быть. Например, если RESOURCES-файл называется Resource1, следующая инструкция создает экземпляр объекта <xref:System.Resources.ResourceManager> для управления Resources-файлом с именем Resource1:  
  
 [!code-csharp[System.Resources.ResourceManager.ctor#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcemanager.ctor/cs/ctor1.cs#2)]  
  
 Если вы не используете Visual Studio, можно создать класс без членов, пространство имен и имя которого совпадают с именем файла Default. Resources. Иллюстрация приведена в примере.  
  
## <a name="includewin8_appname_longincludeswin8-appname-long-mdmd-apps"></a>Приложения [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]  
  
> [!IMPORTANT]
>  Несмотря на то, что класс <xref:System.Resources.ResourceManager> поддерживается в приложениях [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)], использовать его не рекомендуется. Используйте этот класс только при разработке [!INCLUDE[net_portable](~/includes/net-portable-md.md)] проектов, которые можно использовать с приложениями [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]. Чтобы извлечь ресурсы из [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] приложений, используйте вместо этого класс [Windows. ApplicationModel. Resources. ResourceLoader](https://go.microsoft.com/fwlink/p/?LinkId=238182) .  
  
 В [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] приложениях <xref:System.Resources.ResourceManager> использует параметр `resourceSource` для определения сборки, базового имени и пространства имен, в котором элементы ресурсов могут располагаться в файле индекса ресурсов пакета приложения (PRI). Например, при наличии типа с именем MyCompany. Мипродукт. MyType, который определен в `MyAssembly`, диспетчер ресурсов выполняет поиск идентификатора набора ресурсов с именем MyAssembly и ищет в этом наборе ресурсов область MyCompany. Мипродукт. MyType. Диспетчер ресурсов выполняет поиск элементов ресурсов в контексте по умолчанию (текущий язык и региональные параметры, текущие параметры высокой контрастности и т. д.) в этой области.  
  
   
  
## Examples  
 В следующем примере конструктор <xref:System.Resources.ResourceManager.%23ctor%28System.Type%29> используется для создания экземпляра объекта <xref:System.Resources.ResourceManager>. Он состоит из ресурсов, скомпилированных из TXT-файлов для английского языка (EN), французского языка (Франция) (fr-FR) и русского (Россия) (ru-RU). В примере текущий язык и региональные параметры, а также текущий язык и региональные параметры пользовательского интерфейса изменяются на английский (США), французский (Франция), Русский (Россия) и шведский (Швеция). Затем он вызывает метод <xref:System.Resources.ResourceManager.GetString%28System.String%29> для получения локализованной строки, в которой отображается приветствие, зависящее от времени суток.  
  
 В примере требуется три текстовых файла ресурсов, как показано в следующей таблице. Каждый файл содержит строковые ресурсы с именами `Morning`, `Afternoon`и `Evening`.  
  
|culture|Имя файла|Имя ресурса|Значение ресурса|  
|-------------|---------------|-------------------|--------------------|  
|en-US|Гритингресаурцес. txt|`Morning`|Доброе утро|  
|en-US|Гритингресаурцес. txt|`Afternoon`|Добрый день|  
|en-US|Гритингресаурцес. txt|`Evening`|Добрый вечер|  
|fr-FR|GreetingResources.fr-FR. txt|`Morning`|Bonjour|  
|fr-FR|GreetingResources.fr-FR. txt|`Afternoon`|Bonjour|  
|fr-FR|GreetingResources.fr-FR. txt|`Evening`|бонсоир|  
|ru-RU|GreetingResources.ru-RU. txt|`Morning`|Доброе утро|  
|ru-RU|GreetingResources.ru-RU. txt|`Afternoon`|Добрый день|  
|ru-RU|GreetingResources.ru-RU. txt|`Evening`|Добрый вечер|  
  
 Чтобы скомпилировать пример Visual Basic и создать исполняемый файл с именем greet. exe, можно использовать следующий пакетный файл. Чтобы выполнить компиляцию C#с, измените имя компилятора с `vbc` на `csc` и расширение файла с `.vb` на `.cs`.  
  
```  
  
resgen GreetingResources.txt  
vbc Greet.vb /resource: GreetingResources.resources  
  
md fr-FR  
resgen GreetingResources.fr-FR.txt  
al /out:fr-FR\Greet.resources.dll /culture:fr-FR /embed: GreetingResources.fr-FR.resources   
  
md ru-RU  
resgen GreetingResources.ru-RU.txt  
al /out:ru-RU\Greet.resources.dll /culture:ru-RU /embed: GreetingResources.ru-RU.resources  
  
```  
  
 Ниже приведен исходный код для примера (Шовдате. vb для Visual Basic версии или ShowDate.cs для C# версии кода).  
  
 [!code-csharp[System.Resources.ResourceManager.Ctor#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcemanager.ctor/cs/greet.cs#3)]
 [!code-vb[System.Resources.ResourceManager.Ctor#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcemanager.ctor/vb/greet.vb#3)]  
  
 Помимо определения класса приложения с именем `Example`, исходный код определяет внутренний класс, имя которого `GreetingResources`, совпадает с базовым именем файлов ресурсов. Это позволяет успешно создать экземпляр объекта <xref:System.Resources.ResourceManager>, вызвав конструктор <xref:System.Resources.ResourceManager.%23ctor%28System.Type%29>.  
  
 Обратите внимание, что в выходных данных отображается соответствующая локализованная строка, за исключением случаев, когда текущий язык и региональные параметры пользовательского интерфейса — шведский (Швеция). в этом случае используются английские языковые ресурсы. Поскольку языковые ресурсы для шведского языка недоступны, приложение использует ресурсы языка и региональных параметров по умолчанию, как определено атрибутом <xref:System.Resources.NeutralResourcesLanguageAttribute>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="resourceSource" /> имеет значение <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResourceManager (string baseName, System.Reflection.Assembly assembly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string baseName, class System.Reflection.Assembly assembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceManager.#ctor(System.String,System.Reflection.Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResourceManager(System::String ^ baseName, System::Reflection::Assembly ^ assembly);" />
      <MemberSignature Language="F#" Value="new System.Resources.ResourceManager : string * System.Reflection.Assembly -&gt; System.Resources.ResourceManager" Usage="new System.Resources.ResourceManager (baseName, assembly)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="baseName" Type="System.String" />
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="baseName">Корневое имя файла ресурсов без расширения, но включающее какое-либо полное имя пространства имен. Например, имя корневой папки для файла ресурсов MyApplication.MyResource.en-US.resources будет MyApplication.MyResource.</param>
        <param name="assembly">Главная сборка для ресурсов.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Resources.ResourceManager" />, который ищет ресурсы, содержащиеся в файлах с указанным корневым именем, в данной сборке.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="desktop-apps"></a>Классические приложения  
 В классических приложениях отдельные файлы ресурсов, зависящие от языка и региональных параметров, должны содержаться во вспомогательных сборках, а файл ресурсов языка и региональных параметров по умолчанию должен содержаться в основной сборке. Предполагается, что вспомогательная сборка содержит ресурсы для одного языка и региональных параметров, указанных в манифесте сборки, и при необходимости загружается.  
  
> [!NOTE]
>  Чтобы извлечь ресурсы из Resources-файлов напрямую вместо их извлечения из сборок, необходимо вызвать метод <xref:System.Resources.ResourceManager.CreateFileBasedResourceManager%2A> вместо того, чтобы создать экземпляр объекта <xref:System.Resources.ResourceManager>.  
  
 Если файл ресурсов, определенный `baseName`, не удается найти в `assembly`, метод создает экземпляр объекта <xref:System.Resources.ResourceManager>, но попытка получить определенный ресурс вызывает исключение, обычно <xref:System.Resources.MissingManifestResourceException>. Сведения об диагностике причины исключения см. в подразделе «обработка исключения MissingManifestResourceException» раздела <xref:System.Resources.ResourceManager> Class.  
  
## <a name="includewin8_appname_longincludeswin8-appname-long-mdmd-apps"></a>Приложения [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]  
  
> [!IMPORTANT]
>  Несмотря на то, что класс <xref:System.Resources.ResourceManager> поддерживается в приложениях [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)], использовать его не рекомендуется. Используйте этот класс только при разработке [!INCLUDE[net_portable](~/includes/net-portable-md.md)] проектов, которые можно использовать с приложениями [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]. Чтобы извлечь ресурсы из [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] приложений, используйте вместо этого класс [Windows. ApplicationModel. Resources. ResourceLoader](https://go.microsoft.com/fwlink/p/?LinkId=238182) .  
  
 В [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]ных приложениях диспетчер ресурсов использует простое имя параметра `assembly` для поиска соответствующего набора ресурсов в файле индекса ресурсов пакета приложения (PRI). Параметр `baseName` используется для поиска элемента ресурса в наборе ресурсов. Например, корневое имя для PortableLibrary1.Resource1.de-DE. Resources — PortableLibrary1. Resource1.  
  
   
  
## Examples  
 В следующем примере используется простое нелокализованное приложение "Hello World" для демонстрации конструктора <xref:System.Resources.ResourceManager.%23ctor%28System.String%2CSystem.Reflection.Assembly%29>. Ниже показано содержимое текстового файла с именем Ексамплересаурцес. txt. При компиляции приложения ресурс внедряется в основную сборку приложения.  
  
```  
Greeting=Hello  
```  
  
 Текстовый файл можно преобразовать в двоичный файл ресурсов с помощью [генератора файлов ресурсов (Resgen. exe)](~/docs/framework/tools/resgen-exe-resource-file-generator.md) в командной строке следующим образом:  
  
```  
resgen ExampleResources.txt  
```  
  
 В следующем примере показан исполняемый код, создающий объект <xref:System.Resources.ResourceManager>, предлагающий пользователю ввести имя и выведет приветствие.  
  
 [!code-csharp[System.Resources.ResourceManager.ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcemanager.ctor/cs/example.cs#1)]
 [!code-vb[System.Resources.ResourceManager.ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcemanager.ctor/vb/example.vb#1)]  
  
 Его можно скомпилировать с помощью следующей команды в Visual Basic:  
  
```  
vbc Example.vb /resource:ExampleResources.resources  
```  
  
 или с помощью следующей команды в C#:  
  
```  
csc Example.cs /resource:ExampleResources.resources  
```  
  
 Обратите внимание, что в примере извлекается ссылка на сборку, содержащую файл ресурсов, путем передачи типа, определенного в этой сборке, в функцию `typeof` C#(в) или функции `GetType` (в Visual Basic) и получения значения его свойства <xref:System.Type.Assembly%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="baseName" /> или параметра <paramref name="assembly" /> — <see langword="null" />.</exception>
        <block subset="none" type="overrides"><para>Этот конструктор использует предоставляемую системой <see cref="T:System.Resources.ResourceSet" /> реализацию. Чтобы использовать формат файла пользовательского ресурса, необходимо создать производный от класса <see cref="T:System.Resources.ResourceSet" />, переопределить методы <see cref="M:System.Resources.ResourceSet.GetDefaultReader" /> и <see cref="M:System.Resources.ResourceSet.GetDefaultWriter" /> и передать этот тип в конструктор <see cref="M:System.Resources.ResourceManager.#ctor(System.String,System.Reflection.Assembly,System.Type)" />. Использование настраиваемых <see cref="T:System.Resources.ResourceSet" /> может оказаться полезным для управления политикой кэширования ресурсов или поддержки собственного формата файлов ресурсов, но обычно это необязательно.</para></block>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResourceManager (string baseName, System.Reflection.Assembly assembly, Type usingResourceSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string baseName, class System.Reflection.Assembly assembly, class System.Type usingResourceSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceManager.#ctor(System.String,System.Reflection.Assembly,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResourceManager(System::String ^ baseName, System::Reflection::Assembly ^ assembly, Type ^ usingResourceSet);" />
      <MemberSignature Language="F#" Value="new System.Resources.ResourceManager : string * System.Reflection.Assembly * Type -&gt; System.Resources.ResourceManager" Usage="new System.Resources.ResourceManager (baseName, assembly, usingResourceSet)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="baseName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="assembly" Type="System.Reflection.Assembly" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="usingResourceSet" Type="System.Type" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="baseName">Корневое имя файла ресурсов без расширения, но включающее какое-либо полное имя пространства имен. Например, имя корневой папки для файла ресурсов MyApplication.MyResource.en-US.resources будет MyApplication.MyResource.</param>
        <param name="assembly">Главная сборка для ресурсов.</param>
        <param name="usingResourceSet">Тип пользовательского объекта <see cref="T:System.Resources.ResourceSet" /> для использования. При значении <see langword="null" /> используется объект времени выполнения по умолчанию <see cref="T:System.Resources.ResourceSet" />.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Resources.ResourceManager" />, который использует указанный класс <see cref="T:System.Resources.ResourceSet" /> для поиска ресурсов, содержащихся в файлах с указанным корневым именем, в данной сборке.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Отдельные файлы ресурсов, зависящие от языка и региональных параметров, должны содержаться во вспомогательных сборках, а файл ресурсов языка и региональных параметров по умолчанию должен содержаться в основной сборке. Предполагается, что вспомогательная сборка содержит ресурсы для одного языка и региональных параметров, указанных в манифесте сборки, и при необходимости загружается.  
  
> [!NOTE]
>  Чтобы извлечь ресурсы из Resources-файлов напрямую вместо их извлечения из сборок, необходимо вызвать метод <xref:System.Resources.ResourceManager.CreateFileBasedResourceManager%2A> вместо того, чтобы создать экземпляр объекта <xref:System.Resources.ResourceManager>.  
  
 Если файл ресурсов, определенный `baseName`, не удается найти в `assembly`, метод создает экземпляр объекта <xref:System.Resources.ResourceManager>, но попытка получить определенный ресурс вызывает исключение, обычно <xref:System.Resources.MissingManifestResourceException>. Сведения об диагностике причины исключения см. в подразделе «обработка исключения MissingManifestResourceException» раздела <xref:System.Resources.ResourceManager> Class.  
  
> [!NOTE]
>  Параметр `usingResourceSet` используется для поддержки собственного формата ресурсов и обычно будет `null`. Это отличается от конструктора, который принимает только <xref:System.Type>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Объект <paramref name="usingResourceset" /> не является производным от класса <see cref="T:System.Resources.ResourceSet" />.</exception>
        <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="baseName" /> или параметра <paramref name="assembly" /> — <see langword="null" />.</exception>
        <block subset="none" type="usage"><para>Этот конструктор позволяет указать <see cref="T:System.Resources.ResourceSet" /> реализацию. Если вы не хотите, чтобы конкретная реализация <see cref="T:System.Resources.ResourceSet" />, но использовала пользовательский формат файла ресурсов, следует наследовать от класса <see cref="T:System.Resources.ResourceSet" />, переопределить методы <see cref="M:System.Resources.ResourceSet.GetDefaultReader" /> и <see cref="M:System.Resources.ResourceSet.GetDefaultWriter" /> и передать этот тип в этот конструктор.</para></block>
      </Docs>
    </Member>
    <Member MemberName="BaseName">
      <MemberSignature Language="C#" Value="public virtual string BaseName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BaseName" />
      <MemberSignature Language="DocId" Value="P:System.Resources.ResourceManager.BaseName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property BaseName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ BaseName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseName : string" Usage="System.Resources.ResourceManager.BaseName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает имя корневой папки файлов ресурсов, в которой класс <see cref="T:System.Resources.ResourceManager" /> ищет ресурсы.</summary>
        <value>Имя корневой папки файлов ресурсов, в которой класс <see cref="T:System.Resources.ResourceManager" /> ищет ресурсы.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойство <xref:System.Resources.ResourceManager.BaseName%2A> отражает полное имя пространства имен и имя корневого ресурса для файла ресурсов без его языка и региональных параметров или расширения имени файла. Например, если файл ресурсов по умолчанию приложения имеет имя `SampleApps.StringResources.resources`, значением свойства <xref:System.Resources.ResourceManager.BaseName%2A> будет "Самплеаппс. StringResources". Если файл ресурсов по умолчанию приложения имеет имя `SampleApps.StringResources.en-US.resources` и внедрен во вспомогательную сборку, значение свойства <xref:System.Resources.ResourceManager.BaseName%2A> по-прежнему равно "Самплеаппс. StringResources".  
  
> [!IMPORTANT]
>  Значение свойства <xref:System.Resources.ResourceManager.BaseName%2A> файла ресурсов, который компилируется и внедряется из командной строки, не включает имя пространства имен, если только вы явно не включили его при компиляции файла. С другой стороны, значение свойства <xref:System.Resources.ResourceManager.BaseName%2A> файла ресурсов, которое компилируется и внедряется в среду Visual Studio, обычно включает имя пространства имен по умолчанию.  
  
 Значение свойства <xref:System.Resources.ResourceManager.BaseName%2A> совпадает со строкой, передаваемой в конструктор <xref:System.Resources.ResourceManager.%23ctor%28System.String%2CSystem.Reflection.Assembly%29> или <xref:System.Resources.ResourceManager.%23ctor%28System.String%2CSystem.Reflection.Assembly%2CSystem.Type%29> при создании экземпляра <xref:System.Resources.ResourceManager>.  
  
   
  
## Examples  
 Имена внедренных Resources файлов можно определить, выполнив компиляцию и запуск следующей служебной программы. Это консольное приложение, принимающее имя основной или вспомогательной сборки в качестве параметра командной строки. В нем отображаются строки, которые должны быть предоставлены в качестве параметра `baseName` конструктора <xref:System.Resources.ResourceManager.%23ctor%28System.String%2CSystem.Reflection.Assembly%29> или <xref:System.Resources.ResourceManager.%23ctor%28System.String%2CSystem.Reflection.Assembly%2CSystem.Type%29>, чтобы диспетчер ресурсов мог правильно опознать ресурс.  
  
 [!code-csharp[System.Resources.ResourceManager.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcemanager.class/cs/resourcenames.cs#4)]
 [!code-vb[System.Resources.ResourceManager.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcemanager.class/vb/resourcenames.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseNameField">
      <MemberSignature Language="C#" Value="protected string BaseNameField;" />
      <MemberSignature Language="ILAsm" Value=".field family string BaseNameField" />
      <MemberSignature Language="DocId" Value="F:System.Resources.ResourceManager.BaseNameField" />
      <MemberSignature Language="VB.NET" Value="Protected BaseNameField As String " />
      <MemberSignature Language="C++ CLI" Value="protected: System::String ^ BaseNameField;" />
      <MemberSignature Language="F#" Value="val mutable BaseNameField : string" Usage="System.Resources.ResourceManager.BaseNameField" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Указывает имя корневой папки файлов ресурсов, в которой класс <see cref="T:System.Resources.ResourceManager" /> ищет ресурсы.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Поле <xref:System.Resources.ResourceManager.BaseNameField> полезно только при написании собственного класса, производного от класса <xref:System.Resources.ResourceManager>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFileBasedResourceManager">
      <MemberSignature Language="C#" Value="public static System.Resources.ResourceManager CreateFileBasedResourceManager (string baseName, string resourceDir, Type usingResourceSet);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Resources.ResourceManager CreateFileBasedResourceManager(string baseName, string resourceDir, class System.Type usingResourceSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceManager.CreateFileBasedResourceManager(System.String,System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFileBasedResourceManager (baseName As String, resourceDir As String, usingResourceSet As Type) As ResourceManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Resources::ResourceManager ^ CreateFileBasedResourceManager(System::String ^ baseName, System::String ^ resourceDir, Type ^ usingResourceSet);" />
      <MemberSignature Language="F#" Value="static member CreateFileBasedResourceManager : string * string * Type -&gt; System.Resources.ResourceManager" Usage="System.Resources.ResourceManager.CreateFileBasedResourceManager (baseName, resourceDir, usingResourceSet)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Resources.ResourceManager</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="resourceDir" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="usingResourceSet" Type="System.Type" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="baseName">Имя корневой папки ресурсов. Например, имя корневой папки для файла ресурсов "MyResource.en-US.resources" будет "MyResource".</param>
        <param name="resourceDir">Имя папки, в которой производится поиск ресурсов. <paramref name="resourceDir" /> может быть абсолютным или относительным путем из каталога приложения.</param>
        <param name="usingResourceSet">Тип пользовательского объекта <see cref="T:System.Resources.ResourceSet" /> для использования. При значении <see langword="null" /> используется объект времени выполнения по умолчанию <see cref="T:System.Resources.ResourceSet" />.</param>
        <summary>Возвращает объект <see cref="T:System.Resources.ResourceManager" />, который ищет ресурсы в конкретном каталоге вместо манифеста сборки.</summary>
        <returns>Новый экземпляр диспетчера ресурсов, который выполняет поиск ресурсов в указанном каталоге вместо манифеста сборки.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод возвращает диспетчер ресурсов, который извлекает ресурсы из Resources-файла, который не внедрен в сборку. Этот объект <xref:System.Resources.ResourceManager> можно использовать для загрузки ресурсов для страницы ASP.NET или для тестирования реализации <xref:System.Resources.ResourceSet>.  Пример, в котором ресурсы извлекаются из автономного Resources-файла, см. в статье [получение ресурсов](~/docs/framework/resources/retrieving-resources-in-desktop-apps.md) .  
  
 Этот метод позволяет указать <xref:System.Resources.ResourceSet> реализацию. Если вы не хотите использовать конкретную реализацию <xref:System.Resources.ResourceSet>, но хотели бы воспользоваться форматом файла настраиваемого ресурса, следует наследовать от класса <xref:System.Resources.ResourceSet>, переопределить методы <xref:System.Resources.ResourceSet.GetDefaultReader%2A> и <xref:System.Resources.ResourceSet.GetDefaultWriter%2A> и передать этот тип в этот конструктор.  
  
> [!CAUTION]
>  Использование автономных Resources-файлов в приложении ASP.NET приведет к нарушению развертывания XCOPY, так как ресурсы остаются заблокированными до тех пор, пока они не будут явно освобождены методом <xref:System.Resources.ResourceManager.ReleaseAllResources%2A>. Если вы хотите развернуть ресурсы с помощью приложений ASP.NET, скомпилируйте свои Resources файлы во вспомогательные сборки.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="baseName" /> или параметра <paramref name="resourceDir" /> — <see langword="null" />.</exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">При вызове поздней привязки с помощью таких механизмов, как <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />. Связанное перечисление: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="FallbackLocation">
      <MemberSignature Language="C#" Value="protected System.Resources.UltimateResourceFallbackLocation FallbackLocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Resources.UltimateResourceFallbackLocation FallbackLocation" />
      <MemberSignature Language="DocId" Value="P:System.Resources.ResourceManager.FallbackLocation" />
      <MemberSignature Language="VB.NET" Value="Protected Property FallbackLocation As UltimateResourceFallbackLocation" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Resources::UltimateResourceFallbackLocation FallbackLocation { System::Resources::UltimateResourceFallbackLocation get(); void set(System::Resources::UltimateResourceFallbackLocation value); };" />
      <MemberSignature Language="F#" Value="member this.FallbackLocation : System.Resources.UltimateResourceFallbackLocation with get, set" Usage="System.Resources.ResourceManager.FallbackLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Resources.UltimateResourceFallbackLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает расположение, из которого извлекаются резервные ресурсы по умолчанию.</summary>
        <value>Одно из значений перечисления, которое указывает, где диспетчер ресурсов может выполнять поиск резервных ресурсов.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойство <xref:System.Resources.ResourceManager.FallbackLocation%2A> полезно только при написании собственного класса, производного от класса <xref:System.Resources.ResourceManager>.  
  
 С помощью атрибута <xref:System.Resources.NeutralResourcesLanguageAttribute> можно сообщить диспетчеру ресурсов, где найти язык и региональные параметры по умолчанию для приложения: в основной сборке (по умолчанию) или во вспомогательной сборке.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Resources.UltimateResourceFallbackLocation" />
        <altmember cref="T:System.Resources.NeutralResourcesLanguageAttribute" />
        <related type="Article" href="~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md">Упаковка и развертывание ресурсов</related>
      </Docs>
    </Member>
    <Member MemberName="GetNeutralResourcesLanguage">
      <MemberSignature Language="C#" Value="protected static System.Globalization.CultureInfo GetNeutralResourcesLanguage (System.Reflection.Assembly a);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.Globalization.CultureInfo GetNeutralResourcesLanguage(class System.Reflection.Assembly a) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceManager.GetNeutralResourcesLanguage(System.Reflection.Assembly)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function GetNeutralResourcesLanguage (a As Assembly) As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::Globalization::CultureInfo ^ GetNeutralResourcesLanguage(System::Reflection::Assembly ^ a);" />
      <MemberSignature Language="F#" Value="static member GetNeutralResourcesLanguage : System.Reflection.Assembly -&gt; System.Globalization.CultureInfo" Usage="System.Resources.ResourceManager.GetNeutralResourcesLanguage a" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Reflection.Assembly" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="a">Сборка, для которой требуется получить сведения, относящиеся к конкретному языку и региональным параметрам.</param>
        <summary>Возвращает сведения, относящиеся к конкретному языку и региональным параметрам, для ресурсов главной сборки по умолчанию путем получения значения атрибута <see cref="T:System.Resources.NeutralResourcesLanguageAttribute" /> в указанной сборке.</summary>
        <returns>Язык и региональные параметры из атрибута <see cref="T:System.Resources.NeutralResourcesLanguageAttribute" />, если они найдены; в противном случае — инвариантный язык и региональные параметры.</returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">При вызове поздней привязки с помощью таких механизмов, как <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />. Связанное перечисление: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetObject">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Возвращает значение указанного нестрокового ресурса для текущего языка и региональных параметров.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetObject">
      <MemberSignature Language="C#" Value="public virtual object GetObject (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetObject(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceManager.GetObject(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetObject (name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetObject(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetObject : string -&gt; obj&#xA;override this.GetObject : string -&gt; obj" Usage="resourceManager.GetObject name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="name">Имя получаемого ресурса.</param>
        <summary>Возвращает значение указанного нестрокового ресурса.</summary>
        <returns>Значение ресурса, локализованного для текущих настроек языка и региональных параметров вызывающего объекта. Если соответствующий набор ресурсов существует, но параметр <paramref name="name" /> не найден, то метод возвращает значение <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Resources.ResourceManager.GetObject%2A> используется для получения нестроковых ресурсов. К ним относятся значения, принадлежащие примитивным типам данных, например <xref:System.Int32> или <xref:System.Double>, точечные рисунки (например, объект <xref:System.Drawing.Bitmap?displayProperty=nameWithType>) или пользовательские сериализованные объекты. Как правило, возвращаемый объект должен быть приведен ( C#в) или преобразован (в Visual Basic) в объект соответствующего типа.  
  
 Возвращаемый ресурс локализуется для языка и региональных параметров пользовательского интерфейса текущего потока, который определяется свойством <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType>. Если ресурс не локализован для этого языка и региональных параметров, диспетчер ресурсов использует резервные правила для загрузки соответствующего ресурса. Если не найдено ни одного подходящего набора локализованных ресурсов, <xref:System.Resources.ResourceManager> возвращается к ресурсам языка и региональных параметров по умолчанию. Если набор ресурсов для языка и региональных параметров по умолчанию не найден, метод создает исключение <xref:System.Resources.MissingManifestResourceException> или, если предполагается, что набор ресурсов находится во вспомогательной сборке, <xref:System.Resources.MissingSatelliteAssemblyException> исключение. Если диспетчер ресурсов может загрузить соответствующий набор ресурсов, но не может найти ресурс с именем `name`, метод возвращает `null`.  
  
 Свойство <xref:System.Resources.ResourceManager.IgnoreCase%2A> определяет, будет ли сравнение `name` с именами ресурсов без учета регистра или с учетом регистра (по умолчанию).  
  
> [!CAUTION]
>  Этот метод может создавать больше исключений, чем указано в списке. Одна из причин этого может возникнуть, если метод, который вызывает этот метод, создает исключение.  Например, исключение <xref:System.IO.FileLoadException> может возникать, если произошла ошибка при развертывании или установке вспомогательной сборки, или исключение <xref:System.Runtime.Serialization.SerializationException> может возникнуть, если определяемый пользователем тип вызывает исключение, определяемое пользователем, при десериализации типа.  
  
## <a name="performance-considerations"></a>Особенности производительности  
 Если вы вызываете метод <xref:System.Resources.ResourceManager.GetObject%2A> несколько раз с одним и тем же параметром `name`, не зависят от метода, возвращающего ссылку на тот же объект с каждым вызовом. Это обусловлено тем, что метод <xref:System.Resources.ResourceManager.GetObject%2A> может возвращать ссылку на существующий объект ресурса в кэше или перезагружать ресурс и возвращать ссылку на новый объект Resource.  
  
   
  
## Examples  
 В следующем примере для десериализации настраиваемого объекта используется метод <xref:System.Resources.ResourceManager.GetObject%28System.String%29> . Пример включает файл с исходным кодом с именем UIElements.cs (UIElements. vb, если вы используете Visual Basic), который определяет следующую структуру с именем `PersonTable`. Эта структура предназначена для использования подпрограммой общего отображения таблиц, которая отображает локализованные имена для столбцов таблиц. Обратите внимание, что структура `PersonTable` помечена атрибутом <xref:System.SerializableAttribute> .  
  
 [!code-csharp[Conceptual.Resources.Retrieving#6](~/samples/snippets/csharp/VS_Snippets_CLR/conceptual.resources.retrieving/cs/example.cs#6)]
 [!code-vb[Conceptual.Resources.Retrieving#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.resources.retrieving/vb/example.vb#6)]  
  
 Следующий код из файла CreateResources.cs (CreateResources.vb для Visual Basic) создает файл ресурсов XML с именем UIResources.resx, где хранится заголовок таблицы, и объект `PersonTable` , содержащий сведения о приложении, локализуемые для английского языка.  
  
 [!code-csharp[Conceptual.Resources.Retrieving#7](~/samples/snippets/csharp/VS_Snippets_CLR/conceptual.resources.retrieving/cs/example1.cs#7)]
 [!code-vb[Conceptual.Resources.Retrieving#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.resources.retrieving/vb/example.vb#7)]  
  
 После этого приведенный ниже код из файла GetObject.cs (GetObject.vb) извлекает ресурсы и выводит их на консоль.  
  
 [!code-csharp[Conceptual.Resources.Retrieving#8](~/samples/snippets/csharp/VS_Snippets_CLR/conceptual.resources.retrieving/cs/example2.cs#8)]
 [!code-vb[Conceptual.Resources.Retrieving#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.resources.retrieving/vb/example2.vb#8)]  
  
 Создать нужный файл ресурсов, сборки и запустить приложение можно, запустив следующий пакетный файл. Необходимо использовать параметр `/r` , чтобы предоставить Resgen.exe ссылку на UIElements.dll для доступа к информации о структуре `PersonTable` . Если используется C#, замените имя компилятора `vbc` на `csc`и расширение `.vb` на `.cs`.  
  
```  
  
vbc /t:library UIElements.vb  
vbc CreateResources.vb /r:UIElements.dll  
CreateResources  
  
resgen UIResources.resx  /r:UIElements.dll  
vbc GetObject.vb /r:UIElements.dll /resource:UIResources.resources  
  
GetObject.exe  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="name" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Resources.MissingManifestResourceException">Не найден подходящий набор локализованных ресурсов и отсутствуют ресурсы языка и региональных параметров по умолчанию. Сведения об обработке этого исключения см. в подразделе "Обработка исключений MissingManifestResourceException и MissingSatelliteAssemblyException" раздела, посвященного классу <see cref="T:System.Resources.ResourceManager" />.</exception>
        <exception cref="T:System.Resources.MissingSatelliteAssemblyException">Ресурсы языка и региональных параметров по умолчанию находятся во вспомогательной сборке, которую не удалось найти. Сведения об обработке этого исключения см. в подразделе "Обработка исключений MissingManifestResourceException и MissingSatelliteAssemblyException" раздела, посвященного классу <see cref="T:System.Resources.ResourceManager" />.</exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">При вызове поздней привязки с помощью таких механизмов, как <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />. Связанное перечисление: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</permission>
        <altmember cref="M:System.Resources.ResourceManager.GetStream(System.String)" />
        <related type="Article" href="~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md">Упаковка и развертывание ресурсов</related>
      </Docs>
    </Member>
    <Member MemberName="GetObject">
      <MemberSignature Language="C#" Value="public virtual object GetObject (string name, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetObject(string name, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceManager.GetObject(System.String,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetObject (name As String, culture As CultureInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetObject(System::String ^ name, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member GetObject : string * System.Globalization.CultureInfo -&gt; obj&#xA;override this.GetObject : string * System.Globalization.CultureInfo -&gt; obj" Usage="resourceManager.GetObject (name, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="name">Имя получаемого ресурса.</param>
        <param name="culture">Язык и региональные параметры, для которых локализуется этот ресурс. Если ресурс для языка и региональных параметров не локализован, диспетчер ресурсов использует резервные правила для поиска подходящего ресурса.  
  
Если это значение равно <see langword="null" />, объект <see cref="T:System.Globalization.CultureInfo" /> получается с помощью свойства <see cref="P:System.Globalization.CultureInfo.CurrentUICulture" />.</param>
        <summary>Возвращает значение указанного нестрокового ресурса, локализованного для указанного языка и региональных параметров.</summary>
        <returns>Значение ресурса, локализованного для указанного языка и региональных параметров. Если соответствующий набор ресурсов существует, но параметр <paramref name="name" /> не найден, то метод возвращает значение <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Resources.ResourceManager.GetObject%28System.String%2CSystem.Globalization.CultureInfo%29> используется для получения нестроковых ресурсов. К ним относятся значения, принадлежащие примитивным типам данных, например <xref:System.Int32> или <xref:System.Double>, точечные рисунки (например, объект <xref:System.Drawing.Bitmap?displayProperty=nameWithType>) или пользовательские сериализованные объекты. Как правило, возвращаемый объект должен быть приведен ( C#в) или преобразован (в Visual Basic) в объект соответствующего типа.  
  
 Возвращаемый ресурс локализуется для языка и региональных параметров, заданных `culture`, или для языка и региональных параметров, заданных свойством <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType>, если `culture` `null`. Если ресурс не локализован для этого языка и региональных параметров, диспетчер ресурсов использует резервные правила для загрузки соответствующего ресурса. Если не найдено ни одного подходящего набора локализованных ресурсов, диспетчер ресурсов вернется к ресурсам языка и региональных параметров по умолчанию. Если набор ресурсов для языка и региональных параметров по умолчанию не найден, метод создает исключение <xref:System.Resources.MissingManifestResourceException> или, если предполагается, что набор ресурсов находится во вспомогательной сборке, <xref:System.Resources.MissingSatelliteAssemblyException> исключение. Если диспетчер ресурсов может загрузить соответствующий набор ресурсов, но не может найти ресурс с именем `name`, метод возвращает `null`.  
  
 Свойство <xref:System.Resources.ResourceManager.IgnoreCase%2A> определяет, учитывается ли регистр при сравнении `name` с именами ресурсов (по умолчанию) или с учетом регистра.  
  
> [!CAUTION]
>  Этот метод может создавать больше исключений, чем указано в списке. Одна из причин этого может возникнуть, если метод, который вызывает этот метод, создает исключение.  Например, исключение <xref:System.IO.FileLoadException> может возникать, если произошла ошибка при развертывании или установке вспомогательной сборки, или исключение <xref:System.Runtime.Serialization.SerializationException> может возникнуть, если определяемый пользователем тип вызывает исключение, определяемое пользователем, при десериализации типа.  
  
## <a name="performance-considerations"></a>Особенности производительности  
 Если вы вызываете метод <xref:System.Resources.ResourceManager.GetObject%2A> несколько раз с одним и тем же параметром `name`, не зависят от метода, возвращающего ссылку на тот же объект с каждым вызовом. Это обусловлено тем, что метод <xref:System.Resources.ResourceManager.GetObject%2A> может возвращать ссылку на существующий объект ресурса в кэше или перезагружать ресурс и возвращать ссылку на новый объект Resource.  
  
   
  
## Examples  
 В следующем примере для десериализации настраиваемого объекта используется метод <xref:System.Resources.ResourceManager.GetObject%28System.String%2CSystem.Globalization.CultureInfo%29> . Пример включает файл с исходным кодом с именем NumberInfo.cs (Нумберинфо. vb, если вы используете Visual Basic), который определяет следующую структуру с именем `Numbers`. Эта структура предназначена для использования в простом приложении для образовательных учреждений, в котором студенты говорят на английском языке, а не на английском. Обратите внимание, что класс `Numbers` помечен атрибутом <xref:System.SerializableAttribute>.  
  
 [!code-csharp[System.Resources.ResourceManager.GetObject#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcemanager.getobject/cs/numberinfo.cs#1)]
 [!code-vb[System.Resources.ResourceManager.GetObject#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcemanager.getobject/vb/numberinfo.vb#1)]  
  
 Следующий исходный код из файла с именем CreateResources.cs (CreateResources. vb для Visual Basic) создает файлы ресурсов XML для английского языка по умолчанию, а также для французского, португальского и русского языков.  
  
 [!code-csharp[System.Resources.ResourceManager.GetObject#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcemanager.getobject/cs/createresources.cs#2)]
 [!code-vb[System.Resources.ResourceManager.GetObject#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcemanager.getobject/vb/createresources.vb#2)]  
  
 Ресурсы потребляются следующим приложением, которое устанавливает для текущего языка пользовательского интерфейса значение французский (Франция), португальский (Бразилия) или русский (Россия). Он вызывает метод <xref:System.Resources.ResourceManager.GetObject%28System.String%29>, чтобы получить объект `Numbers`, содержащий локализованные числа, и метод <xref:System.Resources.ResourceManager.GetObject%28System.String%2CSystem.Globalization.CultureInfo%29>, чтобы получить объект `Numbers`, содержащий английские номера языков. Затем он отображает нечетные числа, используя текущий язык и региональные параметры пользовательского интерфейса и английский язык. Файл с исходным кодом называется ShowNumbers.cs (Шовнумберс. vb).  
  
 [!code-csharp[System.Resources.ResourceManager.GetObject#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcemanager.getobject/cs/shownumbers.cs#3)]
 [!code-vb[System.Resources.ResourceManager.GetObject#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcemanager.getobject/vb/shownumbers.vb#3)]  
  
 Для сборки и выполнения Visual Basic версии примера можно использовать следующий пакетный файл. Если вы используете C#, замените `vbc` `csc`и замените расширение `.vb` на `.cs`.  
  
```  
  
vbc /t:library NumberInfo.vb  
  
vbc CreateResources.vb /r:NumberInfo.dll  
CreateResources  
  
resgen NumberResources.resx /r:NumberInfo.dll  
  
resgen NumberResources.fr.resx /r:Numberinfo.dll  
Md fr  
al /embed:NumberResources.fr.resources /culture:fr /t:lib /out:fr\ShowNumbers.resources.dll  
  
resgen NumberResources.pt.resx  /r:Numberinfo.dll  
Md pt  
al /embed:NumberResources.pt.resources /culture:pt /t:lib /out:pt\ShowNumbers.resources.dll  
  
resgen NumberResources.ru.resx /r:Numberinfo.dll  
Md ru  
al /embed:NumberResources.ru.resources /culture:ru /t:lib /out:ru\ShowNumbers.resources.dll  
  
vbc ShowNumbers.vb /r:NumberInfo.dll /resource:NumberResources.resources  
ShowNumbers.exe  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="name" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Resources.MissingManifestResourceException">Не было найдено никаких возможных наборов ресурсов и отсутствуют ресурсы языка и региональных параметров по умолчанию. Сведения об обработке этого исключения см. в подразделе "Обработка исключений MissingManifestResourceException и MissingSatelliteAssemblyException" раздела, посвященного классу <see cref="T:System.Resources.ResourceManager" />.</exception>
        <exception cref="T:System.Resources.MissingSatelliteAssemblyException">Ресурсы языка и региональных параметров по умолчанию находятся во вспомогательной сборке, которую не удалось найти. Сведения об обработке этого исключения см. в подразделе "Обработка исключений MissingManifestResourceException и MissingSatelliteAssemblyException" раздела, посвященного классу <see cref="T:System.Resources.ResourceManager" />.</exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">При вызове поздней привязки с помощью таких механизмов, как <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />. Связанное перечисление: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</permission>
        <threadsafe>Метод <see cref="M:System.Resources.ResourceManager.GetObject(System.String,System.Globalization.CultureInfo)" /> является потокобезопасным.</threadsafe>
        <altmember cref="M:System.Resources.ResourceManager.GetStream(System.String,System.Globalization.CultureInfo)" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <related type="Article" href="~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md">Упаковка и развертывание ресурсов</related>
      </Docs>
    </Member>
    <Member MemberName="GetResourceFileName">
      <MemberSignature Language="C#" Value="protected virtual string GetResourceFileName (System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetResourceFileName(class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceManager.GetResourceFileName(System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetResourceFileName (culture As CultureInfo) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetResourceFileName(System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member GetResourceFileName : System.Globalization.CultureInfo -&gt; string&#xA;override this.GetResourceFileName : System.Globalization.CultureInfo -&gt; string" Usage="resourceManager.GetResourceFileName culture" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="culture">Объект языка и региональных параметров, для которого создается имя файла ресурсов.</param>
        <summary>Создает имя файла ресурсов для заданного объекта <see cref="T:System.Globalization.CultureInfo" />.</summary>
        <returns>Имя, которое может быть использовано для файла ресурсов для заданного объекта <see cref="T:System.Globalization.CultureInfo" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Resources.ResourceManager.GetResourceFileName%2A> полезен только при написании собственного класса, производного от класса <xref:System.Resources.ResourceManager>.  
  
 Этот метод использует свойство <xref:System.Globalization.CultureInfo.Name%2A?displayProperty=nameWithType> как часть имени файла для всех культур, отличных от инвариантного языка и региональных параметров. Этот метод не ищет манифест сборки или не затрагивает диск. он используется только для создания имени файла ресурсов (подходит для передачи в конструктор <xref:System.Resources.ResourceReader>) или имени большого двоичного объекта ресурса манифеста.  
  
 Производный класс может переопределить этот метод для поиска другого расширения, например ". ResX "или совершенно другая схема именования файлов ресурсов. Обратите внимание, что метод можно использовать для настройки имени файла ресурсов в вспомогательной сборке, а не для настройки имени самой вспомогательной сборки.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">При вызове поздней привязки с помощью таких механизмов, как <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />. Связанное перечисление: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</permission>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <related type="Article" href="~/docs/standard/globalization-localization/index.md">Глобализация и локализация приложений .NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetResourceSet">
      <MemberSignature Language="C#" Value="public virtual System.Resources.ResourceSet GetResourceSet (System.Globalization.CultureInfo culture, bool createIfNotExists, bool tryParents);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Resources.ResourceSet GetResourceSet(class System.Globalization.CultureInfo culture, bool createIfNotExists, bool tryParents) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceManager.GetResourceSet(System.Globalization.CultureInfo,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetResourceSet (culture As CultureInfo, createIfNotExists As Boolean, tryParents As Boolean) As ResourceSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Resources::ResourceSet ^ GetResourceSet(System::Globalization::CultureInfo ^ culture, bool createIfNotExists, bool tryParents);" />
      <MemberSignature Language="F#" Value="abstract member GetResourceSet : System.Globalization.CultureInfo * bool * bool -&gt; System.Resources.ResourceSet&#xA;override this.GetResourceSet : System.Globalization.CultureInfo * bool * bool -&gt; System.Resources.ResourceSet" Usage="resourceManager.GetResourceSet (culture, createIfNotExists, tryParents)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Resources.ResourceSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="createIfNotExists" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="tryParents" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="culture">Язык и региональные параметры, ресурсы для которых необходимо получить.</param>
        <param name="createIfNotExists">Значение <see langword="true" /> для загрузки набора ресурсов, если он еще не загружен; в противном случае — значение <see langword="false" />.</param>
        <param name="tryParents">Значение <see langword="true" />, чтобы соответствующий ресурс загружался с использованием резервных ресурсов, если набор ресурсов не удается найти. Значение <see langword="false" /> для обхода процесса использования резервных ресурсов.</param>
        <summary>Извлекает набор ресурсов для определенного языка и региональных параметров.</summary>
        <returns>Набор ресурсов для указанного языка и региональных параметров.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Возвращаемый набор ресурсов представляет ресурсы, локализованные для указанного языка и региональных параметров. Если ресурсы не были локализованы для этого языка и `tryParents` `true`, <xref:System.Resources.ResourceManager.GetResourceSet%2A> использует правила резервирования ресурсов для загрузки соответствующего ресурса. Если `tryParents` является `false` и не удается найти набор ресурсов, зависящий от языка и региональных параметров, метод возвращает `null`. Дополнительные сведения о возврате ресурсов см. в разделе "процесс резервного использования ресурсов" статьи [Упаковка и развертывание ресурсов](~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md) .  
  
   
  
## Examples  
 В следующем примере вызывается метод <xref:System.Resources.ResourceManager.GetResourceSet%2A> для получения ресурсов, зависящих от языка и региональных параметров, для языка и региональных параметров "французский (Франция)". Затем выполняется перечисление всех ресурсов в наборе ресурсов. Он содержит исходный код для исполняемого файла с именем Шовнумберс. exe. Он также содержит два текстовых файла, которые содержат имена чисел. Первый, Нумберресаурцес. txt, содержит названия чисел от одного до десяти на английском языке:  
  
```  
  
one=one  
two=two  
three=three  
four=four  
five=five  
six=six  
seven=seven  
eight=eight  
nine=nine  
ten=ten  
  
```  
  
 Второй NumberResources.fr-FR. txt содержит названия чисел от одного до четырех на французском языке:  
  
```  
  
one=un  
two=deux  
three=trois  
four=quatre  
  
```  
  
 Можно использовать пакетный файл для создания файлов ресурсов, внедрить файл ресурсов на английском языке в исполняемые файлы и создать вспомогательную сборку для ресурсов на французском языке. Ниже приведен пакетный файл для создания исполняемого файла с помощью компилятора Visual Basic:  
  
```  
  
resgen NumberResources.txt  
vbc shownumbers.vb /resource:NumberResources.resources  
  
md fr-FR  
resgen NumberResources.fr-FR.txt  
al /out:fr-FR\ShowNumbers.resources.dll /culture:fr-FR /embed:NumberResources.fr-FR.resources  
```  
  
 Для C# компилятора можно использовать следующий пакетный файл:  
  
```  
  
resgen NumberResources.txt  
csc shownumbers.cs /resource:NumberResources.resources  
  
md fr-FR  
resgen NumberResources.fr-FR.txt  
al /out:fr-FR\ShowNumbers.resources.dll /culture:fr-FR /embed:NumberResources.fr-FR.resources  
  
```  
  
 [!code-csharp[System.Resources.ResourceManager.GetResourceSet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcemanager.getresourceset/cs/shownumbers.cs#1)]
 [!code-vb[System.Resources.ResourceManager.GetResourceSet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcemanager.getresourceset/vb/shownumbers.vb#1)]  
  
 Обратите внимание, что при изменении значения аргумента `createIfNotExists` на `false`вызов метода возвращает `null`, так как диспетчер ресурсов еще не загрузила ресурсы на французском языке.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="culture" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Resources.MissingManifestResourceException">Параметр <paramref name="tryParents" /> имеет значение <see langword="true" />, не найден подходящий набор ресурсов, и отсутствуют ресурсы языка и региональных параметров по умолчанию.</exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">При вызове поздней привязки с помощью таких механизмов, как <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />. Связанное перечисление: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</permission>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <related type="Article" href="~/docs/standard/globalization-localization/index.md">Глобализация и локализация приложений .NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetSatelliteContractVersion">
      <MemberSignature Language="C#" Value="protected static Version GetSatelliteContractVersion (System.Reflection.Assembly a);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.Version GetSatelliteContractVersion(class System.Reflection.Assembly a) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceManager.GetSatelliteContractVersion(System.Reflection.Assembly)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function GetSatelliteContractVersion (a As Assembly) As Version" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static Version ^ GetSatelliteContractVersion(System::Reflection::Assembly ^ a);" />
      <MemberSignature Language="F#" Value="static member GetSatelliteContractVersion : System.Reflection.Assembly -&gt; Version" Usage="System.Resources.ResourceManager.GetSatelliteContractVersion a" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Reflection.Assembly" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="a">Сборка для проверки атрибута <see cref="T:System.Resources.SatelliteContractVersionAttribute" />.</param>
        <summary>Возвращает версию, указанную атрибутом <see cref="T:System.Resources.SatelliteContractVersionAttribute" /> в заданной сборке.</summary>
        <returns>Версия сопутствующего контракта данной сборки либо значение <see langword="null" />, если версия не была найдена.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Дополнительные сведения об управлении версиями вспомогательных сборок см. в разделе справки <xref:System.Resources.SatelliteContractVersionAttribute>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Объект <see cref="T:System.Version" />, найденный в сборке <paramref name="a" />, неверен.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="a" /> имеет значение <see langword="null" />.</exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">При вызове поздней привязки с помощью таких механизмов, как <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />. Связанное перечисление: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</permission>
        <altmember cref="T:System.Resources.SatelliteContractVersionAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetStream">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Возвращает объект потока неуправляемой памяти из заданного ресурса.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetStream">
      <MemberSignature Language="C#" Value="public System.IO.UnmanagedMemoryStream GetStream (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.UnmanagedMemoryStream GetStream(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceManager.GetStream(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStream (name As String) As UnmanagedMemoryStream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::UnmanagedMemoryStream ^ GetStream(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.GetStream : string -&gt; System.IO.UnmanagedMemoryStream" Usage="resourceManager.GetStream name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.UnmanagedMemoryStream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="name">Имя ресурса.</param>
        <summary>Возвращает объект потока неуправляемой памяти из заданного ресурса.</summary>
        <returns>Объект потока неуправляемой памяти, представляющий ресурс.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Resources.ResourceManager.GetStream%2A> принимает имя ресурса, который хранится в виде объекта <xref:System.IO.MemoryStream>, получает значение ресурса <xref:System.Object> и возвращает объект <xref:System.IO.UnmanagedMemoryStream>. Для этого требуется, чтобы вы работали непосредственно с потоком байтов, который затем преобразуется в объект. Этот метод полезен в первую очередь для повышения производительности: получение ресурса в виде потока байтов вместо явного объекта может повысить производительность.  
  
 Возвращаемый ресурс локализуется для языка и региональных параметров пользовательского интерфейса текущего потока, который определяется свойством <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType>. Если ресурс не локализован для этого языка и региональных параметров, диспетчер ресурсов использует резервные правила для загрузки соответствующего ресурса. Если не найдено ни одного подходящего набора локализованных ресурсов, <xref:System.Resources.ResourceManager> возвращается к ресурсам языка и региональных параметров по умолчанию. Если набор ресурсов для языка и региональных параметров по умолчанию не найден, метод создает исключение <xref:System.Resources.MissingManifestResourceException> или, если предполагается, что набор ресурсов находится во вспомогательной сборке, <xref:System.Resources.MissingSatelliteAssemblyException> исключение. Если диспетчер ресурсов может загрузить соответствующий набор ресурсов, но не может найти ресурс с именем `name`, метод возвращает `null`.  
  
 Свойство <xref:System.Resources.ResourceManager.IgnoreCase%2A> определяет, учитывается ли регистр при сравнении `name` с именами ресурсов (по умолчанию) или с учетом регистра.  
  
   
  
## Examples  
 В следующем примере метод <xref:System.Resources.ResourceManager.GetStream%28System.String%29> используется для извлечения точечного рисунка, который используется на экране-заставке приложения. Следующий исходный код из файла с именем CreateResources.cs (для C#) или CreateResources. vb (для Visual Basic) создает RESX-файл с именем AppResources. resx, который содержит сериализованное изображение. В этом случае изображение загружается из файла SplashScreen.jpg; имя файла можно изменить, чтобы использовать собственное изображение.  
  
 [!code-csharp[Conceptual.Resources.Retrieving#4](~/samples/snippets/csharp/VS_Snippets_CLR/conceptual.resources.retrieving/cs/createresources.cs#4)]
 [!code-vb[Conceptual.Resources.Retrieving#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.resources.retrieving/vb/createresources.vb#4)]  
  
 Следующий код из файла с именем GetStream.cs (for C#) или-Stream. vb (для Visual Basic) извлекает ресурс и отображает изображение в элементе управления <xref:System.Windows.Forms.PictureBox?displayProperty=nameWithType>.  
  
 [!code-csharp[Conceptual.Resources.Retrieving#5](~/samples/snippets/csharp/VS_Snippets_CLR/conceptual.resources.retrieving/cs/getstream.cs#5)]
 [!code-vb[Conceptual.Resources.Retrieving#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.resources.retrieving/vb/getstream.vb#5)]  
  
 Для сборки примера на C# можно использовать приведенный ниже пакетный файл. Для Visual Basic замените `csc` на `vbc`, а также расширение файла исходного кода `.cs` на `.vb`. 
  
```  
  
csc CreateResources.cs  
CreateResources  
  
resgen AppResources.resx  
  
csc GetStream.cs /resource:AppResources.resources  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Значение указанного ресурса не является объектом <see cref="T:System.IO.MemoryStream" />.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="name" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Resources.MissingManifestResourceException">Не было найдено никаких возможных наборов ресурсов и отсутствуют ресурсы по умолчанию. Сведения об обработке этого исключения см. в подразделе "Обработка исключений MissingManifestResourceException и MissingSatelliteAssemblyException" раздела, посвященного классу <see cref="T:System.Resources.ResourceManager" />.</exception>
        <exception cref="T:System.Resources.MissingSatelliteAssemblyException">Ресурсы языка и региональных параметров по умолчанию находятся во вспомогательной сборке, которую не удалось найти. Сведения об обработке этого исключения см. в подразделе "Обработка исключений MissingManifestResourceException и MissingSatelliteAssemblyException" раздела, посвященного классу <see cref="T:System.Resources.ResourceManager" />.</exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">При вызове поздней привязки с помощью таких механизмов, как <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />. Связанное перечисление: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="GetStream">
      <MemberSignature Language="C#" Value="public System.IO.UnmanagedMemoryStream GetStream (string name, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.UnmanagedMemoryStream GetStream(string name, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceManager.GetStream(System.String,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStream (name As String, culture As CultureInfo) As UnmanagedMemoryStream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::UnmanagedMemoryStream ^ GetStream(System::String ^ name, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="member this.GetStream : string * System.Globalization.CultureInfo -&gt; System.IO.UnmanagedMemoryStream" Usage="resourceManager.GetStream (name, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.UnmanagedMemoryStream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="name">Имя ресурса.</param>
        <param name="culture">Объект, задающий язык и региональные параметры для использования при поиске ресурса. Если параметр <paramref name="culture" /> имеет значение <see langword="null" />, используется язык и региональные параметры для текущего потока.</param>
        <summary>Возвращает объект потока неуправляемой памяти из заданного ресурса, используя заданный язык и региональные параметры.</summary>
        <returns>Объект потока неуправляемой памяти, представляющий ресурс.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Resources.ResourceManager.GetStream%2A> принимает имя ресурса, который хранится в виде объекта <xref:System.IO.MemoryStream>, получает значение ресурса <xref:System.Object> и возвращает объект <xref:System.IO.UnmanagedMemoryStream>. Для этого требуется, чтобы вы работали непосредственно с потоком байтов, который затем преобразуется в объект. Этот метод полезен в первую очередь для повышения производительности: получение ресурса в виде потока байтов вместо явного объекта может повысить производительность.  
  
 Возвращаемый ресурс локализуется для языка и региональных параметров, заданных `culture`, или для языка и региональных параметров, заданных свойством <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType>, если `culture` `null`. Если ресурс не локализован для этого языка и региональных параметров, диспетчер ресурсов использует резервные правила для загрузки соответствующего ресурса. Если не найдено ни одного подходящего набора локализованных ресурсов, <xref:System.Resources.ResourceManager> возвращается к ресурсам языка и региональных параметров по умолчанию. Если набор ресурсов для языка и региональных параметров по умолчанию не найден, метод создает исключение <xref:System.Resources.MissingManifestResourceException> или, если предполагается, что набор ресурсов находится во вспомогательной сборке, <xref:System.Resources.MissingSatelliteAssemblyException> исключение. Если диспетчер ресурсов может загрузить соответствующий набор ресурсов, но не может найти ресурс с именем `name`, метод возвращает `null`.  
  
 Свойство <xref:System.Resources.ResourceManager.IgnoreCase%2A> определяет, учитывается ли регистр при сравнении `name` с именами ресурсов (по умолчанию) или с учетом регистра.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Значение указанного ресурса не является объектом <see cref="T:System.IO.MemoryStream" />.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="name" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Resources.MissingManifestResourceException">Не было найдено никаких возможных наборов ресурсов и отсутствуют ресурсы по умолчанию. Сведения об обработке этого исключения см. в подразделе "Обработка исключений MissingManifestResourceException и MissingSatelliteAssemblyException" раздела, посвященного классу <see cref="T:System.Resources.ResourceManager" />.</exception>
        <exception cref="T:System.Resources.MissingSatelliteAssemblyException">Ресурсы языка и региональных параметров по умолчанию находятся во вспомогательной сборке, которую не удалось найти. Сведения об обработке этого исключения см. в подразделе "Обработка исключений MissingManifestResourceException и MissingSatelliteAssemblyException" раздела, посвященного классу <see cref="T:System.Resources.ResourceManager" />.</exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">При вызове поздней привязки с помощью таких механизмов, как <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />. Связанное перечисление: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetString">
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Возвращает указанный ресурс строки для заданного языка и региональных параметров или текущего языка и региональных параметров пользовательского интерфейса.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public string GetString (string name);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetString(string name) cil managed" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceManager.GetString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetString (name As String) As String" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetString(System::String ^ name);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6" />
      <MemberSignature Language="F#" Value="member this.GetString : string -&gt; string" Usage="resourceManager.GetString name" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6" />
      <MemberSignature Language="C#" Value="public virtual string GetString (string name);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetString(string name) cil managed" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetString (name As String) As String" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetString(System::String ^ name);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member GetString : string -&gt; string&#xA;override this.GetString : string -&gt; string" Usage="resourceManager.GetString name" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Имя извлекаемого ресурса.</param>
        <summary>Возвращает значение указанного строкового ресурса.</summary>
        <returns>Значение ресурса, локализованное для языка и региональных параметров текущего пользовательского интерфейса вызывающего объекта, или значение <see langword="null" />, если не удается найти <paramref name="name" /> в наборе ресурсов.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="desktop-apps"></a>Классические приложения  
 В классических приложениях возвращаемый ресурс локализован для языка и региональных параметров пользовательского интерфейса текущего потока, как определено свойством <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType>. Если ресурс не был локализован для этого языка и региональных параметров, диспетчер ресурсов проверяет наличие ресурса, выполнив действия, описанные в разделе "процесс резервного использования ресурсов" статьи [Упаковка и развертывание ресурсов](~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md) . Если не найдено ни одного подходящего набора локализованных ресурсов, диспетчер ресурсов вернется к ресурсам языка и региональных параметров по умолчанию. Если диспетчеру ресурсов не удается загрузить набор ресурсов языка и региональных параметров по умолчанию, метод создает исключение <xref:System.Resources.MissingManifestResourceException> или, если предполагается, что набор ресурсов находится во вспомогательной сборке, <xref:System.Resources.MissingSatelliteAssemblyException> исключение. Если диспетчер ресурсов может загрузить соответствующий набор ресурсов, но не может найти ресурс с именем `name`, метод возвращает `null`.  
  
 Свойство <xref:System.Resources.ResourceManager.IgnoreCase%2A> определяет, учитывается ли регистр при сравнении `name` с именами ресурсов (по умолчанию) или с учетом регистра.  
  
> [!CAUTION]
>  Этот метод может создавать больше исключений, чем указано в списке. Одна из причин этого может возникнуть, если метод, который вызывает этот метод, создает исключение.  Например, исключение <xref:System.IO.FileLoadException> может возникать, если произошла ошибка при развертывании или установке вспомогательной сборки, или исключение <xref:System.Runtime.Serialization.SerializationException> может возникнуть, если определяемый пользователем тип вызывает исключение, определяемое пользователем, при десериализации типа.  
  
## <a name="includewin8_appname_longincludeswin8-appname-long-mdmd-apps"></a>Приложения [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]  
  
> [!IMPORTANT]
>  Несмотря на то, что класс <xref:System.Resources.ResourceManager> поддерживается в приложениях [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)], использовать его не рекомендуется. Используйте этот класс только при разработке [!INCLUDE[net_portable](~/includes/net-portable-md.md)] проектов, которые можно использовать с приложениями [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]. Чтобы извлечь ресурсы из [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] приложений, используйте вместо этого класс [Windows. ApplicationModel. Resources. ResourceLoader](https://go.microsoft.com/fwlink/p/?LinkId=238182) .  
  
 В [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]ных приложениях метод <xref:System.Resources.ResourceManager.GetString%28System.String%29> возвращает значение `name` строкового ресурса, локализованного для текущих параметров языка и региональные параметры пользовательского интерфейса вызывающей стороны. Список языков и региональных параметров является производным от предпочтительного списка языков пользовательского интерфейса операционной системы. Если диспетчер ресурсов не может сопоставить `name`, метод возвращает `null`.  
  
   
  
## Examples  
 В следующем примере используется метод <xref:System.Resources.ResourceManager.GetString%2A> для получения ресурсов, зависящих от языка и региональных параметров. Он состоит из ресурсов, скомпилированных из TXT-файлов для английского языка (EN), французского языка (Франция) (fr-FR) и русского (Россия) (ru-RU). В примере текущий язык и региональные параметры, а также текущий язык и региональные параметры пользовательского интерфейса изменяются на английский (США), французский (Франция), Русский (Россия) и шведский (Швеция). Затем он вызывает метод <xref:System.Resources.ResourceManager.GetString%2A> для получения локализованной строки, которая отображается вместе с текущим днем и месяцм. Обратите внимание, что в выходных данных отображается соответствующая локализованная строка, кроме случаев, когда текущий язык и региональные параметры пользовательского интерфейса — шведский (Швеция). Поскольку языковые ресурсы для шведского языка недоступны, приложение использует ресурсы языка и региональных параметров по умолчанию, которые являются английским языком. Для этого примера требуются текстовые файлы ресурсов, перечисленные в следующей таблице. Каждый из них имеет один строковый ресурс с именем `DateStart`.  
  
|culture|Имя файла|Имя ресурса|Значение ресурса|  
|-------------|---------------|-------------------|--------------------|  
|en-US|Датестрингс. txt|`DateStart`|Сегодня|  
|fr-FR|DateStrings.fr-FR. txt|`DateStart`|Аужаурд'хуи, к'ест Le|  
|ru-RU|DateStrings.ru-RU. txt|`DateStart`|Сегодня|  
  
 Для компиляции C# примера можно использовать следующий пакетный файл. Для Visual Basic замените `csc` на `vbc`, а также расширение файла исходного кода `.cs` на `.vb`.  
  
```  
resgen DateStrings.txt  
csc showdate.cs /resource:DateStrings.resources  
  
md fr-FR  
resgen DateStrings.fr-FR.txt  
al /out:fr-FR\Showdate.resources.dll /culture:fr-FR /embed:DateStrings.fr-FR.resources   
  
md ru-RU  
resgen DateStrings.ru-RU.txt  
al /out:ru-RU\Showdate.resources.dll /culture:ru-RU /embed:DateStrings.ru-RU.resources  
```  
  
 Ниже приведен исходный код для примера (Шовдате. vb для Visual Basic версии или ShowDate.cs для C# версии).  
  
 [!code-csharp[System.Resources.ResourceManager.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcemanager.class/cs/showdate.cs#2)]
 [!code-vb[System.Resources.ResourceManager.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcemanager.class/vb/showdate.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="name" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Значение указанного ресурса не является строковым.</exception>
        <exception cref="T:System.Resources.MissingManifestResourceException">Не найден подходящий набор ресурсов и отсутствуют ресурсы языка и региональных параметров по умолчанию. Сведения об обработке этого исключения см. в подразделе "Обработка исключений MissingManifestResourceException и MissingSatelliteAssemblyException" раздела, посвященного классу <see cref="T:System.Resources.ResourceManager" />.</exception>
        <exception cref="T:System.Resources.MissingSatelliteAssemblyException">Ресурсы языка и региональных параметров по умолчанию находятся во вспомогательной сборке, которую не удалось найти. Сведения об обработке этого исключения см. в подразделе "Обработка исключений MissingManifestResourceException и MissingSatelliteAssemblyException" раздела, посвященного классу <see cref="T:System.Resources.ResourceManager" />.</exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">При вызове поздней привязки с помощью таких механизмов, как <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />. Связанное перечисление: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</permission>
        <threadsafe>Метод <see cref="M:System.Resources.ResourceManager.GetString(System.String)" /> является потокобезопасным.</threadsafe>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <related type="Article" href="~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md">Упаковка и развертывание ресурсов</related>
        <related type="Article" href="https://msdn.microsoft.com/library/eca16922-1c46-4f68-aefe-e7a12283641f">Извлечение ресурсов во вспомогательных сборках</related>
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public virtual string GetString (string name, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetString(string name, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceManager.GetString(System.String,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetString (name As String, culture As CultureInfo) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetString(System::String ^ name, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member GetString : string * System.Globalization.CultureInfo -&gt; string&#xA;override this.GetString : string * System.Globalization.CultureInfo -&gt; string" Usage="resourceManager.GetString (name, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="name">Имя извлекаемого ресурса.</param>
        <param name="culture">Объект, предоставляющий язык и региональные параметры, для которых локализуется ресурс.</param>
        <summary>Возвращает значение строкового ресурса, локализованного для указанного языка и региональных параметров.</summary>
        <returns>Значение ресурса, локализованное для указанного языка и региональных параметров, или значение <see langword="null" />, если не удается найти <paramref name="name" /> в наборе ресурсов.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="desktop-apps"></a>Классические приложения  
 В классических приложениях, если `culture` `null`, метод <xref:System.Resources.ResourceManager.GetString%28System.String%2CSystem.Globalization.CultureInfo%29> использует текущий язык и региональные параметры пользовательского интерфейса, полученные из свойства <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType>.  
  
 Возвращаемый ресурс локализуется для языка и региональных параметров, заданных параметром `culture`. Если ресурс не был локализован для `culture`, диспетчер ресурсов проверяет наличие ресурса, выполнив действия, описанные в разделе "процесс резервного использования ресурсов" статьи [Упаковка и развертывание ресурсов](~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md) . Если не удается найти подходящий набор ресурсов, диспетчер ресурсов вернется к ресурсам языка и региональных параметров по умолчанию. Если диспетчеру ресурсов не удается загрузить набор ресурсов языка и региональных параметров по умолчанию, метод создает исключение <xref:System.Resources.MissingManifestResourceException> или, если предполагается, что набор ресурсов находится во вспомогательной сборке, <xref:System.Resources.MissingSatelliteAssemblyException> исключение. Если диспетчер ресурсов может загрузить соответствующий набор ресурсов, но не может найти ресурс с именем `name`, метод возвращает `null`.  
  
 Свойство <xref:System.Resources.ResourceManager.IgnoreCase%2A> определяет, учитывается ли регистр при сравнении `name` с именами ресурсов (по умолчанию) или с учетом регистра.  
  
> [!CAUTION]
>  Этот метод может создавать больше исключений, чем указано в списке. Одна из причин этого может возникнуть, если метод, который вызывает этот метод, создает исключение.  Например, исключение <xref:System.IO.FileLoadException> может возникать, если произошла ошибка при развертывании или установке вспомогательной сборки, или исключение <xref:System.Runtime.Serialization.SerializationException> может возникнуть, если определяемый пользователем тип вызывает исключение, определяемое пользователем, при десериализации типа.  
  
## <a name="includewin8_appname_longincludeswin8-appname-long-mdmd-apps"></a>Приложения [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]  
  
> [!IMPORTANT]
>  Несмотря на то, что класс <xref:System.Resources.ResourceManager> поддерживается в приложениях [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)], использовать его не рекомендуется. Используйте этот класс только при разработке [!INCLUDE[net_portable](~/includes/net-portable-md.md)] проектов, которые можно использовать с приложениями [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]. Чтобы извлечь ресурсы из [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] приложений, используйте вместо этого класс [Windows. ApplicationModel. Resources. ResourceLoader](https://go.microsoft.com/fwlink/p/?LinkId=238182) .  
  
 В [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] приложениях метод <xref:System.Resources.ResourceManager.GetString%28System.String%2CSystem.Globalization.CultureInfo%29> возвращает значение `name` строкового ресурса, локализованного для языка и региональных параметров, заданных параметром `culture`. Если ресурс не локализован для `culture` языка и региональных параметров, уточняющий запрос использует весь список резервных языков [!INCLUDE[win8](~/includes/win8-md.md)] и останавливается после просмотра языка и региональных параметров по умолчанию. Если диспетчер ресурсов не может сопоставить `name`, метод возвращает `null`.  
  
   
  
## Examples  
 В следующем примере используется метод <xref:System.Resources.ResourceManager.GetString%28System.String%2CSystem.Globalization.CultureInfo%29> для получения ресурсов, зависящих от языка и региональных параметров. В качестве языка и региональных параметров по умолчанию используется английский язык (EN), а также вспомогательные сборки для языков и региональных параметров "французский (Франция)" (fr-FR) и русский (Россия) (ru-RU). В примере текущий язык и региональные параметры, а также текущий язык и региональные параметры пользовательского интерфейса заменяются на русский (Россия) до вызова <xref:System.Resources.ResourceManager.GetString%28System.String%2CSystem.Globalization.CultureInfo%29>. Затем он вызывает метод <xref:System.Resources.ResourceManager.GetString%2A> и метод <xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> и передает в каждый метод <xref:System.Globalization.CultureInfo> объекты, представляющие язык и региональные параметры (Франция) и шведский (Швеция). В выходных данных, месяц и день месяца, а также строка, предшествующая им, появятся на французском языке, так как метод <xref:System.Resources.ResourceManager.GetString%2A> способен получить ресурс на французском языке. Однако при использовании шведского языка (Швеция) месяц и день месяца отображаются в шведском, хотя строка, предшествующая их, находится на английском языке. Это связано с тем, что диспетчеру ресурсов не удается найти локализованные шведские языковые ресурсы, поэтому вместо него возвращается ресурс для языка и региональных параметров по умолчанию.  
  
 Для этого примера требуются текстовые файлы ресурсов, перечисленные в следующей таблице. Каждый из них имеет один строковый ресурс с именем `DateStart`.  
  
|culture|Имя файла|Имя ресурса|Значение ресурса|  
|-------------|---------------|-------------------|--------------------|  
|en-US|Датестрингс. txt|`DateStart`|Сегодня|  
|fr-FR|DateStrings.fr-FR. txt|`DateStart`|Аужаурд'хуи, к'ест Le|  
|ru-RU|DateStrings.ru-RU. txt|`DateStart`|Сегодня|  
  
 Чтобы скомпилировать Visual Basic пример, можно использовать следующий пакетный файл. Чтобы скомпилировать C#, измените `vbc` на `csc`и измените расширение файла исходного кода с `.vb` на `.cs`.  
  
```  
resgen DateStrings.txt  
vbc showdate.vb /resource:DateStrings.resources  
  
md fr-FR  
resgen DateStrings.fr-FR.txt  
al /out:fr-FR\Showdate.resources.dll /culture:fr-FR /embed:DateStrings.fr-FR.resources   
  
md ru-RU  
resgen DateStrings.ru-RU.txt  
al /out:ru-RU\Showdate.resources.dll /culture:ru-RU /embed:DateStrings.ru-RU.resources  
```  
  
 Ниже приведен исходный код для примера (Шовдате. vb для Visual Basic версии или ShowDate.cs для C# версии).  
  
 [!code-csharp[System.Resources.ResourceManager.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcemanager.class/cs/showdate2.cs#3)]
 [!code-vb[System.Resources.ResourceManager.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcemanager.class/vb/showdate2.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="name" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Значение указанного ресурса не является строковым.</exception>
        <exception cref="T:System.Resources.MissingManifestResourceException">Не найден подходящий набор ресурсов и отсутствуют ресурсы языка и региональных параметров по умолчанию. Сведения об обработке этого исключения см. в подразделе "Обработка исключений MissingManifestResourceException и MissingSatelliteAssemblyException" раздела, посвященного классу <see cref="T:System.Resources.ResourceManager" />.</exception>
        <exception cref="T:System.Resources.MissingSatelliteAssemblyException">Ресурсы языка и региональных параметров по умолчанию находятся во вспомогательной сборке, которую не удалось найти. Сведения об обработке этого исключения см. в подразделе "Обработка исключений MissingManifestResourceException и MissingSatelliteAssemblyException" раздела, посвященного классу <see cref="T:System.Resources.ResourceManager" />.</exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">При вызове поздней привязки с помощью таких механизмов, как <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />. Связанное перечисление: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</permission>
        <threadsafe>Метод <see cref="M:System.Resources.ResourceManager.GetString(System.String,System.Globalization.CultureInfo)" /> является потокобезопасным.</threadsafe>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <related type="Article" href="~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md">Упаковка и развертывание ресурсов</related>
      </Docs>
    </Member>
    <Member MemberName="HeaderVersionNumber">
      <MemberSignature Language="C#" Value="public static readonly int HeaderVersionNumber;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly int32 HeaderVersionNumber" />
      <MemberSignature Language="DocId" Value="F:System.Resources.ResourceManager.HeaderVersionNumber" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly HeaderVersionNumber As Integer " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly int HeaderVersionNumber;" />
      <MemberSignature Language="F#" Value=" staticval mutable HeaderVersionNumber : int" Usage="System.Resources.ResourceManager.HeaderVersionNumber" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Указывает версию заголовков файлов ресурсов, которую текущая реализация <see cref="T:System.Resources.ResourceManager" /> может интерпретировать и создавать.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreCase">
      <MemberSignature Language="C#" Value="public virtual bool IgnoreCase { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreCase" />
      <MemberSignature Language="DocId" Value="P:System.Resources.ResourceManager.IgnoreCase" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property IgnoreCase As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IgnoreCase { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IgnoreCase : bool with get, set" Usage="System.Resources.ResourceManager.IgnoreCase" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, которое указывает, позволяет ли диспетчер ресурсов выполнять поиск ресурсов с учетом регистра в методах <see cref="M:System.Resources.ResourceManager.GetString(System.String)" /> и <see cref="M:System.Resources.ResourceManager.GetObject(System.String)" />.</summary>
        <value>Значение <see langword="true" />, чтобы не учитывать регистр при поиске ресурсов, в противном случае — значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если значение свойства <xref:System.Resources.ResourceManager.IgnoreCase%2A> равно `false`, ресурс с именем "Resource" не эквивалентен ресурсу с именем "Resource". Если <xref:System.Resources.ResourceManager.IgnoreCase%2A> `true`, ресурс с именем "Resource" эквивалентен ресурсу с именем "Resource". Однако обратите внимание, что когда <xref:System.Resources.ResourceManager.IgnoreCase%2A> `true`, методы <xref:System.Resources.ResourceManager.GetString%2A?displayProperty=nameWithType> и <xref:System.Resources.ResourceManager.GetObject%2A?displayProperty=nameWithType> выполняют сравнение строк без учета регистра, используя инвариантный язык и региональные параметры. Преимущество заключается в том, что результаты сравнения строк без учета регистра, выполняемые этими методами, одинаковы на всех компьютерах независимо от языка и региональных параметров. Недостаток заключается в том, что результаты не согласуются с правилами учета регистра всех культур.  
  
 Например, в турецком алфавите есть две версии символа I: одна с точкой, а другая — без точки. В турецком языке символ I (Юникод 0049) считается версией в верхнем регистре для различных символов ı (Unicode 0131). Символ i (Юникод 0069) считается строчной версией еще одного символа i (Юникод 0130). Согласно правилам использования регистров, сравнение строк i (Юникод 0069) и I (Юникод 0049) не должно завершаться ошибкой для языка и региональных параметров "tr-TR" (Турецкий в Турция). Однако, поскольку сравнение выполняется с использованием правил учета регистра инвариантного языка и региональных параметров, если <xref:System.Resources.ResourceManager.IgnoreCase%2A> имеет `true`, это сравнение выполняется правильно.  
  
> [!NOTE]
>  По соображениям производительности лучше всегда указывать правильный регистр для имен ресурсов. Установка <xref:System.Resources.ResourceManager.IgnoreCase%2A> в `true` может привести к значительному увеличению рабочего набора и значительному снижению производительности.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InternalGetResourceSet">
      <MemberSignature Language="C#" Value="protected virtual System.Resources.ResourceSet InternalGetResourceSet (System.Globalization.CultureInfo culture, bool createIfNotExists, bool tryParents);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Resources.ResourceSet InternalGetResourceSet(class System.Globalization.CultureInfo culture, bool createIfNotExists, bool tryParents) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceManager.InternalGetResourceSet(System.Globalization.CultureInfo,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function InternalGetResourceSet (culture As CultureInfo, createIfNotExists As Boolean, tryParents As Boolean) As ResourceSet" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Resources::ResourceSet ^ InternalGetResourceSet(System::Globalization::CultureInfo ^ culture, bool createIfNotExists, bool tryParents);" />
      <MemberSignature Language="F#" Value="abstract member InternalGetResourceSet : System.Globalization.CultureInfo * bool * bool -&gt; System.Resources.ResourceSet&#xA;override this.InternalGetResourceSet : System.Globalization.CultureInfo * bool * bool -&gt; System.Resources.ResourceSet" Usage="resourceManager.InternalGetResourceSet (culture, createIfNotExists, tryParents)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Resources.ResourceSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="createIfNotExists" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="tryParents" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="culture">Искомый объект языка и региональных параметров.</param>
        <param name="createIfNotExists">Значение <see langword="true" /> для загрузки набора ресурсов, если он еще не загружен; в противном случае — значение <see langword="false" />.</param>
        <param name="tryParents">Значение <see langword="true" /> для проверки родительских объектов <see cref="T:System.Globalization.CultureInfo" />, если невозможно загрузить набор ресурсов; в противном случае — значение <see langword="false" />.</param>
        <summary>Предоставляет реализацию для обнаружения набора ресурсов.</summary>
        <returns>Указанный набор ресурсов.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Resources.MissingManifestResourceException">Главная сборка не содержит RESOURCES-файл, требуемый для обнаружения ресурса.</exception>
        <exception cref="T:System.ExecutionEngineException">Произошла внутренняя ошибка среды выполнения.</exception>
        <exception cref="T:System.Resources.MissingSatelliteAssemblyException">Не удается найти местоположение вспомогательной сборки, связанной с объектом <paramref name="culture" />.</exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">При вызове поздней привязки с помощью таких механизмов, как <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />. Связанное перечисление: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</permission>
        <block subset="none" type="overrides"><para>Этот метод завершает всю работу, необходимую для поиска набора ресурсов, и может быть рекурсивным и повторным. Иными словами, этот метод может загрузить сборку и запустить событие <see cref="E:System.AppDomain.AssemblyLoad" />, которое затем снова вызывает объект <see cref="T:System.Resources.ResourceManager" />, который не был полностью инициализирован. Чтобы избежать лишних блокировок, этот метод не является потокобезопасным. Методы <see cref="M:System.Resources.ResourceManager.GetResourceSet(System.Globalization.CultureInfo,System.Boolean,System.Boolean)" />, <see cref="M:System.Resources.ResourceManager.GetString(System.String)" />и <see cref="M:System.Resources.ResourceManager.GetObject(System.String)" /> выполняют всю необходимую синхронизацию.</para></block>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <related type="Article" href="~/docs/standard/globalization-localization/index.md">Глобализация и локализация приложений .NET</related>
      </Docs>
    </Member>
    <Member MemberName="MagicNumber">
      <MemberSignature Language="C#" Value="public static readonly int MagicNumber;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly int32 MagicNumber" />
      <MemberSignature Language="DocId" Value="F:System.Resources.ResourceManager.MagicNumber" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MagicNumber As Integer " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly int MagicNumber;" />
      <MemberSignature Language="F#" Value=" staticval mutable MagicNumber : int" Usage="System.Resources.ResourceManager.MagicNumber" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Содержит номер, используемый для идентификации файлов ресурсов.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение равно 0xBEEFCACE. Первые четыре байта системного формата файлов по умолчанию содержат 32-разрядное целое число со знаком в формате с прямым порядком байтов (см. <xref:System.Text.Encoding>).  
  
 Если <xref:System.Resources.ResourceManager.MagicNumber> найден, байты, следующие за ним, будут иметь номер версии для заголовка <xref:System.Resources.ResourceManager>, за которым следует число, указывающее, сколько байтов должно быть пропущено, чтобы получить его после этого заголовка. Следующий номер указывает версию <xref:System.Resources.ResourceManager>, в которой был создан заголовок, а затем сведения о конкретной версии.  
  
 Номер версии для текущей реализации — один. Следующие байты — это строка с префиксом длины, которая содержит имя <xref:System.Resources.IResourceReader>, который может прочитать этот файл.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MainAssembly">
      <MemberSignature Language="C#" Value="protected System.Reflection.Assembly MainAssembly;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.Reflection.Assembly MainAssembly" />
      <MemberSignature Language="DocId" Value="F:System.Resources.ResourceManager.MainAssembly" />
      <MemberSignature Language="VB.NET" Value="Protected MainAssembly As Assembly " />
      <MemberSignature Language="C++ CLI" Value="protected: System::Reflection::Assembly ^ MainAssembly;" />
      <MemberSignature Language="F#" Value="val mutable MainAssembly : System.Reflection.Assembly" Usage="System.Resources.ResourceManager.MainAssembly" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Задает главную сборку, содержащую ресурсы.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Поле <xref:System.Resources.ResourceManager.MainAssembly> полезно только при написании собственного класса, производного от класса <xref:System.Resources.ResourceManager>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseAllResources">
      <MemberSignature Language="C#" Value="public virtual void ReleaseAllResources ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseAllResources() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceManager.ReleaseAllResources" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ReleaseAllResources ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReleaseAllResources();" />
      <MemberSignature Language="F#" Value="abstract member ReleaseAllResources : unit -&gt; unit&#xA;override this.ReleaseAllResources : unit -&gt; unit" Usage="resourceManager.ReleaseAllResources " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Сообщает диспетчеру ресурсов, что следует вызвать метод <see cref="M:System.Resources.ResourceSet.Close" /> на всех объектах <see cref="T:System.Resources.ResourceSet" /> и освободить все ресурсы.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод позволяет сжать рабочий набор в работающем приложении. Все будущие поиски ресурсов в этом <xref:System.Resources.ResourceManager>ном объекте будут считаться дорогостоящими при первом поиске, так как диспетчеру ресурсов потребуется повторить поиск и загрузку ресурсов. Это может быть полезно в некоторых сложных сценариях работы с потоками, где создание нового <xref:System.Resources.ResourceManager> объекта является соответствующим поведением.  
  
> [!NOTE]
>  Начиная с версии .NET Framework 2,0, метод <xref:System.Resources.ResourceManager.ReleaseAllResources%2A> не является потокобезопасным по отношению к операциям <xref:System.Resources.ResourceManager.GetObject%2A>, <xref:System.Resources.ResourceManager.GetString%2A>и <xref:System.Resources.ResourceManager.GetStream%2A>. Преимуществом этого изменения является повышение производительности для нескольких потоков, обращающихся к ресурсам. Однако при вызове метода <xref:System.Resources.ResourceManager.ReleaseAllResources%2A> в одном потоке при одновременном получении ресурса в другом потоке операция Get может вызвать исключение <xref:System.ObjectDisposedException>.  
  
 Этот метод также можно использовать в ситуациях, когда управляемые экземпляры ресурсов, созданных текущим диспетчером ресурсов, должны освобождаться детерминированным образом, не дожидаясь того, как диспетчер ресурсов полностью выйдет из области действия и будет удален сборщиком мусора.  
  
> [!NOTE]
>  Вызов этого метода не выгружает вспомогательные сборки. Чтобы выгрузить вспомогательные сборки, используйте метод <xref:System.AppDomain.Unload%2A>.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">При вызове поздней привязки с помощью таких механизмов, как <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />. Связанное перечисление: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="ResourceSets">
      <MemberSignature Language="C#" Value="protected System.Collections.Hashtable ResourceSets;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.Collections.Hashtable ResourceSets" />
      <MemberSignature Language="DocId" Value="F:System.Resources.ResourceManager.ResourceSets" />
      <MemberSignature Language="VB.NET" Value="Protected ResourceSets As Hashtable " />
      <MemberSignature Language="C++ CLI" Value="protected: System::Collections::Hashtable ^ ResourceSets;" />
      <MemberSignature Language="F#" Value="val mutable ResourceSets : System.Collections.Hashtable" Usage="System.Resources.ResourceManager.ResourceSets" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Obsolete("call InternalGetResourceSet instead")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Содержит объект <see cref="T:System.Collections.Hashtable" />, который возвращает сопоставление языков и региональных параметров с объектами <see cref="T:System.Resources.ResourceSet" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResourceSetType">
      <MemberSignature Language="C#" Value="public virtual Type ResourceSetType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ResourceSetType" />
      <MemberSignature Language="DocId" Value="P:System.Resources.ResourceManager.ResourceSetType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ResourceSetType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ ResourceSetType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ResourceSetType : Type" Usage="System.Resources.ResourceManager.ResourceSetType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает тип объекта набора ресурсов, используемый диспетчером ресурсов для построения объекта <see cref="T:System.Resources.ResourceSet" />.</summary>
        <value>Тип объекта набора ресурсов, используемый диспетчером ресурсов для построения объекта <see cref="T:System.Resources.ResourceSet" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
