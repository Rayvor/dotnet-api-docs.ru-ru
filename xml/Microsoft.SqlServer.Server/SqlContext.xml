<Type Name="SqlContext" FullName="Microsoft.SqlServer.Server.SqlContext">
  <Metadata><Meta Name="ms.openlocfilehash" Value="825d62a5e9710c1402283dbef5bd00b05faec9ce" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70611936" /></Metadata><TypeSignature Language="C#" Value="public sealed class SqlContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.SqlServer.Server.SqlContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlContext sealed" />
  <TypeSignature Language="F#" Value="type SqlContext = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Представляет абстракцию контекста вызывающего кода, обеспечивающую доступ к объектам <see cref="T:Microsoft.SqlServer.Server.SqlPipe" />, <see cref="T:Microsoft.SqlServer.Server.SqlTriggerContext" /> и <see cref="T:System.Security.Principal.WindowsIdentity" />. Этот класс не наследуется.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.SqlServer.Server.SqlContext> Объект можно использовать для получения контекста триггера (для кода, выполняемого в триггере) и объекта канала (если он доступен, например в хранимых процедурах). Он также может использоваться для получения <xref:System.Security.Principal.WindowsIdentity> объекта, представляющего удостоверение Microsoft Windows вызывающего клиента, если клиент прошел проверку подлинности на сервере с помощью встроенной проверки подлинности.  
  
   
  
## Examples  
 В следующем примере создается новый <xref:Microsoft.SqlServer.Server.SqlDataRecord> объект и его свойство. <xref:Microsoft.SqlServer.Server.SqlMetaData> Затем пример отмечает начало результирующего набора с помощью <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> метода, отправляет записи с примерами данных обратно клиенту <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> с помощью метода и помечает конец результирующего набора <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> методом.  
  
 [!code-csharp[DataWorks SqlPipe.SendResultsRow#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlPipe.SendResultsRow/CS/source.cs#1)]
 [!code-vb[DataWorks SqlPipe.SendResultsRow#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlPipe.SendResultsRow/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="IsAvailable">
      <MemberSignature Language="C#" Value="public static bool IsAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsAvailable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlContext.IsAvailable" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsAvailable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAvailable : bool" Usage="Microsoft.SqlServer.Server.SqlContext.IsAvailable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Показывает, выполняется ли вызывающий код в SQL Server и доступно ли контекстное соединение.</summary>
        <value><see langword="True" />, если контекстное соединение доступно, равно как и остальные члены класса <see cref="T:Microsoft.SqlServer.Server.SqlContext" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если это свойство возвращает значение false, все остальные <xref:Microsoft.SqlServer.Server.SqlContext> члены <xref:System.InvalidOperationException> создают исключение при использовании.  
  
 Если это свойство возвращает значение false, то любая попытка открыть объект соединения, в строке подключения которого задано контекстное соединение = true, завершается ошибкой.  
  
 Это свойство доступно только для чтения.  
  
 При использовании ADO.NET для доступа к данным, если фрагмент кода может выполняться как внутри SQL Server (с помощью интеграции со средой CLR), так и снаружи SQL Server, это свойство можно использовать для проверки доступности контекстного соединения.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Pipe">
      <MemberSignature Language="C#" Value="public static Microsoft.SqlServer.Server.SqlPipe Pipe { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Microsoft.SqlServer.Server.SqlPipe Pipe" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlContext.Pipe" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Pipe As SqlPipe" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Microsoft::SqlServer::Server::SqlPipe ^ Pipe { Microsoft::SqlServer::Server::SqlPipe ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Pipe : Microsoft.SqlServer.Server.SqlPipe" Usage="Microsoft.SqlServer.Server.SqlContext.Pipe" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Server.SqlPipe</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает объект канала, позволяющий отправлять из вызывающего кода клиенту результирующие наборы, сообщения и результаты выполнения команд.</summary>
        <value>Экземпляр <see cref="T:Microsoft.SqlServer.Server.SqlPipe" />, если канал доступен, или <see langword="null" /> при вызове из контекста, в котором канал недоступен (например, в пользовательской функции).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если вызывается извне SQL Server, <xref:System.NotSupportedException> создается исключение.  
  
 Это свойство доступно только для чтения.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TriggerContext">
      <MemberSignature Language="C#" Value="public static Microsoft.SqlServer.Server.SqlTriggerContext TriggerContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Microsoft.SqlServer.Server.SqlTriggerContext TriggerContext" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlContext.TriggerContext" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TriggerContext As SqlTriggerContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Microsoft::SqlServer::Server::SqlTriggerContext ^ TriggerContext { Microsoft::SqlServer::Server::SqlTriggerContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TriggerContext : Microsoft.SqlServer.Server.SqlTriggerContext" Usage="Microsoft.SqlServer.Server.SqlContext.TriggerContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Server.SqlTriggerContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает контекст триггера, используемый для передачи в вызывающий код сведений о причинах срабатывания триггера и таблицы обновленных столбцов.</summary>
        <value>Экземпляр <see cref="T:Microsoft.SqlServer.Server.SqlTriggerContext" />, если контекст триггера доступен, или <see langword="null" /> при вызове извне области действия триггера.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.SqlServer.Server.SqlTriggerContext> Объект может быть получен только из триггера среды CLR.  
  
 Если доступ к <xref:System.NotSupportedException> свойству осуществляется извне SQL Server <xref:Microsoft.SqlServer.Server.SqlContext.TriggerContext%2A>  , создается исключение.  
  
 Это свойство доступно только для чтения.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowsIdentity">
      <MemberSignature Language="C#" Value="public static System.Security.Principal.WindowsIdentity WindowsIdentity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Security.Principal.WindowsIdentity WindowsIdentity" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlContext.WindowsIdentity" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property WindowsIdentity As WindowsIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Security::Principal::WindowsIdentity ^ WindowsIdentity { System::Security::Principal::WindowsIdentity ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WindowsIdentity : System.Security.Principal.WindowsIdentity" Usage="Microsoft.SqlServer.Server.SqlContext.WindowsIdentity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.WindowsIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Удостоверение Microsoft Windows для вызывающего кода.</summary>
        <value>Экземпляр <see cref="T:System.Security.Principal.WindowsIdentity" />, представляющий удостоверение Windows для вызывающего кода, или <see langword="null" />, если клиент прошел проверку подлинности с помощью средств проверки подлинности SQL Server.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Код среды CLR в SQL Server всегда вызывается в контексте учетной записи процесса. Если необходимо, чтобы код выполнил действие с помощью вызова удостоверения пользователя вместо SQL Server удостоверения процесса, то маркер олицетворения должен быть получен через это свойство. Получив объект <xref:System.Security.Principal.WindowsIdentity>, вызывающие могут олицетворять учетную запись клиента и выполнять действия от их имени.  
  
 Если вызывается извне SQL Server, <xref:System.NotSupportedException> создается исключение.  
  
 Доступ к этому свойству могут получить только сборки, имеющие разрешения `EXTERNAL_ACCESS` или `UNSAFE`.  
  
 Это свойство доступно только для чтения.  
  
   
  
## Examples  
 В следующем примере показано, как получить удостоверение Windows вызывающего клиента и выполнить олицетворение клиента.
  
 [!code-csharp[DataWorks SqlContext.WindowsIdentity Sample#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlContext.WindowsIdentity Sample/CS/source.cs#1)]
 [!code-vb[DataWorks SqlContext.WindowsIdentity Sample#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlContext.WindowsIdentity Sample/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
