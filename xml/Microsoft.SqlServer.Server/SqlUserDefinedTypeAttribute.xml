<Type Name="SqlUserDefinedTypeAttribute" FullName="Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="53fbed7cc2510fea924d578b062e6b89fd7765b4" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69303390" /></Metadata><TypeSignature Language="C#" Value="public sealed class SqlUserDefinedTypeAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlUserDefinedTypeAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlUserDefinedTypeAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlUserDefinedTypeAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type SqlUserDefinedTypeAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.SqlClient</AssemblyName>
    <AssemblyVersion>4.4.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Struct, AllowMultiple=false, Inherited=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="df9e0-101">Используется, чтобы пометить определение типа в сборке как пользовательский тип в SQL Server.</span><span class="sxs-lookup"><span data-stu-id="df9e0-101">Used to mark a type definition in an assembly as a user-defined type (UDT) in SQL Server.</span></span> <span data-ttu-id="df9e0-102">Свойства этого атрибута отражают физические характеристики, используемые при регистрации типа в SQL Server.</span><span class="sxs-lookup"><span data-stu-id="df9e0-102">The properties on the attribute reflect the physical characteristics used when the type is registered with SQL Server.</span></span> <span data-ttu-id="df9e0-103">Этот класс не наследуется.</span><span class="sxs-lookup"><span data-stu-id="df9e0-103">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="df9e0-104">SQL Server создает определяемый пользователем тип, привязанный к определению типа, имеющему <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute> настраиваемый атрибут.</span><span class="sxs-lookup"><span data-stu-id="df9e0-104">SQL Server creates a user-defined type that is bound to the type definition that has the <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute> custom attribute.</span></span> <span data-ttu-id="df9e0-105">Каждый определяемый пользователем тип должен быть снабжен этим атрибутом.</span><span class="sxs-lookup"><span data-stu-id="df9e0-105">Every UDT must be annotated with this attribute.</span></span> <span data-ttu-id="df9e0-106">Дополнительные сведения о UDT, включая пример ОПРЕДЕЛЯЕМого пользователем типа, см. в разделе [определяемые пользователем типы данных CLR](https://go.microsoft.com/fwlink/?LinkId=128028) .</span><span class="sxs-lookup"><span data-stu-id="df9e0-106">See [CLR User-Defined Types](https://go.microsoft.com/fwlink/?LinkId=128028) for more information about UDTs, including an example of a UDT.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="df9e0-107">В следующем примере показан `UserDefinedType` атрибут определяемого пользователем типа Point.</span><span class="sxs-lookup"><span data-stu-id="df9e0-107">The following example shows the `UserDefinedType` attribute of the Point UDT.</span></span>  <span data-ttu-id="df9e0-108">Определяемый пользователем тип с именем "точка" имеет метод проверки с именем "ValidatePoint" и использует собственный формат сериализации.</span><span class="sxs-lookup"><span data-stu-id="df9e0-108">The UDT is byte-ordered, is named "Point", has a validation method named "ValidatePoint", and uses the native serialization format.</span></span>  
  
 [!code-csharp[DataWorks SqlUserDefinedTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlUserDefinedTypeAttribute Example/CS/source.cs#1)]
 [!code-vb[DataWorks SqlUserDefinedTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlUserDefinedTypeAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlUserDefinedTypeAttribute (Microsoft.SqlServer.Server.Format format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype Microsoft.SqlServer.Server.Format format) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.#ctor(Microsoft.SqlServer.Server.Format)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlUserDefinedTypeAttribute(Microsoft::SqlServer::Server::Format format);" />
      <MemberSignature Language="F#" Value="new Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute : Microsoft.SqlServer.Server.Format -&gt; Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute" Usage="new Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute format" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="format" Type="Microsoft.SqlServer.Server.Format" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="df9e0-109">Одно из значений <see cref="T:Microsoft.SqlServer.Server.Format" />, представляющее формат сериализации типа.</span><span class="sxs-lookup"><span data-stu-id="df9e0-109">One of the <see cref="T:Microsoft.SqlServer.Server.Format" /> values representing the serialization format of the type.</span></span></param>
        <summary><span data-ttu-id="df9e0-110">Обязательный атрибут пользовательского типа (UDT), используемый для подтверждения того, что данный тип является UDT, и задающий формат хранения UDT.</span><span class="sxs-lookup"><span data-stu-id="df9e0-110">A required attribute on a user-defined type (UDT), used to confirm that the given type is a UDT and to indicate the storage format of the UDT.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="df9e0-111">В следующем примере указывается, что `Format` тип определяемого пользователем типа равен `SerializedDataWithMetadata` , а `MaxByteSize` — 8000 байт.</span><span class="sxs-lookup"><span data-stu-id="df9e0-111">The following example specifies that the `Format` of the user-defined type is `SerializedDataWithMetadata` and the `MaxByteSize` is 8000 bytes.</span></span>  
  
   
  
## Examples  
 [!code-csharp[VbRaddataSQLObjects#12](~/samples/snippets/csharp/VS_Snippets_VBCSharp/VbRaddataSQLObjects/CS/Type1.cs#12)]
 [!code-vb[VbRaddataSQLObjects#12](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRaddataSQLObjects/VB/Type1.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public Microsoft.SqlServer.Server.Format Format { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.SqlServer.Server.Format Format" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Format" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Format As Format" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::SqlServer::Server::Format Format { Microsoft::SqlServer::Server::Format get(); };" />
      <MemberSignature Language="F#" Value="member this.Format : Microsoft.SqlServer.Server.Format" Usage="Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Format" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Server.Format</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="df9e0-112">Формат сериализации в виде значения <see cref="T:Microsoft.SqlServer.Server.Format" />.</span><span class="sxs-lookup"><span data-stu-id="df9e0-112">The serialization format as a <see cref="T:Microsoft.SqlServer.Server.Format" />.</span></span></summary>
        <value><span data-ttu-id="df9e0-113">Значение <see cref="T:Microsoft.SqlServer.Server.Format" />, представляющее формат сериализации.</span><span class="sxs-lookup"><span data-stu-id="df9e0-113">A <see cref="T:Microsoft.SqlServer.Server.Format" /> value representing the serialization format.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsByteOrdered">
      <MemberSignature Language="C#" Value="public bool IsByteOrdered { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsByteOrdered" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered" />
      <MemberSignature Language="VB.NET" Value="Public Property IsByteOrdered As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsByteOrdered { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsByteOrdered : bool with get, set" Usage="Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="df9e0-114">Показывает, упорядочен ли пользовательский тип по байтам.</span><span class="sxs-lookup"><span data-stu-id="df9e0-114">Indicates whether the user-defined type is byte ordered.</span></span></summary>
        <value><span data-ttu-id="df9e0-115"><see langword="true" />, если пользовательский тип побайтно упорядочен, в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="df9e0-115"><see langword="true" /> if the user-defined type is byte ordered; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="df9e0-116">Если задано `true`значение <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered%2A> , свойство в силе гарантирует, что сериализованные двоичные данные можно использовать для семантического упорядочивания информации.</span><span class="sxs-lookup"><span data-stu-id="df9e0-116">When set to `true`, the <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered%2A> property in effect guarantees that the serialized binary data can be used for semantic ordering of the information.</span></span> <span data-ttu-id="df9e0-117">Таким же результатом, каждый экземпляр объекта определяемого пользователем типа Byte может иметь только одно сериализованное представление.</span><span class="sxs-lookup"><span data-stu-id="df9e0-117">Thus, each instance of a byte-ordered UDT object can only have one serialized representation.</span></span> <span data-ttu-id="df9e0-118">При выполнении операции сравнения в SQL Server сериализованных байтах ее результаты должны быть такими же, как если бы в управляемом коде выполнялась та же операция сравнения.</span><span class="sxs-lookup"><span data-stu-id="df9e0-118">When a comparison operation is performed in SQL Server on the serialized bytes, its results should be the same as if the same comparison operation had taken place in managed code.</span></span>  
  
 <span data-ttu-id="df9e0-119">Если <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered%2A> параметр имеет `true`значение, поддерживаются следующие функции:</span><span class="sxs-lookup"><span data-stu-id="df9e0-119">The following features are supported when <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered%2A> is set to `true`:</span></span>  
  
-   <span data-ttu-id="df9e0-120">Возможность создания индексов для столбцов этого типа.</span><span class="sxs-lookup"><span data-stu-id="df9e0-120">The ability to create indexes on columns of this type.</span></span>  
  
-   <span data-ttu-id="df9e0-121">Возможность создания первичных и внешних ключей, а также ограничений CHECK и UNIQUE для столбцов этого типа.</span><span class="sxs-lookup"><span data-stu-id="df9e0-121">The ability to create primary and foreign keys as well as CHECK and UNIQUE constraints on columns of this type.</span></span>  
  
-   <span data-ttu-id="df9e0-122">Возможность использовать предложения ORDER BY, ГРУППИРОВАНия и СЕКЦИОНИРОВАНия по Transact-SQL.</span><span class="sxs-lookup"><span data-stu-id="df9e0-122">The ability to use Transact-SQL ORDER BY, GROUP BY, and PARTITION BY clauses.</span></span> <span data-ttu-id="df9e0-123">В таких случаях для определения порядка используется двоичное представление типа.</span><span class="sxs-lookup"><span data-stu-id="df9e0-123">In these cases, the binary representation of the type is used to determine the order.</span></span>  
  
-   <span data-ttu-id="df9e0-124">Возможность использования операторов сравнения в инструкциях Transact-SQL.</span><span class="sxs-lookup"><span data-stu-id="df9e0-124">The ability to use comparison operators in Transact-SQL statements.</span></span>  
  
-   <span data-ttu-id="df9e0-125">Возможность сохранять вычисленные столбцы этого типа.</span><span class="sxs-lookup"><span data-stu-id="df9e0-125">The ability to persist computed columns of this type.</span></span>  
  
 <span data-ttu-id="df9e0-126">Обратите внимание, `Native` что `UserDefined` форматы сериализации и и поддерживают следующие операторы сравнения <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered%2A> , если для `true`задано значение:</span><span class="sxs-lookup"><span data-stu-id="df9e0-126">Note that both the `Native` and `UserDefined` serialization formats support the following comparison operators when <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered%2A> is set to `true`:</span></span>  
  
-   <span data-ttu-id="df9e0-127">Равно (=)</span><span class="sxs-lookup"><span data-stu-id="df9e0-127">Equal to (=)</span></span>  
  
-   <span data-ttu-id="df9e0-128">Не равно (!=)</span><span class="sxs-lookup"><span data-stu-id="df9e0-128">Not equal to (!=)</span></span>  
  
-   <span data-ttu-id="df9e0-129">Больше чем (>)</span><span class="sxs-lookup"><span data-stu-id="df9e0-129">Greater than (>)</span></span>  
  
-   <span data-ttu-id="df9e0-130">Меньше (\<)</span><span class="sxs-lookup"><span data-stu-id="df9e0-130">Less than (\<)</span></span>  
  
-   <span data-ttu-id="df9e0-131">Больше или равно (> =)</span><span class="sxs-lookup"><span data-stu-id="df9e0-131">Greater than or equal to (>=)</span></span>  
  
-   <span data-ttu-id="df9e0-132">Меньше или равно (<=)</span><span class="sxs-lookup"><span data-stu-id="df9e0-132">Less than or equal to (<=)</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFixedLength">
      <MemberSignature Language="C#" Value="public bool IsFixedLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFixedLength" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsFixedLength" />
      <MemberSignature Language="VB.NET" Value="Public Property IsFixedLength As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFixedLength { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsFixedLength : bool with get, set" Usage="Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsFixedLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="df9e0-133">Показывает, все ли экземпляры данного пользовательского типа имеют одинаковую длину.</span><span class="sxs-lookup"><span data-stu-id="df9e0-133">Indicates whether all instances of this user-defined type are the same length.</span></span></summary>
        <value><span data-ttu-id="df9e0-134"><see langword="true" />, если все экземпляры типа имеют одинаковую длину, в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="df9e0-134"><see langword="true" /> if all instances of this type are the same length; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="df9e0-135">Если задано `true`значение, все экземпляры определяемых пользователем типов, соответствующие этому типу среды CLR, должны иметь длину в байтах в точности <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A>равную.</span><span class="sxs-lookup"><span data-stu-id="df9e0-135">If set to `true`, all instances of UDTs corresponding to this common language runtime (CLR) type must have a length in bytes exactly equal to <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A>.</span></span> <span data-ttu-id="df9e0-136">Этот атрибут относится только к определяемым пользователем `UserDefined` типам <xref:Microsoft.SqlServer.Server.Format>с сериализацией.</span><span class="sxs-lookup"><span data-stu-id="df9e0-136">This attribute is only relevant for UDTs with `UserDefined` serialization <xref:Microsoft.SqlServer.Server.Format>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxByteSize">
      <MemberSignature Language="C#" Value="public int MaxByteSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxByteSize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxByteSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxByteSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxByteSize : int with get, set" Usage="Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="df9e0-137">Максимальный размер экземпляра в байтах.</span><span class="sxs-lookup"><span data-stu-id="df9e0-137">The maximum size of the instance, in bytes.</span></span></summary>
        <value><span data-ttu-id="df9e0-138">Значение типа <see cref="T:System.Int32" />, представляющее максимальный размер экземпляра.</span><span class="sxs-lookup"><span data-stu-id="df9e0-138">An <see cref="T:System.Int32" /> value representing the maximum size of the instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="df9e0-139">Необходимо указать <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A> свойство `UserDefined` с помощью сериализации <xref:Microsoft.SqlServer.Server.Format>.</span><span class="sxs-lookup"><span data-stu-id="df9e0-139">You must specify the <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A> property with the `UserDefined` serialization <xref:Microsoft.SqlServer.Server.Format>.</span></span>  
  
 <span data-ttu-id="df9e0-140">При подключении к SQL Server 2005 или более ранней версии <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A> значение должно находиться в диапазоне от 1 до 8000.</span><span class="sxs-lookup"><span data-stu-id="df9e0-140">When connecting to SQL Server 2005 or earlier, <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A> must be between 1 and 8000.</span></span>  
  
 <span data-ttu-id="df9e0-141">При подключении к SQL Server 2008 или более поздней <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A> версии задайте значение от 1 до 8000 для типа, экземпляры которого всегда имеют размер не менее 8 000 байт.</span><span class="sxs-lookup"><span data-stu-id="df9e0-141">When connecting to SQL Server 2008 or later, set <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A> between 1 and 8000, for a type whose instances are always 8,000 bytes or less.</span></span> <span data-ttu-id="df9e0-142">Для типов, которые могут иметь экземпляры, размер которых превышает 8000, укажите-1.</span><span class="sxs-lookup"><span data-stu-id="df9e0-142">For types that can have instances larger than 8000, specify -1.</span></span>  
  
 <span data-ttu-id="df9e0-143">Для определяемого пользователем типа с заданной <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A> пользовательской сериализацией обозначается общий размер определяемого пользователем типа в его сериализованной форме, как определено пользователем.</span><span class="sxs-lookup"><span data-stu-id="df9e0-143">For a UDT with user-defined serialization specified, <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A> refers to the total size of the UDT in its serialized form as defined by the user.</span></span> <span data-ttu-id="df9e0-144">Рассмотрим определяемый пользователем тип со свойством строки из 10 символов (<xref:System.Char>).</span><span class="sxs-lookup"><span data-stu-id="df9e0-144">Consider a UDT with a property of a string of 10 characters (<xref:System.Char>).</span></span> <span data-ttu-id="df9e0-145">Когда определяемый пользователем тип сериализуется с <xref:System.IO.BinaryWriter>помощью, общий размер сериализованной строки составляет 22 байта: 2 байта на символ Юникода UTF-16, умноженное на максимальное число символов, плюс 2 контрольных байта, вызванных сериализацией двоичного потока.</span><span class="sxs-lookup"><span data-stu-id="df9e0-145">When the UDT is serialized using a <xref:System.IO.BinaryWriter>, the total size of the serialized string is 22 bytes: 2 bytes per Unicode UTF-16 character, multiplied by the maximum number of characters, plus 2 control bytes of overhead incurred from serializing a binary stream.</span></span> <span data-ttu-id="df9e0-146">Таким образом, при определении значения <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A>необходимо учитывать общий размер сериализованного определяемого пользователем типа: размер данных, сериализованных в двоичном виде, плюс дополнительные затраты, вызванные сериализацией.</span><span class="sxs-lookup"><span data-stu-id="df9e0-146">So, when determining the value of <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A>, the total size of the serialized UDT must be considered: the size of the data serialized in binary form plus the overhead incurred by serialization.</span></span>  
  
 <span data-ttu-id="df9e0-147">Это свойство не следует использовать с `Native` сериализацией. <xref:Microsoft.SqlServer.Server.Format></span><span class="sxs-lookup"><span data-stu-id="df9e0-147">This property should not be used with `Native` serialization <xref:Microsoft.SqlServer.Server.Format>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="df9e0-148">Имя пользовательского типа SQL Server.</span><span class="sxs-lookup"><span data-stu-id="df9e0-148">The SQL Server name of the user-defined type.</span></span></summary>
        <value><span data-ttu-id="df9e0-149">Значение типа <see cref="T:System.String" />, представляющее имя пользовательского типа SQL Server.</span><span class="sxs-lookup"><span data-stu-id="df9e0-149">A <see cref="T:System.String" /> value representing the SQL Server name of the user-defined type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="df9e0-150"><xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Name%2A> Свойство не используется в SQL Server, но используется интегрированной средой разработки (IDE) Microsoft Visual Studio .NET.</span><span class="sxs-lookup"><span data-stu-id="df9e0-150">The <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Name%2A> property is not used within SQL Server, but is used by the Microsoft Visual Studio .NET Integrated Development Environment (IDE).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationMethodName">
      <MemberSignature Language="C#" Value="public string ValidationMethodName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ValidationMethodName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.ValidationMethodName" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidationMethodName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ValidationMethodName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ValidationMethodName : string with get, set" Usage="Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.ValidationMethodName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="df9e0-151">Имя метода, используемого для проверки экземпляров пользовательского типа.</span><span class="sxs-lookup"><span data-stu-id="df9e0-151">The name of the method used to validate instances of the user-defined type.</span></span></summary>
        <value><span data-ttu-id="df9e0-152">Значение типа <see cref="T:System.String" />, представляющее имя метода проверки экземпляров пользовательского типа.</span><span class="sxs-lookup"><span data-stu-id="df9e0-152">A <see cref="T:System.String" /> representing the name of the method used to validate instances of the user-defined type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="df9e0-153">Метод, заданный этим атрибутом, проверяет экземпляры определяемого пользователем типа, если определяемый пользователем тип был десериализован из двоичного значения, которое не является доверенным.</span><span class="sxs-lookup"><span data-stu-id="df9e0-153">The method specified by this attribute validates instances of the UDT when the UDT has been deserialized from a binary value that is not trusted.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
