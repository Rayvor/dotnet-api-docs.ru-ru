<Type Name="Format" FullName="Microsoft.SqlServer.Server.Format">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ffca0cda31e32a79ce7ab852c13be008741be0df" /><Meta Name="ms.sourcegitcommit" Value="feb111e137a41d186aef01d83f04819d820520eb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="06/21/2019" /><Meta Name="ms.locfileid" Value="67307955" /></Metadata><TypeSignature Language="C#" Value="public enum Format" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed Format extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:Microsoft.SqlServer.Server.Format" />
  <TypeSignature Language="VB.NET" Value="Public Enum Format" />
  <TypeSignature Language="C++ CLI" Value="public enum class Format" />
  <TypeSignature Language="F#" Value="type Format = " />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.SqlClient</AssemblyName>
    <AssemblyVersion>4.4.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary><span data-ttu-id="4d00e-101">Используется классами <see cref="T:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute" /> и <see cref="T:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute" /> для указания формата сериализации пользовательского типа или агрегатной функции.</span><span class="sxs-lookup"><span data-stu-id="4d00e-101">Used by <see cref="T:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute" /> and <see cref="T:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute" /> to indicate the serialization format of a user-defined type (UDT) or aggregate.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="4d00e-102">Это перечисление используется с <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute> и <xref:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute> для указания формата сериализации определяемого пользователем типа (UDT) или агрегатной функции.</span><span class="sxs-lookup"><span data-stu-id="4d00e-102">This enumeration is used by <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute> and <xref:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute> to indicate the serialization format of a user-defined type (UDT) or aggregate.</span></span> <span data-ttu-id="4d00e-103">Использование `Native` и `UserDefined` членов перечисления имеет особые требования.</span><span class="sxs-lookup"><span data-stu-id="4d00e-103">Use of the `Native` and `UserDefined` enumeration members has special requirements.</span></span>   

- `Format.Native`

   <span data-ttu-id="4d00e-104">Требования к `Format.Native` формат:</span><span class="sxs-lookup"><span data-stu-id="4d00e-104">The requirements for the `Format.Native` format are:</span></span>  
  
   - <span data-ttu-id="4d00e-105"><xref:System.Runtime.InteropServices.StructLayoutAttribute> С <xref:System.Runtime.InteropServices.StructLayoutAttribute.Value> значение свойства <xref:System.Runtime.InteropServices.LayoutKind.Sequential?displayProperty=nameWithType> должны применяться для статистических выражений или определяемого пользователем ТИПА, если оно определено в классе, а не в структуре.</span><span class="sxs-lookup"><span data-stu-id="4d00e-105">The <xref:System.Runtime.InteropServices.StructLayoutAttribute> with a <xref:System.Runtime.InteropServices.StructLayoutAttribute.Value> property value of <xref:System.Runtime.InteropServices.LayoutKind.Sequential?displayProperty=nameWithType> must be applied to the aggregate or UDT if it is defined in a class and not a structure.</span></span> <span data-ttu-id="4d00e-106">Он управляет физической компоновкой полей данных и используется заставляет члены структуры располагаться последовательно в порядке их следования.</span><span class="sxs-lookup"><span data-stu-id="4d00e-106">This controls the physical layout of the data fields and is used to force the members to be laid out sequentially in the order they appear.</span></span> <span data-ttu-id="4d00e-107">SQL Server использует этот атрибут для задания порядка полей в определяемых пользователем типов данных с несколькими полями.</span><span class="sxs-lookup"><span data-stu-id="4d00e-107">SQL Server uses this attribute to determine the field order for UDTs with multiple fields.</span></span>
  
   - <span data-ttu-id="4d00e-108">Тип должен содержать по крайней мере один член (сериализованные значения не может быть нулевой размер в байтах).</span><span class="sxs-lookup"><span data-stu-id="4d00e-108">The type must contain at least one member (serialized values cannot be zero bytes in size).</span></span>  
  
   - <span data-ttu-id="4d00e-109">Все поля статистического выражения должны быть *непреобразуемыми*; то есть они имеют общее представление в управляемой и неуправляемой памяти и не требуют специальной обработки, упаковщик взаимодействия.</span><span class="sxs-lookup"><span data-stu-id="4d00e-109">All the fields of the aggregate must be *blittable*; that is, they must have a common representation in both managed and unmanaged memory and not require special handling by the interop marshaler.</span></span>  
  
   - <span data-ttu-id="4d00e-110">Все поля, определяемого пользователем типа должны иметь один из следующих типов, которые могут быть сериализованы: `bool`, `byte`, `sbyte`, `short`, `ushort`, `int`, `uint`, `long`, `ulong`, `float` , `double`, <xref:System.Data.SqlTypes.SqlByte>, <xref:System.Data.SqlTypes.SqlInt16>, <xref:System.Data.SqlTypes.SqlInt32>, <xref:System.Data.SqlTypes.SqlInt64>, <xref:System.Data.SqlTypes.SqlDateTime>, <xref:System.Data.SqlTypes.SqlSingle>, <xref:System.Data.SqlTypes.SqlDouble>, <xref:System.Data.SqlTypes.SqlMoney>, или других типов значений определяется пользователем, содержащие один из них поля типы.</span><span class="sxs-lookup"><span data-stu-id="4d00e-110">All the fields of the UDT should be of one of the following types that can be serialized: `bool`, `byte`, `sbyte`, `short`, `ushort`, `int`, `uint`, `long`, `ulong`, `float`, `double`, <xref:System.Data.SqlTypes.SqlByte>, <xref:System.Data.SqlTypes.SqlInt16>, <xref:System.Data.SqlTypes.SqlInt32>, <xref:System.Data.SqlTypes.SqlInt64>, <xref:System.Data.SqlTypes.SqlDateTime>, <xref:System.Data.SqlTypes.SqlSingle>, <xref:System.Data.SqlTypes.SqlDouble>, <xref:System.Data.SqlTypes.SqlMoney>, or other value types defined by the user that contain fields of one of these types.</span></span>  

   - <span data-ttu-id="4d00e-111">Агрегатная функция не должна задавать значение для `MaxByteSize`.</span><span class="sxs-lookup"><span data-stu-id="4d00e-111">The aggregate must not specify a value for `MaxByteSize`.</span></span>  
  
   - <span data-ttu-id="4d00e-112">Статистическое выражение не должен содержать все поля [NonSerialized].</span><span class="sxs-lookup"><span data-stu-id="4d00e-112">The aggregate must not have any [NonSerialized] fields.</span></span>  
  
   - <span data-ttu-id="4d00e-113">Поля не должен быть помечен как явный макет (с <xref:System.Runtime.InteropServices.StructLayoutAttribute.Value?displayProperty=nameWithType> из <xref:System.Runtime.InteropServices.LayoutKind.Explicit?displayProperty=nameWithType>).</span><span class="sxs-lookup"><span data-stu-id="4d00e-113">Fields must not be marked as an explicit layout (with a <xref:System.Runtime.InteropServices.StructLayoutAttribute.Value?displayProperty=nameWithType> of <xref:System.Runtime.InteropServices.LayoutKind.Explicit?displayProperty=nameWithType>).</span></span>  

- `Format.UserDefined`

   <span data-ttu-id="4d00e-114">Требования к `Format.UserDefined` формат:</span><span class="sxs-lookup"><span data-stu-id="4d00e-114">The requirements for the `Format.UserDefined` format are:</span></span>

   - <span data-ttu-id="4d00e-115">Статистическое выражение необходимо указать значение для `MaxByteSize`.</span><span class="sxs-lookup"><span data-stu-id="4d00e-115">The aggregate must specify a value for `MaxByteSize`.</span></span>  
  
   - <span data-ttu-id="4d00e-116">Укажите <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered%2A?displayProperty=nameWithType> свойству атрибута.</span><span class="sxs-lookup"><span data-stu-id="4d00e-116">Specify the <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered%2A?displayProperty=nameWithType> attribute property.</span></span> <span data-ttu-id="4d00e-117">Значение по умолчанию — `false`.</span><span class="sxs-lookup"><span data-stu-id="4d00e-117">The default value is `false`.</span></span>  
  
   - <span data-ttu-id="4d00e-118">Если опустить любое поле в <xref:Microsoft.SqlServer.Server.IBinarySerialize.Read%2A?displayProperty=nameWithType> или <xref:Microsoft.SqlServer.Server.IBinarySerialize.Write%2A?displayProperty=nameWithType> методов, состояние этого поля не сериализуется.</span><span class="sxs-lookup"><span data-stu-id="4d00e-118">If you omit any field in the <xref:Microsoft.SqlServer.Server.IBinarySerialize.Read%2A?displayProperty=nameWithType> or <xref:Microsoft.SqlServer.Server.IBinarySerialize.Write%2A?displayProperty=nameWithType> methods, the state of that field is not serialized.</span></span>  

## Examples  

<span data-ttu-id="4d00e-119">В следующем примере показан `UserDefinedType` атрибут определяемого пользователем ТИПА Point.</span><span class="sxs-lookup"><span data-stu-id="4d00e-119">The following example shows the `UserDefinedType` attribute of the Point UDT.</span></span>  <span data-ttu-id="4d00e-120">Определяемый пользователем тип побайтно упорядоченного, называется «Point», метод проверки с именем «ValidatePoint» и использует собственный формат сериализации.</span><span class="sxs-lookup"><span data-stu-id="4d00e-120">The UDT is byte-ordered, is named "Point", has a validation method named "ValidatePoint", and uses the native serialization format.</span></span>  
  
[!code-csharp[DataWorks SqlUserDefinedTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlUserDefinedTypeAttribute Example/CS/source.cs#1)]
[!code-vb[DataWorks SqlUserDefinedTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlUserDefinedTypeAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Native">
      <MemberSignature Language="C#" Value="Native" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.SqlServer.Server.Format Native = int32(1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.SqlServer.Server.Format.Native" />
      <MemberSignature Language="VB.NET" Value="Native" />
      <MemberSignature Language="C++ CLI" Value="Native" />
      <MemberSignature Language="F#" Value="Native = 1" Usage="Microsoft.SqlServer.Server.Format.Native" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Server.Format</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="4d00e-121">Формат сериализации использует простейший алгоритм, позволяющий SQL Server сохранять на диске эффективное представление пользовательского типа.</span><span class="sxs-lookup"><span data-stu-id="4d00e-121">This serialization format uses a very simple algorithm that enables SQL Server to store an efficient representation of the UDT on disk.</span></span> <span data-ttu-id="4d00e-122">Типами, отмеченными для сериализации <see langword="Native" />, могут быть только типы значений (структуры в Microsoft Visual C# и в Microsoft Visual Basic .NET) в качестве элементов.</span><span class="sxs-lookup"><span data-stu-id="4d00e-122">Types marked for <see langword="Native" /> serialization can only have value types (structs in Microsoft Visual C# and structures in Microsoft Visual Basic .NET) as members.</span></span> <span data-ttu-id="4d00e-123">Члены в виде ссылочных типов (таких как классы Visual C# или Visual Basic), определенных пользователем или существующих в библиотеках класса .NET (например, <see cref="T:System.String" />), не поддерживаются.</span><span class="sxs-lookup"><span data-stu-id="4d00e-123">Members of reference types (such as classes in Visual C# and Visual Basic), either user-defined or those existing in .NET class libraries (such as <see cref="T:System.String" />), are not supported.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Unknown">
      <MemberSignature Language="C#" Value="Unknown" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.SqlServer.Server.Format Unknown = int32(0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.SqlServer.Server.Format.Unknown" />
      <MemberSignature Language="VB.NET" Value="Unknown" />
      <MemberSignature Language="C++ CLI" Value="Unknown" />
      <MemberSignature Language="F#" Value="Unknown = 0" Usage="Microsoft.SqlServer.Server.Format.Unknown" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Server.Format</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="4d00e-124">Формат сериализации неизвестен.</span><span class="sxs-lookup"><span data-stu-id="4d00e-124">The serialization format is unknown.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="UserDefined">
      <MemberSignature Language="C#" Value="UserDefined" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.SqlServer.Server.Format UserDefined = int32(2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.SqlServer.Server.Format.UserDefined" />
      <MemberSignature Language="VB.NET" Value="UserDefined" />
      <MemberSignature Language="C++ CLI" Value="UserDefined" />
      <MemberSignature Language="F#" Value="UserDefined = 2" Usage="Microsoft.SqlServer.Server.Format.UserDefined" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Server.Format</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="4d00e-125">Формат сериализации обеспечивает разработчику полный контроль над форматом двоичных данных, осуществляемый с помощью методов <see cref="M:Microsoft.SqlServer.Server.IBinarySerialize.Write(System.IO.BinaryWriter)" /> и <see cref="M:Microsoft.SqlServer.Server.IBinarySerialize.Read(System.IO.BinaryReader)" />.</span><span class="sxs-lookup"><span data-stu-id="4d00e-125">This serialization format gives the developer full control over the binary format through the <see cref="M:Microsoft.SqlServer.Server.IBinarySerialize.Write(System.IO.BinaryWriter)" /> and <see cref="M:Microsoft.SqlServer.Server.IBinarySerialize.Read(System.IO.BinaryReader)" /> methods.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>
